{"version":3,"sources":["./src/app/admin/question-set-core-form/question-set-core-form.component.ts","./src/app/admin/question-set-core-form/question-set-core-form.component.html","./src/app/admin/services/message-template.service.ts","./src/app/admin/question-set-new/question-set-new.component.ts","./src/app/admin/question-set-new/question-set-new.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/checkout-thankyou/checkout-thankyou.component.ts","./src/app/admin/checkout-thankyou/checkout-thankyou.component.html","./src/app/admin/subscription-dialog/subscription-dialog.component.ts","./src/app/admin/subscription-dialog/subscription-dialog.component.html","./src/app/admin/client-list/client-list.component.ts","./src/app/admin/client-list/client-list.component.html","./src/app/admin/view-order-page/view-order-page.component.ts","./src/app/admin/view-order-page/view-order-page.component.html","./src/app/admin/services/client-search.service.ts","./src/app/admin/checkout/checkout.component.ts","./src/app/admin/checkout/checkout.component.html","./src/app/admin/scale-range-new/scale-range-new.component.ts","./src/app/admin/scale-range-new/scale-range-new.component.html","./src/app/users/users-routing.module.ts","./src/app/companies-admin/company-new/company-new.component.ts","./src/app/companies-admin/company-new/company-new.component.html","./src/app/admin/question-set-list-view/question-set-list-view.component.ts","./src/app/admin/question-set-list-view/question-set-list-view.component.html","./src/app/admin/assessment-tokens-list/assessment-tokens-list.component.ts","./src/app/admin/assessment-tokens-list/assessment-tokens-list.component.html","./src/app/admin/client-edit/client-edit.component.ts","./src/app/admin/client-edit/client-edit.component.html","./src/app/admin/question-edit/question-edit.component.ts","./src/app/admin/question-edit/question-edit.component.html","./src/app/admin/question-new/question-new.component.ts","./src/app/admin/question-new/question-new.component.html","./src/app/admin/label-new/label-new.component.ts","./src/app/admin/label-new/label-new.component.html","./src/app/client-send-invitation/client-send-invitation.component.ts","./src/app/client-send-invitation/client-send-invitation.component.html","./src/app/admin/shop-items/shop-items.component.ts","./src/app/admin/shop-items/shop-items.component.html","./src/app/shared/models/SystemError.ts","./src/app/admin/scale-edit/scale-edit.component.ts","./src/app/admin/scale-edit/scale-edit.component.html","./src/app/admin/order-history/order-history.component.ts","./src/app/admin/order-history/order-history.component.html","./src/app/users/user-list/user-list.component.ts","./src/app/users/user-list/user-list.component.html","./src/app/admin/client-appointment-assignment-edit/client-appointment-assignment-edit.component.ts","./src/app/admin/client-appointment-assignment-edit/client-appointment-assignment-edit.component.html","./src/app/admin/services/assessment-assigner.service.ts","./src/app/admin/question-labels-edit/question-labels-edit.component.ts","./src/app/admin/question-labels-edit/question-labels-edit.component.html","./src/app/companies-admin/companies-list/companies-list.component.ts","./src/app/companies-admin/companies-list/companies-list.component.html","./src/app/admin/services/announcement.service.ts","./src/app/admin/assessment-new/assessment-new.component.ts","./src/app/admin/assessment-new/assessment-new.component.html","./src/app/admin/checkout-status-monitor/checkout-status-monitor.component.ts","./src/app/admin/checkout-status-monitor/checkout-status-monitor.component.html","./src/app/users/user-delete/user-delete.component.ts","./src/app/users/user-delete/user-delete.component.html","./src/app/admin/my-account/my-account.component.ts","./src/app/admin/my-account/my-account.component.html","./src/app/admin/scale-range-edit/scale-range-edit.component.ts","./src/app/admin/scale-range-edit/scale-range-edit.component.html","./src/app/admin/view-order/view-order.component.ts","./src/app/admin/view-order/view-order.component.html","./src/app/admin/label-edit/label-edit.component.ts","./src/app/admin/label-edit/label-edit.component.html","./src/app/admin/assessment-details-view/assessment-details-view.component.ts","./src/app/admin/assessment-details-view/assessment-details-view.component.html","./src/app/users/user-new/user-new.component.ts","./src/app/users/user-new/user-new.component.html","./src/app/admin/scales-list-view/scales-list-view.component.ts","./src/app/admin/scales-list-view/scales-list-view.component.html","./src/app/admin/client-new/client-new.component.ts","./src/app/admin/client-new/client-new.component.html","./src/app/admin/admin-shop/admin-shop.component.ts","./src/app/admin/admin-shop/admin-shop.component.html","./src/app/admin/admin/admin.component.ts","./src/app/admin/admin/admin.component.html","./src/app/admin/assessment-edit/assessment-edit.component.ts","./src/app/admin/assessment-edit/assessment-edit.component.html","./src/app/admin/assessment-view/assessment-view.component.ts","./src/app/admin/assessment-view/assessment-view.component.html","./src/app/admin/admin.module.ts","./src/app/companies-admin/companies-admin-routing.module.ts","./src/app/admin/services/subscription.service.ts","./src/app/companies-admin/company-edit/company-edit.component.ts","./src/app/companies-admin/company-edit/company-edit.component.html","./src/app/admin/announcement-bar/announcement-bar.component.ts","./src/app/admin/announcement-bar/announcement-bar.component.html","./src/app/admin/client-embedded-view/client-embedded-view.component.ts","./src/app/admin/client-embedded-view/client-embedded-view.component.html","./src/app/admin/question-set-edit/question-set-edit.component.ts","./src/app/admin/question-set-edit/question-set-edit.component.html","./src/app/users/user-edit/user-edit.component.ts","./src/app/users/user-edit/user-edit.component.html","./src/app/companies-admin/companies-admin.module.ts","./src/app/admin/billing-plans/billing-plans.component.ts","./src/app/admin/billing-plans/billing-plans.component.html","./src/app/shared/models/save-messages.ts","./src/app/admin/scale-new/scale-new.component.ts","./src/app/admin/scale-new/scale-new.component.html","./src/app/admin/assessment-admin/assessment-admin.component.ts","./src/app/admin/assessment-admin/assessment-admin.component.html","./src/app/admin/client-manage-assignments/client-manage-assignments.component.ts","./src/app/admin/client-manage-assignments/client-manage-assignments.component.html","./src/app/admin/user-upgrade-subscription-notice/user-upgrade-subscription-notice.component.ts","./src/app/admin/user-upgrade-subscription-notice/user-upgrade-subscription-notice.component.html","./src/app/admin/assessment-group-edit/assessment-group-edit.component.ts","./src/app/admin/assessment-group-edit/assessment-group-edit.component.html","./src/app/admin/assessment-list/assessment-list.component.ts","./src/app/admin/assessment-list/assessment-list.component.html","./src/app/admin/cart-widget/cart-widget.component.ts","./src/app/admin/cart-widget/cart-widget.component.html","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { QuestionSet } from '../../shared/models/question-set';\n\n\n@Component({\n  selector: 'app-question-set-core-form',\n  templateUrl: './question-set-core-form.component.html',\n  styleUrls: ['./question-set-core-form.component.css']\n})\nexport class QuestionSetCoreFormComponent implements OnInit {\n\n  @Input() private questionSet:QuestionSet;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public get QuestionSet() {\n    return this.questionSet;\n  }\n\n  public set QuestionSet(v:QuestionSet) {\n    this.questionSet = v;\n  }\n}\n","<form>\n  <div class=\"form-group\">\n    <label for=\"title\">Title:</label>\n    <input class=\"form-control\" type=\"text\" id=\"title\" name=\"title\" [(ngModel)]=\"QuestionSet.title\" />\n  </div>\n  <div class=\"form-group\">\n      <label for=\"instructions\">Instructions:</label>\n      <textarea class=\"form-control h-100\" id=\"instructions\" name=\"instructions\" [(ngModel)]=\"QuestionSet.instructions\"></textarea>\n  </div>\n  <div class=\"form-group\">\n      <label for=\"answerStartValue\">Answer Start Value:</label>\n      <input class=\"form-control\" type=\"number\" id=\"answerStartValue\" name=\"answerStartValue\" [(ngModel)]=\"QuestionSet.answer_start_value\" />\n  </div>\n  <!--<div class=\"form-group\">\n      <label for=\"displayOrder\">Display Order:</label>\n      <input class=\"form-control\" type=\"number\" id=\"displayOrder\" name=\"displayOrder\" [(ngModel)]=\"questionSet.display_order\" />\n  </div>-->\n  <div class=\"form-group\">\n      <label for=\"display_type\">Display Type:</label>\n      <select class=\"form-control browser-default\" id=\"display_type\" name=\"display_type\" name=\"display_type\" [(ngModel)]=\"QuestionSet.display_type\">\n        <option value=\"MultipleChoiceGrid\">Multiple Choice Grid</option>\n        <option value=\"SingleSelectDropdown\">Single Choice Dropdown</option>\n        <option value=\"QuestionList\">Question List</option>\n      </select>\n  </div>\n</form>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Injectable } from \"@angular/core\";\nimport { HTTPService } from \"app/shared/services/http.service\";\nimport { ManagedClient } from \"app/shared/models/managed-client\";\n\n@Injectable()\nexport class MessageTemplateService {\n\n    constructor(private dac$http:HTTPService) {\n    }\n\n    /**\n     * Return the message for a given client.\n     * @param client\n     */\n    public getMessageForClient(client:ManagedClient) {\n\n        return this.dac$http.get<{subject:string,message:string,replyTo:string,testEmail:string,to:string,from:string}>(\"message-templates\", {clientId: client.id}).then(template => {\n            return template;\n        });\n    }\n\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AssessmentService } from \"../../shared/services/assessment.service\";\nimport { QuestionSet } from \"../../shared/models/question-set\";\nimport { Assessment } from \"../../shared/models/assessment\";\n\n@Component({\n  selector: 'app-question-set-new',\n  templateUrl: './question-set-new.component.html',\n  styleUrls: ['./question-set-new.component.css']\n})\nexport class QuestionSetNewComponent implements OnInit {\n\n  private _questionSet:QuestionSet;\n\tprivate assessment:Assessment;\n\n  constructor(\n     private _assessmentService:AssessmentService\n    ,private route:ActivatedRoute\n    ,private router:Router\n    ,private alertService:AlertService\n  ) {\n    this.questionSet = new QuestionSet();\n    this.questionSet.title = \"Untitled\";\n    this.questionSet.id = this._assessmentService.newId();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let setId = params['setId'];\n      this._assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n        });\n    });\n  }\n\n  get questionSet() : QuestionSet {\n    return this._questionSet;\n  }\n\n  set questionSet(v:QuestionSet) {\n    this._questionSet = v;\n  }\n\n  save() {\n    this.assessment.addQuestionSet(this._questionSet);\n\t\tthis._assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Question Set Saved!\")\n        setTimeout(() => {\n          this.router.navigate([\"../\", this._questionSet.id, \"edit\"], {relativeTo: this.route, replaceUrl: true});\n        },1500);\n    }).catch((error) => {\n      this.alertService.error(\"Error occurred in saving. Please try again\");\n      console.error(error);\n    });\n\t}\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n        <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n        <h2 class=\"h2-responsive text-center\">New Question Set</h2>\n    </div>\n</div>\n    <div class=\"row\">\n    <div class=\"col\">\n        <div class=\"card card-cascade narrower\">\n            <div class=\"view gradient-card-header primary-gradient text-light\">\n                <h3 class='h3-responsive text-center'>{{questionSet.title}}</h3>\n            </div>\n            <div class=\"card-body\">\n                <app-question-set-core-form [questionSet]=\"questionSet\"></app-question-set-core-form>\n                <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n            </div>\n        </div>\n    </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\n\nimport { AdminComponent } from \"./admin/admin.component\";\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { ClientNewComponent } from './client-new/client-new.component';\nimport { ClientEditComponent } from './client-edit/client-edit.component';\n\nimport { AssessmentAdminComponent } from \"./assessment-admin/assessment-admin.component\";\nimport { AssessmentListComponent } from \"./assessment-list/assessment-list.component\";\nimport { AssessmentNewComponent } from \"./assessment-new/assessment-new.component\";\nimport { AssessmentEditComponent } from \"./assessment-edit/assessment-edit.component\";\nimport { AssessmentResultViewComponent } from \"app/reports/assessment-result-view/assessment-result-view.component\";\n\nimport { QuestionSetEditComponent } from \"./question-set-edit/question-set-edit.component\";\nimport { QuestionSetNewComponent } from \"./question-set-new/question-set-new.component\";\n\nimport { ScaleNewComponent } from \"./scale-new/scale-new.component\";\nimport { ScaleEditComponent } from \"./scale-edit/scale-edit.component\";\n\nimport { QuestionNewComponent } from './question-new/question-new.component';\nimport { QuestionEditComponent } from './question-edit/question-edit.component';\n\nimport { LabelNewComponent } from './label-new/label-new.component';\nimport { LabelEditComponent } from './label-edit/label-edit.component';\n\nimport { ScaleRangeNewComponent } from './scale-range-new/scale-range-new.component';\nimport { ScaleRangeEditComponent } from './scale-range-edit/scale-range-edit.component';\n\nimport {AdminGuard } from \"../login/services/admin-guard.service\"\n\nimport { AdminShopComponent } from './admin-shop/admin-shop.component';\nimport { ShopItemsComponent } from './shop-items/shop-items.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { CheckoutThankyouComponent } from './checkout-thankyou/checkout-thankyou.component';\n\nimport { MyAccountComponent } from \"./my-account/my-account.component\";\nimport { ViewOrderPageComponent } from \"./view-order-page/view-order-page.component\";\n\nimport {ReportViewerComponent} from \"../reports/report-viewer/report-viewer.component\";\n\nimport {AssessmentGroupEditComponent} from \"./assessment-group-edit/assessment-group-edit.component\";\nimport { UsersModule} from \"../users/users.module\";\nimport { CompaniesAdminModule } from 'app/companies-admin/companies-admin.module';\nimport { AssessmentViewComponent } from 'app/admin/assessment-view/assessment-view.component';\nimport { ScalesListViewComponent } from \"./scales-list-view/scales-list-view.component\";\nimport { QuestionSetListViewComponent } from \"./question-set-list-view/question-set-list-view.component\";\nimport { AssessmentDetailsViewComponent } from 'app/admin/assessment-details-view/assessment-details-view.component';\nimport { OrderHistoryComponent } from './order-history/order-history.component';\nimport { AccountOwnerSettingsComponent } from 'app/account-owner-settings/account-owner-settings.component';\nimport { BillingDetailsComponent } from 'app/shared/billing-details/billing-details.component';\nimport { BillingPlansComponent } from './billing-plans/billing-plans.component';\nimport { AssetResultViewComponent } from 'app/reports/asset-result-view/asset-result-view.component';\nimport { ExerciseListComponent } from 'app/library-assets/exercise-list/exercise-list.component';\nimport { AdminViewAssetComponent } from 'app/library-assets/admin-view-asset/admin-view-asset.component';\nimport { AssetNewComponent } from 'app/library-assets/asset-new/asset-new.component';\nimport { ClientEmbeddedViewComponent } from './client-embedded-view/client-embedded-view.component';\nimport { QuestionnaireResultViewComponent } from 'app/reports/questionnaire-result-view/questionnaire-result-view.component';\nimport { AdminLoginComponent } from 'app/login/admin-login/admin-login.component';\nimport { AdminLoginFinalizeComponent } from 'app/login/admin-login-finalize/admin-login-finalize.component';\nimport { ClientAppointmentAssignmentEdit } from './client-appointment-assignment-edit/client-appointment-assignment-edit.component';\n\n// TODO: stephen not sure why I need this function instead of a lambda\nexport function ReturnUsersModules() {\n  return UsersModule;\n}\n\nexport function ReturnCompaniesAdminModules() {\n  return CompaniesAdminModule;\n}\n\nexport const adminRoutes: Routes = [{\n    path: '',\n    component: AdminComponent,\n    canActivate: [],\n    children: [\n      {\n        path: '',\n        children: [\n          { path: 'client', children: [\n            { path: 'new',  component: ClientNewComponent }\n            ,{ path: ':id',  children: [\n                {path: '', component: ClientEditComponent }\n                ,{path: 'result/:resultId', component: AssessmentResultViewComponent }\n                ,{path: 'asset-result/:resultId', component: AssetResultViewComponent }\n                ,{path: 'questionnaire-result/:resultId', component: QuestionnaireResultViewComponent }\n                ,{path: 'report/:reportId/:assignmentId', component: ReportViewerComponent }\n                ,{path: 'embed', component: ClientEmbeddedViewComponent, children: [\n                  {path: 'result/:resultId', component: AssessmentResultViewComponent }\n                  ,{path: 'asset-result/:resultId', component: AssetResultViewComponent }\n                  ,{path: 'report/:reportId/:assignmentId', component: ReportViewerComponent }\n                  ,{path: 'questionnaire-result/:resultId', component: QuestionnaireResultViewComponent }\n                ]}\n            ]}\n            ,{ path: '', component: ClientListComponent}\n          ]}\n          ,{path: 'client-appointment/:id', component:ClientAppointmentAssignmentEdit }\n          ,{path: 'users', 'loadChildren': () => import('../users/users.module').then(m => m.UsersModule)}\n          ,{path: 'companies', loadChildren: () => import('../companies-admin/companies-admin.module').then(m => m.CompaniesAdminModule) }\n          ,{path: 'system', loadChildren: () => import('./system-overview/system-overview.module').then(m => m.SystemOverviewModule)}\n\n          // TODO: stephen would this be better as a child component of client?\n\n          // ,{ path: 'shop', component: AdminShopComponent }\n          ,{ path: 'shop', children: [\n            { path: '', component: ShopItemsComponent }\n            ,{ path: 'checkout/thankyou', component: CheckoutThankyouComponent }\n            ,{ path: 'checkout', component: CheckoutComponent }\n          ]}\n\n\n          ,{ path: 'assessment', component: AssessmentAdminComponent,\n            children: [\n              {path: 'batteries', component: AssessmentGroupEditComponent}\n              ,{path: 'custom-reports', loadChildren: () => import('../manage-reports/manage-reports.module').then(m => m.ManageReportsModule) }\n              ,{path: 'manage', children: [\n                { path: '',component: AssessmentListComponent}\n                ,{ path: 'new', component: AssessmentNewComponent }\n                ,{ path: ':uid/view', component: AssessmentViewComponent, children: [\n                  { path: '', redirectTo: 'details', pathMatch: 'prefix' }\n                  ,{ path: 'details', component: AssessmentDetailsViewComponent }\n                  ,{ path: 'scales', component: ScalesListViewComponent }\n                  ,{ path: 'sets', component: QuestionSetListViewComponent }\n                ] }\n                ,{ path: ':uid/edit', component: AssessmentEditComponent, children: [] }\n                ,{ path: ':uid/edit/question-set', children: [\n                  { path: ':setId/edit', component: QuestionSetEditComponent }\n                  ,{ path: 'new', component: QuestionSetNewComponent }\n                ] }\n                // even though it seems question is a sub of question-set we have no router outlet\n                // for it... we want it to replace the entire screen... so... we do this.\n                ,{ path: ':uid/edit/question-set/:setId/edit/question', children: [\n                    {path: 'new', component: QuestionNewComponent}\n                    ,{path: ':questionId/edit', component: QuestionEditComponent}\n                  ] }\n                ,{ path: ':uid/edit/question-set/:setId/edit/label', children: [\n                    {path: 'new', component: LabelNewComponent}\n                    ,{path: ':labelId/edit', component: LabelEditComponent}\n                  ] }\n                ,{ path: ':uid/edit/scale', children: [\n                  { path: ':scaleId/edit', component: ScaleEditComponent }\n                  ,{ path: 'new', component: ScaleNewComponent }\n                ] }\n                ,{ path: ':uid/edit/scale/:scaleId/edit/scale-range', children: [\n                    {path: 'new', component: ScaleRangeNewComponent}\n                    ,{path: ':rangeId/edit', component: ScaleRangeEditComponent}\n                  ] }\n              ]}\n            ]\n          }\n\n          // library assets\n          , { path: 'library/:type', component: ExerciseListComponent, children: [] }\n          , { path: 'library/:type/new', component: AssetNewComponent, children: [] }\n          , { path: 'library/:type/:assetId', component: AdminViewAssetComponent, children: [] }\n\n          ,{ path: 'my-account', component: MyAccountComponent, children: [\n            { path: 'order', component: OrderHistoryComponent }\n            , { path: 'order/:id', component: ViewOrderPageComponent}\n            ,{ path: 'billing', component: BillingDetailsComponent }\n            ,{ path: 'plans', component: BillingPlansComponent }\n            ,{ path: 'company', component: AccountOwnerSettingsComponent }\n            , { path: '', pathMatch: 'full', redirectTo: '/admin/my-account/order' }\n          ]}\n          ,{ path: '**', redirectTo: '/std/admin/client', pathMatch: 'full'}\n\n //\n\n  // { path: 'assessments/:uid/edit/scale/new', component: AssessmentScaleNewComponent },\n  // { path: 'assessments/:uid/edit/scale/:scaleId/edit', component: AssessmentScaleEditComponent },\n\n  // { path: 'assessments/:uid/edit/scale/:scaleId/edit/scale-range/new', component: AssessmentScaleRangeNewComponent },\n  // { path: 'assessments/:uid/edit/scale/:scaleId/edit/scale-range/:rangeId/edit', component: AssessmentScaleRangeEditComponent },\n\n  // { path: 'assessments/:uid/edit/questionSet/new', component: QuestionSetNewComponent },\n  // { path: 'assessments/:uid/edit/questionSet/:setId/edit', component: QuestionSetEditComponent },\n\n  // { path: 'assessments/:uid/edit/questionSet/:setId/edit/question/new', QuestionNewComponent  },\n  // { path: 'assessments/:uid/edit/questionSet/:setId/edit/question/:questionId', QuestionEditComponent  },\n\n  // { path: 'assessments/:uid/edit/questionSet/:setId/edit/label/new', QuestionSetLabelNewComponent  },\n  // { path: 'assessments/:uid/edit/questionSet/:setId/edit/label/:labelId', QuestionSetLabelEditComponent  },\n\n        ]\n    }\n  ]\n}];\n@NgModule({\n  imports: [\n    RouterModule.forChild(adminRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AdminRoutingModule {}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {OrderService} from \"../../shared/services/order.service\";\nimport {Order} from \"../../shared/models/order\"\nimport { ShoppingService } from 'app/shared/services/shopping.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'app/shared/services/alert.service';\n\n@Component({\n  selector: 'app-checkout-thankyou',\n  templateUrl: './checkout-thankyou.component.html',\n  styleUrls: ['./checkout-thankyou.component.css']\n})\nexport class CheckoutThankyouComponent implements OnInit, OnDestroy {\n\n  private _order:Order;\n  private _hasLoadedOrder:boolean;\n  private _hasFinishedSingleOrderSetup:boolean;\n\n  constructor(\n    private orderService:OrderService\n    ,private shoppingService:ShoppingService\n    ,private router:Router\n    ,private alertService:AlertService\n  ) {\n    this._hasLoadedOrder = false;\n    this._hasFinishedSingleOrderSetup = false;\n  }\n\n  ngOnDestroy() {\n    if (this.isSingleCheckoutOrder) {\n      this.shoppingService.endSingleItemCheckout();\n    }\n  }\n\n  ngOnInit() {\n    this.orderService.getLastOrder().then((order:Order) => {\n      this._hasLoadedOrder = true;\n      this._order = order;\n    })\n    .catch((error) =>{\n      console.error(error);\n      this._hasLoadedOrder = true;\n    })\n\n      // TODO: stephen this is very hacky... but we will do it for now until we can re-arrange the assessment integration\n    if (this.isSingleCheckoutOrder) {\n      let assignmentCompleteAlerts = setInterval(() => {\n        if (this.alertService.getAlertCount() <= 0) {\n          clearInterval(assignmentCompleteAlerts);\n          this._hasFinishedSingleOrderSetup = true;\n        }\n      }, 250);\n    }\n  }\n\n  public get order() {\n    return this._order;\n  }\n\n  public get isSingleCheckoutOrder() {\n    return this.shoppingService.isSingleCheckoutOrder();\n  }\n\n  public get hasFinishedSingleOrderSetup() {\n    return this._hasFinishedSingleOrderSetup;\n  }\n\n  public returnFromOrder() {\n    let returnUrl = this.shoppingService.getSingleItemCheckoutReturnUrl();\n    this.router.navigateByUrl(returnUrl);\n  }\n\n  public get hasLoadedOrder() {\n    return this._hasLoadedOrder;\n  }\n}\n","<div class=\"row\" *ngIf=\"!hasLoadedOrder\">\n  <div class=\"col\">\n    <p class=\"alert alert-warning\">\n      <app-spin-icon></app-spin-icon>Loading order information...</p>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"hasLoadedOrder\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"col card card-cascade wider mb-3\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n          <h1 class=\"h1-responsive\">Thank you!</h1>\n        </div>\n        <div class=\"card card-body\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <p>Your purchase is complete. Your order receipt is listed below for your information</p>\n              <p *ngIf=\"isSingleCheckoutOrder && hasFinishedSingleOrderSetup\" class=\"h6\">\n                You can now go back to your client or client list by clicking the Continue button.\n                <input type='button' class=\"btn btn-primary\" value=\"Continue\" (click)=\"returnFromOrder()\" />\n              </p>\n              <p *ngIf=\"isSingleCheckoutOrder && !hasFinishedSingleOrderSetup\" class=\"h6\">\n                  Your assessments are now being setup for your client.  Please wait...\n                  <input type='button' class=\"btn btn-primary\" value=\"Continue\"  disabled=\"disabled\" />\n                </p>\n              <p *ngIf=\"!isSingleCheckoutOrder\">Ready to use your purchased tokens?\n                <input type='button' class=\"btn btn-primary\" value=\"Manage your Clients\" [routerLink]=\"['/admin', 'client']\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col card card-cascade wider\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n          <h3 class=\"h3-responsive\">Payment Receipt</h3>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <p *ngIf=\"!order\" class=\"alert alert-danger\">We're sorry your last payment could not be retrieved. contact customer support for assistance</p>\n            </div>\n          </div>\n          <div class=\"row\">\n            <view-order class=\"col\" *ngIf=\"order\" [order]=\"order\"></view-order>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport {Modal} from \"ngx-modal\";\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { SubscriptionService } from '../services/subscription.service';\n\n@Component({\n  selector: 'dac-subscription-dialog',\n  templateUrl: './subscription-dialog.component.html',\n  styleUrls: ['./subscription-dialog.component.scss']\n})\nexport class SubscriptionDialogComponent {\n\n  constructor(\n    private subscriptionService:SubscriptionService\n    ,private router:Router\n    ,private dialogRef:MatDialogRef<SubscriptionDialogComponent>\n  ) {\n    console.log(\"got here\");\n  }\n\n  public close() {\n    this.closeDialog();\n  }\n\n  public goToSubscriptionSignup() {\n    let pageRoute = this.subscriptionService.getSubscriptionPageRoute();\n    this.router.navigate(pageRoute).then(() => {\n      this.closeDialog();\n    });\n  }\n\n  private closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<div></div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h4 class=\"h4-responsive modal-title text-center\">\n        Subscription Required\n        <i class=\"fa fa-times float-right\" (click)=\"close()\"></i>\n      </h4>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <hr />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col text-center\">\n        <p>The action you have requested requires an active subscription.</p>\n    </div>\n  </div>\n  <div class=\"row\">\n      <div class=\"col text-center\">\n          <input type=\"button\" class=\"btn btn-primary\" value=\"Activate your Subscription Today!\" (click)=\"goToSubscriptionSignup()\" />\n      </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <hr />\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ChangeDetectorRef, OnDestroy, HostBinding } from '@angular/core';\nimport { ManagedClient } from \"../../shared/models/managed-client\";\nimport { DacConfig } from \"../../shared/services/dac-config.service\";\nimport { AuthService } from 'app/login/services/auth.service';\nimport { ClientSearchService } from '../services/client-search.service';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { User } from 'app/shared/models/user';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { Capability } from 'app/shared/models/capability';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SubscriptionService } from '../services/subscription.service';\nimport { Role } from 'app/shared/models/role';\n\n@Component({\n    selector: 'app-client-list',\n    templateUrl: './client-list.component.html',\n    styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit,OnDestroy {\n\n    private _clients: ManagedClient[];\n    private _userSubscription:ISubscription;\n    private _userHasActiveServiceSubscription:boolean;\n    private _currentUser:User;\n    public showTokens: Boolean;\n    public searchFirstName: string;\n    public searchLastName: string;\n    public searchClientID: string;\n    public searchEmail: string;\n    public isSearching:boolean;\n    public tokensEnabled:boolean;\n\n    /**\n     * Used for tracking with the name search is valid or not.\n     */\n    public searchByNameInvalid: boolean;\n\n    constructor(\n        private changeRef: ChangeDetectorRef,\n        private authService: AuthService,\n        private dacConfig: DacConfig,\n        private clientSearchService: ClientSearchService,\n        private alertService:AlertService,\n        private router:Router,\n        private subscriptionService:SubscriptionService,\n        private route:ActivatedRoute\n    ) {\n        this._clients = [];\n        this.tokensEnabled = false;\n        this.isSearching = false;\n        this._userSubscription = this.authService.getLoginState().subscribe(loginState => {\n            this._currentUser = loginState.user;\n            if (this.dacConfig.isFeatureEnabled(\"assessments.tokens.enabled\")) {\n                if (loginState.user && loginState.user.hasCapability(Capability.CAN_BUY_TOKENS)) {\n                    this.tokensEnabled = true;\n                }\n            }\n            if (loginState.user) {\n                this._userHasActiveServiceSubscription = loginState.user.hasActiveSubscription();\n            }\n            // we don't allow show all users to work if they don't have permission to this.\n            if (this._currentUser.role > Role.Admin) {\n                this.clientSearchService.ShowAllUsers = false;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this._userSubscription.unsubscribe();\n    }\n\n    ngOnInit() {\n        this.getDefaultClientList();\n    }\n\n    public get Clients(): ManagedClient[] {\n        return this._clients;\n    }\n\n    public hasMoreResults(): boolean {\n        return this.clientSearchService.hasMoreResults();\n    }\n\n    public get lastSearchValue() {\n        return this.clientSearchService.SearchValue;\n    }\n\n    public addClient() {\n        if (this.canAddClient) {\n            this.router.navigate(['new'], {relativeTo: this.route});\n        }\n        else {\n            this.subscriptionService.notifySubscriptionRequired();\n        }\n    }\n\n    public get canAddClient() {\n        return this.dacConfig.isFeatureEnabled(\"client.add\") && this._userHasActiveServiceSubscription;\n    }\n\n    public get showAllUsers() {\n        return this.clientSearchService.ShowAllUsers;\n    }\n\n    public get exactMatch() {\n        return this.clientSearchService.ExactMatch;\n    }\n\n    public toggleAllUsers() {\n        this.clientSearchService.ShowAllUsers = !this.clientSearchService.ShowAllUsers;\n        this.resetSearch(); // clear out the search since we changed the toggle here.\n    }\n\n    public toggleExactMatch() {\n        this.clientSearchService.ExactMatch = !this.clientSearchService.ExactMatch;\n    }\n\n    public doSearch() {\n        this.searchByNameInvalid = false;\n        let firstName = this.searchFirstName || \"\";\n        let lastName = this.searchLastName || \"\";\n        let clientID = this.searchClientID || \"\";\n        let email = this.searchEmail || \"\";\n        if (!(clientID || email)\n            && (firstName == \"\" || lastName == \"\")) {\n            this.searchByNameInvalid = true;\n            this.alertService.error(\"Missing client id, or first and last name to do search\");\n            return;\n        }\n        this.runSearch(firstName, lastName, clientID, email);\n    }\n\n    public resetSearch() {\n        this.searchByNameInvalid = false;\n        this.searchFirstName = \"\";\n        this.searchLastName = \"\";\n        this.searchClientID = \"\";\n        this.searchEmail = \"\";\n        this._clients = [];\n        this.runSearch(this.searchFirstName, this.searchLastName, this.searchClientID, this.searchEmail);\n    }\n\n    private runSearch(firstName, lastName, clientID, email) {\n        this.isSearching = true;\n        let user = this.getUserForQuery();\n        let search = {\n            firstName: firstName.trim()\n            ,lastName: lastName.trim()\n            ,id: clientID.trim()\n            ,email: encodeURIComponent(email.trim())\n            ,exactMatch: this.exactMatch === true\n        };\n        this._clients = []; // clear our client list as we are doing a search.\n        this.clientSearchService.search(search, user).then((results) => {\n            this._clients = results;\n            this.isSearching = false;\n        })\n        .catch((error) => this.handleSearchError(error));\n    }\n\n    public loadMore(): void {\n        this.isSearching = true;\n        this.clientSearchService.loadMore().then((results) => {\n            this.isSearching = false;\n            this._clients = results;\n        })\n        .catch(error => this.handleSearchError(error));\n    }\n\n    private getUserForQuery() {\n        if (this.clientSearchService.ShowAllUsers) {\n            return null;\n        }\n        return this._currentUser;\n    }\n\n    private getDefaultClientList() {\n        let user = this.getUserForQuery();\n        this.isSearching = true;\n\n        this.clientSearchService.getClientList(user).then((results: ManagedClient[]) => {\n            this.isSearching = false;\n            this._clients = results;\n            this.changeRef.detectChanges();\n        })\n        .catch(error => this.handleSearchError(error));\n    }\n\n    private handleSearchError(error) {\n        this.alertService.error(\"There was an error retrieving the results from the server.  Please check your network connection and try again or contact support\");\n        console.error(error);\n        this.isSearching = false;\n    }\n}\n","<div class=\"col-12\">\n    <h1>Patients List\n       <!-- <input (click)=\"addClient()\" type=\"button\" class=\"btn btn-add-client btn-primary\"\n            value=\"Add Client\" />\n            <input *ngIf=\"tokensEnabled && !showTokens\" type=\"button\" class=\"btn btn-secondary\"\n            (click)=\"showTokens = true\"\n            value=\"Show Tokens\" />\n            <input *ngIf=\"tokensEnabled && showTokens\" type=\"button\" class=\"btn btn-secondary\"\n            (click)=\"showTokens = false\"\n            value=\"Hide Tokens\" /> -->\n    </h1>\n    <dac-assessment-tokens-list *ngIf=\"showTokens\" class=\"mb-5\"></dac-assessment-tokens-list>\n    <!-- <search-input (search)=\"doSearch($event)\" (reset)=\"resetSearch()\" [initialSearch]=\"lastSearchValue\" class=\"mb-2\"></search-input> -->\n    <form #searchForm=\"ngForm\" class=\"form-horizontal\">\n        <div class=\"search row\">\n            <div class=\"col-6 col-sm-4 col-xl-5\">\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"{'text-red':searchByNameInvalid}\"\n                  placeholder=\"First name...\" [(ngModel)]=\"searchFirstName\" #firstName name=\"firstName\" (keyup.enter)=\"doSearch()\">\n            </div>\n            <div class=\"col-6 col-sm-4 col-xl-5\">\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"{'text-red':searchByNameInvalid}\"\n                  placeholder=\"Last name...\" (keyup.enter)=\"doSearch()\" [(ngModel)]=\"searchLastName\" #lastName name=\"lastName\">\n            </div>\n            <div class=\"col-6 col-sm-4 col-xl-2\">\n              <span class=\"input-group-btn\">\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"doSearch()\">Search</button>\n\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetSearch()\">\n                    <i class=\"fa fa-refresh\" aria-hidden=\"true\" aria-label=\"Reset\" ></i></button>\n              </span>\n            </div>\n\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                    <small [ngClass]=\"{'alert alert-danger text-bold': searchByNameInvalid}\">The first four letters of the last name and the first letter of the first name is required to search.\n                        Last names less than four characters will only return exact matches for the last name.</small>\n            </div>\n        </div>\n        <div class=\"row mb-2 mt-2\">\n            <details class=\"col\">\n                <summary>Advanced Search Options<i class='fa fa-question-circle-o' mdbTooltip=\"Click here to show advanced search filters such as showing the clients for all of the users in your company\" placement=\"top\" mdbWavesEffect></i></summary>\n                <div class=\"row\" *hasPermission=\"'Admin'\">\n                    <div class=\"col\">\n                        <input id=\"showAllUsers\"type=\"checkbox\" (click)=\"toggleAllUsers()\" [checked]=\"showAllUsers\" name=\"showAllUsers\" />\n                        <label for=\"showAllUsers\">Show all clients for all users in your organization</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <input id=\"exactMatch\" type=\"checkbox\" (click)=\"toggleExactMatch()\" [checked]=\"exactMatch\" name=\"exactMatch\" />\n                        <label for=\"exactMatch\">Only show results that match fields exactly.</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\"\n                            placeholder=\"Search by Unique ID...\" [(ngModel)]=\"searchClientID\" #clientID=\"ngModel\" name=\"clientID\">\n                    </div>\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\"\n                            placeholder=\"Search by Exact Email...\" [(ngModel)]=\"searchEmail\" (keyup.enter)=\"doSearch()\" #clientID=\"ngModel\" name=\"searchEmail\">\n                    </div>\n                </div>\n            </details>\n        </div>\n    </form>\n    <p class=\"alert alert-info\" *ngIf=\"!isSearching && Clients.length == 0\">No clients found.  Either adjust your search or add a new client!</p>\n    <div class=\"clientList\" *ngIf=\"Clients.length\">\n        <div class=\"row list-group-item primary-gradient p-3 text-light\">\n            <div class=\"col-12\">\n                <div class=\"row\">\n                    <div [ngClass]=\"{'col-6': !showAllUsers, 'col-4':showAllUsers}\">Client\n                            <i class='fa fa-question-circle-o' mdbTooltip=\"This is your client profile\" placement=\"right\" mdbWavesEffect></i>\n                    </div>\n                    <div *ngIf=\"showAllUsers\" class=\"col-2\">Assigned User</div>\n                    <div class=\"col-2\">Date Assigned <i class='fa fa-question-circle-o' mdbTooltip=\"The date a battery or single assessment was assigned.\" placement=\"right\" mdbWavesEffect></i></div>\n                    <div class=\"col-2\">Completed<i class='fa fa-question-circle-o' mdbTooltip=\"The number of individual assessments a client has completed out of the total number they have assigned\" placement=\"right\" mdbWavesEffect></i></div>\n                    <div class=\"col-2 text-center\">Action</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row list-group-item\" *ngFor=\"let client of Clients\">\n            <div class=\"col-12\">\n                <div class=\"row\">\n                    <div [ngClass]=\"{'col-6': !showAllUsers, 'col-4':showAllUsers}\">\n                        <h4 class=\"d-inline\"><i class=\"fa fa-user pr-2\"></i></h4><a [routerLink]=\"['../',client.id]\">{{client.getDisplayString()}}</a>\n                        <h6><i class=\"fa fa-key pt-2 pr-2 h4-responsive\"></i>{{client.getDisplayId()}}</h6>\n                        <h6 *ngIf=\"client.email\"><i class=\"fa fa-envelope pr-2 h4-responsive\"></i>{{client.email}}</h6>\n                    </div>\n                    <div *ngIf=\"showAllUsers\" class=\"col-2\">{{client.user?.getDisplayName()}}</div>\n                    <div class=\"col-2\"></div>\n                    <div class=\"col-2\">\n                    </div>\n                    <div class=\"col-2 text-center\">\n                            <button type=\"button\" class=\"btn btn-primary p-2 p-md-3\" [routerLink]=\"['../',client.id]\">\n                                <i class=\"fa fa-eye d-block d-sm-none\"></i>\n                                <span class=\"d-none d-sm-block\">View</span>\n                            </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12\" *ngIf=\"client.assignments.length == 0\">\n                    <div class=\"row mb-2\">\n                            <div class=\"col-6 pl-4 pl-sm-5\" >\n                                No assessments assigned.\n                            </div>\n                        </div>\n            </div>\n            <div class=\"col-12\" *ngFor=\"let assignment of client.assignments\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-6 pl-4 pl-sm-5\" >\n                            <i class=\"fa fa-clipboard\" *ngIf=\"!assignment.isGroup && assignment.type!='LibraryAsset'\"></i>\n                            <i class=\"fa fa-file-text\" *ngIf=\"assignment.type=='LibraryAsset'\"></i>\n                            <i class=\"fa fa-folder\" *ngIf=\"assignment.isGroup\"></i>\n                            {{assignment.Name}}\n                        </div>\n                        <div class=\"col-2\">{{assignment.DateAssigned|date:'mediumDate'}}</div>\n                        <div class=\"col-2\">\n                            <span *ngIf=\"assignment.IsComplete\">{{assignment.DateCompleted|date:'mediumDate'}} - {{assignment.getAssignmentsCompleted()}}/{{assignment.getTotalAssignments()}}</span>\n                            <span *ngIf=\"!assignment.IsComplete\">Incomplete - {{assignment.getAssignmentsCompleted()}}/{{assignment.getTotalAssignments()}}</span>\n                        </div>\n                        <div class=\"col-2\">\n                        </div>\n                    </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"hasMoreResults() || isSearching\">\n        <div class=\"col\">\n            <button class=\"btn btn-primary\" (click)=\"loadMore()\" [disabled]=\"isSearching\">\n                <span *ngIf=\"!isSearching\">Load More</span>\n                <span *ngIf=\"isSearching\">Loading...</span>\n            </button>\n            <app-spin-icon *ngIf=\"isSearching\"></app-spin-icon>\n        </div>\n    </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrderService } from \"../../shared/services/order.service\";\nimport { Order } from \"../../shared/models/order\";\n\n@Component({\n  selector: 'app-view-order-page',\n  templateUrl: './view-order-page.component.html',\n  styleUrls: ['./view-order-page.component.css']\n})\nexport class ViewOrderPageComponent implements OnInit {\n  private _order:Order;\n\n  constructor(\n    private route:ActivatedRoute\n    ,private orderService:OrderService\n  ) {\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let orderId = +params['id'];\n      // TODO: stephen check for Nan\n      this.orderService.getOrder(orderId)\n        .then((order:Order) => {\n          if (order == null) {\n            // TODO: stephen handle not found order.\n            console.error(\"Order not found\");\n          }\n          this._order = order;\n          console.log(\"order found: \", this._order);\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    });\n  }\n\n  get order() {\n    return this._order;\n  }\n\n}\n","<h3 class=\"h3-responsive\">Payment: {{order?.id}} <a class=\"btn btn-primary\" [routerLink]=\"['/admin', 'my-account']\">Back to Payment History</a></h3>\n<view-order [order]=\"order\"></view-order>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { ClientService } from \"../../shared/services/client.service\";\nimport { ManagedClient } from \"../../shared/models/managed-client\";\nimport { PaginatedResultsLoader } from \"../../shared/models/paginated-results-loader\";\nimport { PaginatedResultsLoaderFactory } from \"../../shared/services/pagination-results-loader-factory.service\";\nimport { User } from \"../../shared/models/user\";\nimport { Injectable } from \"@angular/core\";\nimport { AuthService } from \"../../login/services/auth.service\";\nimport { SubscriptionLike as ISubscription } from \"rxjs\";\n\n@Injectable()\nexport class ClientSearchService {\n\n    private _searchValue:{firstName?:string, lastName?:string, id?:string};\n    private _resultsLoader:PaginatedResultsLoader<ManagedClient>;\n    private _clients:ManagedClient[];\n    private _searchUser:User;\n    private _showAllUsers:boolean;\n    private _exactMatch:boolean;\n    private _userSubscription:ISubscription;\n    private _clientSubscription:ISubscription;\n\n    constructor(private _clientService:ClientService, private _paginationFactory:PaginatedResultsLoaderFactory\n        , private authService:AuthService) {\n        this._showAllUsers = false;\n        this._clients = [];\n        // when we get a new client let's make sure the client always displays when a user is added.\n        this._clientSubscription = this._clientService.getClientObservable().subscribe(c => {\n            if (!c) { // TODO: stephen we are using behaviorsubject which returns the first value on init... not sure I like this and we should\n                // try doing this differently.\n                return; // skip any invalid input\n            }\n\n            if (this.hasClientInResults(c)) {\n                this.updateClient(c);\n            }\n            else {\n                this.handleNewClient(c);\n            }\n        });\n\n        this._userSubscription = this.authService.getLoginState().subscribe(state => {\n            if (!state.isLoggedIn) {\n                this.clearSearch();\n            }\n        });\n\n        this.restoreSearchSettings();\n\n    }\n\n    private restoreSearchSettings() {\n        if (localStorage) {\n            let clientSearchData = localStorage.getItem('ClientSearchService');\n            if (clientSearchData !== null) {\n                try {\n                    let data = JSON.parse(clientSearchData);\n                    if (data.hasOwnProperty('_showAllUsers')) {\n                        this._showAllUsers = data._showAllUsers === true;\n                    }\n\n                    if (data.hasOwnProperty('_exactMatch')) {\n                        this._exactMatch = data._exactMatch === true;\n                    }\n                }\n                catch (error) {\n                    console.error(\"Failed to extract ClientSearchService data\", error);\n                }\n            }\n        }\n    }\n\n    private saveSearchSettings() {\n        if (localStorage) {\n            let clientSearchData = {\n                _showAllUsers: this._showAllUsers\n                ,_exactMatch: this._exactMatch\n            };\n            try {\n                localStorage.setItem(\"ClientSearchService\", JSON.stringify(clientSearchData));\n            } catch (error) {\n                console.error(\"Failed to save ClientSearchService data\", error);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._userSubscription.unsubscribe();\n        this._clientSubscription.unsubscribe();\n    }\n\n    get SearchValue() {\n        return this._searchValue;\n    }\n\n    set SearchValue(v:{firstName?:string, lastName?:string, clientID?:string}) {\n        this._searchValue = v;\n    }\n\n    get ShowAllUsers() : boolean {\n        return this._showAllUsers;\n    }\n\n    set ShowAllUsers(v:boolean) {\n        this._showAllUsers = v;\n        this.saveSearchSettings();\n    }\n\n    get ExactMatch() : boolean {\n        return this._exactMatch;\n    }\n\n    set ExactMatch(v:boolean) {\n        this._exactMatch = v;\n        this.saveSearchSettings();\n    }\n\n    public clearSearch() {\n        this._resultsLoader = null;\n        this._searchUser = null;\n        this._searchValue = {};\n        this._clients = [];\n    }\n\n    private hasClientInResults(c:ManagedClient) {\n        let id = c.id || null;\n        return this._clients.find(c => c.id == id) != null;\n    }\n    private updateClient(c:ManagedClient) {\n        let id = c.id || null;\n        let index = this._clients.findIndex(c => c.id == id);\n        let assignedUserId = c.user ? c.user.id : null;\n        // if we updated who the client is assigned to... we need to remove them from the search results\n        if (this._searchUser && assignedUserId != this._searchUser.id) {\n            this._clients.splice(index, 1);\n        }\n        else {\n            this._clients[index] = c;\n        }\n    }\n\n    private handleNewClient(c:ManagedClient) {\n        if (this._searchValue != null) {\n            this.search(this._searchValue, this._searchUser);\n        }\n        else {\n            this._clients.unshift(c);\n        }\n    }\n\n    public search(search:{firstName?:string, lastName?:string, id?:string}, user:User) : Promise<ManagedClient[]> {\n        this.clearSearch();\n\n        this._searchUser = user;\n        this._searchValue = search;\n        let queryFunction = this._clientService.searchClientList.bind(this._clientService, search, user);\n        this._resultsLoader = this._paginationFactory.getResultsLoader<ManagedClient>(queryFunction);\n        return this._resultsLoader.getResults()\n            .then((results:ManagedClient[]) => {\n                this._clients = results;\n                return results;\n        });\n    }\n\n    public hasMoreResults() : boolean {\n        return this._resultsLoader.hasMoreResults();\n    }\n\n    public loadMore() : Promise<ManagedClient[]> {\n        // load more results\n        return this._resultsLoader.loadMore()\n        .then((results:ManagedClient[]) => {\n            console.log(results);\n            this._clients = results;\n            return results;\n        });\n    }\n    public getClientList(user:User) : Promise<ManagedClient[]> {\n        this._searchUser = user;\n        if (!this._resultsLoader) {\n            let queryFunction = this._clientService.getClientList.bind(this._clientService, user);\n            this._resultsLoader = this._paginationFactory.getResultsLoader<ManagedClient>(queryFunction);\n            return this._resultsLoader.getResults().then((clients) => {\n                this._clients = clients;\n                return clients;\n            });\n        }\n        else {\n            return Promise.resolve(this._clients);\n        }\n    }\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport {AssessmentGroup } from '../../shared/models/assessment-group';\nimport {Assessment } from '../../shared/models/assessment';\nimport {ShoppingService} from \"../../shared/services/shopping.service\";\nimport {Item} from '../models/item';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { AuthService } from '../../login/services/auth.service';\nimport { Role } from '../../shared/models/role';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { BillingService } from 'app/shared/services/billing.service';\nimport { BillingCard } from 'app/shared/models/billing-card';\nimport { BillingDetails } from 'app/shared/models/billing-details';\n\n@Component({\n  selector: 'checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit, OnDestroy {\n\n  private _inCheckoutProcess:boolean;\n  private _billingCard:BillingCard;\n  private _useExistingCard:boolean;\n  private _billingDetails:BillingDetails;\n  private _loadingPaymentInformation:boolean;\n  private _isAdmin:boolean;\n  private _userSubscription:ISubscription;\n\n  constructor(\n    private shopping:ShoppingService\n    ,private router:Router\n    ,private alertService: AlertService\n    ,private route:ActivatedRoute\n    ,private billingService:BillingService\n    ,private authService:AuthService\n  ) {\n    this._inCheckoutProcess = false;\n    this.useSavedCard = false;\n    this._loadingPaymentInformation = false;\n    this._isAdmin = false;\n    this._userSubscription = this.authService.getLoginState().subscribe(loginState => {\n      if (loginState.user) {\n        this._isAdmin = loginState.user.role <= Role.Admin;\n      }\n      else {\n        this._isAdmin = false;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._userSubscription.unsubscribe();\n  }\n  ngOnInit() {\n    this._loadingPaymentInformation = true;\n    this.billingService.getBillingDetails().then((details) => {\n      this._loadingPaymentInformation = false;\n      this._billingDetails = details; // use the first one.\n      if (this._billingDetails.hasCards()) {\n        this._billingCard = this._billingDetails.cards[0];\n        this.setCheckoutSavedCard();\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n      this._loadingPaymentInformation = false;\n      this.alertService.error(\"There was an error loading your payment information from the server.  Use a new card or contact support\");\n    });\n  }\n\n  get isSingleOrder() {\n    return this.shopping.isSingleCheckoutOrder();\n  }\n\n  get loadingPaymentInformation() {\n    return this._loadingPaymentInformation;\n  }\n\n  get inCheckoutProcess() {\n    return this._inCheckoutProcess;\n  }\n\n\n  get hasItems() {\n    return this.shopping.hasItems;\n  }\n\n  get orderTotal() {\n    return this.shopping.cartTotal;\n  }\n\n  get items() {\n    return this.shopping.cartItems;\n  }\n\n  removeItem(item:Item) {\n    this.shopping.removeItemFromCart(item).then(() => {\n      let message = item.name + \" removed from your cart.\";\n      this.alertService.success(message);\n    });\n  }\n\n  shouldShowPaymentInformation() {\n    // we only show if this is a paid item, and if we have a saved billing card.\n    if (this.shopping.cartTotal > 0) {\n      // if we are an admin and haven't setup a billing profile we want to show the payment details.\n      if (this.canUpdateBillingProfile()) {\n        return true;\n      }\n      if (this._billingDetails.hasCards() != null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setCheckoutSavedCard() {\n    this.useSavedCard = true;\n  }\n\n  setCheckoutNewCard() {\n    this.useSavedCard = false;\n  }\n\n  get BillingCard() {\n    return this._billingCard;\n  }\n\n  get useSavedCard() {\n    return this._useExistingCard;\n  }\n  set useSavedCard(v:boolean) {\n    this._useExistingCard = v;\n  }\n\n  canUpdateBillingProfile() {\n    return this._isAdmin;\n  }\n\n  openCheckout() {\n    this._inCheckoutProcess = true;\n    this.shopping.checkout(this.useSavedCard).then(() => {\n      this.router.navigate([\"/admin\", \"shop\", \"checkout\", \"thankyou\"]);\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.error(\"An error occurred in processing your checkout.  Check your card information and try again or contact customer support.\");\n      this._inCheckoutProcess = false;\n    });\n  }\n\n  cancelSingleCheckoutOrder() {\n    let returnUrl = this.shopping.getSingleItemCheckoutReturnUrl();\n    this.shopping.endSingleItemCheckout();\n\n    if (!returnUrl) {\n      console.error(\"No return url found to return to for single item checkout\");\n      returnUrl = \"/admin/clients/\"\n    }\n    this.router.navigateByUrl(returnUrl);\n  }\n}\n","<div class=\"row\">\n  <h1 class=\"col h1-responsive\">Checkout Cart\n    <input *ngIf=\"!isSingleOrder\" type=\"button\" class=\"btn btn-secondary\" value=\"Return to Shop\"\n    [disabled]=\"inCheckoutProcess\"  [routerLink]=\"['../']\" />\n    <input *ngIf=\"isSingleOrder\" type=\"button\" class=\"btn btn-secondary\"\n    [disabled]=\"inCheckoutProcess\" value=\"Cancel Order\" (click)=\"cancelSingleCheckoutOrder()\" />\n  </h1>\n</div>\n<div class=\"row\" *ngIf=\"items.length === 0\">\n  <p class=\"col alert alert-info\">Your checkout cart is currently empty</p>\n</div>\n<table class=\"table table-striped\" *ngIf=\"items.length\">\n  <thead class=\"primary-color text-light\">\n    <th class=\"w-50\">Items</th>\n    <th>Price</th>\n    <th>Quantity</th>\n    <th>Total</th>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of items\">\n      <td> {{item.name}}\n        <ul *ngIf=\"item.subItems?.length\">\n          <li *ngFor=\"let subItem of item.subItems\">{{subItem.name}}</li>\n        </ul>\n      </td>\n      <td>${{item.price | number:'1.2-2' }}</td>\n      <td>\n        <input class=\"form-control\" type=\"number\" [(ngModel)]=\"item.quantity\" min=\"1\" />\n      </td>\n      <td> ${{item.totalPrice | number:'1.2-2'}}\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" aria-label=\"Delete\" (click)=\"removeItem(item)\">\n          <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n        </button>\n      </td>\n    </tr>\n    <tr class=\"secondary-color text-light\">\n      <td colspan=\"3\">\n        <h4 class=\"h4-responsive\">Order Total</h4>\n      </td>\n      <td>\n        <h4 class=\"h4-responsive\">${{orderTotal | number:'1.2-2'}}</h4>\n      </td>\n    </tr>\n    <tr *ngIf=\"inCheckoutProcess\">\n      <td colspan=\"4\">\n        <app-checkout-status-monitor></app-checkout-status-monitor>\n      </td>\n    </tr>\n    <tr *ngIf=\"!inCheckoutProcess\">\n        <td colspan=\"4\" *ngIf=\"loadingPaymentInformation\">\n            <div class=\"alert alert-info\">Loading payment methods</div>\n        </td>\n    </tr>\n    <tr *ngIf=\"!inCheckoutProcess && !loadingPaymentInformation\">\n      <td colspan=\"4\" *ngIf=\"shouldShowPaymentInformation()\">\n        <div *ngIf=\"BillingCard\">\n          <input id=\"savedCard\" type=\"radio\" (click)=\"setCheckoutSavedCard()\" [checked]=\"useSavedCard\" />\n          <label for=\"savedCard\">Use <dac-billing-card [card]=\"BillingCard\"></dac-billing-card></label>\n        </div>\n        <div *ngIf=\"canUpdateBillingProfile()\">\n          <input id=\"newCardAdmin\" type=\"radio\" (click)=\"setCheckoutNewCard()\" [checked]=\"!useSavedCard\" />\n          <label for=\"newCardAdmin\">Use a new card or <a class=\"btn btn-secondary btn-sm\" [routerLink]=\"['/admin/my-account/billing']\">Update your Billing Profile</a></label>\n          <p><small>You will enter your card details at checkout</small></p>\n        </div>\n        <div *ngIf=\"!canUpdateBillingProfile()\">\n          <input id=\"newCard\" type=\"radio\" (click)=\"setCheckoutNewCard()\" [checked]=\"!useSavedCard\" />\n          <label for=\"newCard\" *ngIf=\"!canUpdateBillingProfile()\">Use a new card</label>\n          <p class=\"pl-5\"><small>You will enter your card details at checkout</small></p>\n        </div>\n      </td>\n      <tr *ngIf=\"!inCheckoutProcess\">\n        <td colspan=\"3\">\n          <input *ngIf=\"!isSingleOrder\" type=\"button\" class=\"btn btn-secondary\" value=\"Return to Shop\" [routerLink]=\"['../']\" />\n          <input *ngIf=\"isSingleOrder\" type=\"button\" class=\"btn btn-secondary\" value=\"Cancel Order\" (click)=\"cancelSingleCheckoutOrder()\" />\n        </td>\n        <td>\n          <input type=\"button\" class=\"btn btn-primary\" (click)=\"openCheckout()\" value=\"Checkout\" [disabled]=\"loadingPaymentInformation\" />\n        </td>\n      </tr>\n  </tbody>\n</table>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ScaleRange } from '../../shared/models/scale-range';\nimport { Scale } from '../../shared/models/scale';\n\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-scale-range-new',\n  templateUrl: './scale-range-new.component.html',\n  styleUrls: ['./scale-range-new.component.css']\n})\nexport class ScaleRangeNewComponent implements OnInit {\n\n  private _range:ScaleRange;\n  private scale:Scale;\n  private assessment:Assessment;\n  private readonly SAVE_TIME = 1500;\n  private readonly ERROR_MESSAGE_TIME = 3000;\n  public isSaving:boolean;\n\n  constructor( private assessmentService:AssessmentService\n    ,private alertService:AlertService\n    ,private router: Router\n    ,private route: ActivatedRoute) {\n      this.range = this.getNewObject();\n    }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let scaleId = params['scaleId'];\n      this.assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.scale = assessment.scales.find((s) => s.id == scaleId);\n          if (!this.scale) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.router.navigate([\"not-found\"]);\n        })\n    });\n  }\n\n  private getNewObject() {\n    let obj = new ScaleRange();\n    obj.id = this.assessmentService.newId();\n    return obj;\n  }\n\n  get range():ScaleRange {\n    return this._range;\n  }\n\n  set range(v:ScaleRange) {\n    this._range = v;\n  }\n\n  private saveRange(range) {\n    this.scale.addRange(range);\n    this.isSaving = true;\n\t\treturn this.assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Range saved\", this.SAVE_TIME);\n      this.isSaving = false;\n      return range;\n    }).catch((error) => {\n      this.isSaving = false;\n      this.alertService.error(\"An error occurred in saving. Please try again or contact support.\", this.ERROR_MESSAGE_TIME);\n\t\t\tconsole.error(error);\n\t\t});\n  }\n\n  save() {\n    this.saveRange(this.range).then((question) => {\n      setTimeout(() => {\n        this.router.navigate([\"../\", this.range.id,\"edit\"], {relativeTo: this.route, replaceUrl: true});\n\t\t\t}, this.SAVE_TIME);\n    });\n\t}\n\n\tsaveAndCreateNew() {\n    this.saveRange(this.range).then((question) => {\n      this.range = this.getNewObject();\n    });\n\t}\n\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">New Range</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card card-cascade narrower\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n            <h3 class='h3-responsive text-center'>{{range.name}}</h3>\n        </div>\n        <div class=\"card-body\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"name\">Name:</label>\n            <input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"range.name\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"displayName\">Display Name:</label>\n            <input class=\"form-control\" type=\"text\" name=\"displayName\" id=\"displayName\" [(ngModel)]=\"range.displayName\" />\n          </div>\n          <div class=\"form-group\">\n                <label for=\"rangeStart\">Range Start:</label>\n            <input class=\"form-control\" type=\"number\" name=\"rangeStart\" id=\"rangeStart\" [(ngModel)]=\"range.rangeStart\" />\n          </div>\n          <div class=\"form-group\">\n                <label for=\"rangeEnd\">Range End:</label>\n            <input class=\"form-control\" type=\"number\" name=\"rangeEnd\" id=\"rangeEnd\" [(ngModel)]=\"range.rangeEnd\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"therapistContent\">Therapist Content:</label>\n            <textarea class=\"form-control\" rows=\"5\" name=\"therapistContent\" [(ngModel)]=\"range.therapistContent\" id=\"therapistContent\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"clientContent\">Client Content:</label>\n            <textarea class=\"form-control\" rows=\"5\" name=\"clientContent\" [(ngModel)]=\"range.clientContent\" id=\"clientContent\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"mediaURL\">Media URL:</label>\n            <input class=\"form-control\" type=\"text\" name=\"mediaURL\" id=\"mediaURL\" [(ngModel)]=\"range.mediaURL\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"assignmentURL\">Assignment URL:</label>\n            <input class=\"form-control\" type=\"text\" name=\"assignmentURL\" id=\"assignmentURL\" [(ngModel)]=\"range.assignmentURL\" />\n          </div>\n        </form>\n        <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n        <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n        <!--<pre>\n          {{range|json}}\n        </pre>-->\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\nimport { UserListComponent } from \"./user-list/user-list.component\";\nimport { UserEditComponent } from \"./user-edit/user-edit.component\";\nimport { UserNewComponent } from \"./user-new/user-new.component\";\nimport { UserDeleteComponent } from \"./user-delete/user-delete.component\";\n\nconst userRoutes: Routes = [\n    {path: '',component: UserListComponent}\n    ,{path: 'new', component: UserNewComponent }\n    ,{path: ':userId/edit', component: UserEditComponent}\n    ,{path: ':userId/delete', component: UserDeleteComponent}\n  ];\n@NgModule({\n  imports: [\n    RouterModule.forChild(userRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class UsersRoutingModule {}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Company } from 'app/shared/models/company';\nimport { User } from 'app/shared/models/user';\nimport { Role } from 'app/shared/models/role';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { CompanyService } from 'app/shared/services/company.service';\n\n@Component({\n  selector: 'app-company-new',\n  templateUrl: './company-new.component.html',\n  styleUrls: ['./company-new.component.css']\n})\nexport class CompanyNewComponent implements OnInit {\n\n  public Company:Company;\n  public passwordChange:string;\n  public confirmPassword:string;\n  public isSaving:boolean;\n\n  constructor(private companyService:CompanyService, private router:Router\n    , private route:ActivatedRoute, private alertService:AlertService) {\n    this.Company = new Company();\n    this.Company.user = new User();\n    this.Company.user.role = Role.Owner;\n  }\n\n  ngOnInit() {\n  }\n\n  private validateForm() {\n    let errors = [];\n    if (!this.Company.name) {\n      errors.push(\"You must enter a name for this company\");\n    }\n    else if (this.Company.name.length < 3) {\n      errors.push(\"Company must be at least 3 characters long\");\n    }\n\n    if (!this.Company.email) {\n      errors.push(\"You must enter a valid email for this company\");\n    }\n\n\n    if (!this.passwordChange) {\n      errors.push(\"You must enter in a password for the user for this company\");\n    }\n\n    if (this.passwordChange != this.confirmPassword) {\n      errors.push(\"The passwords don't match\");\n    }\n    if (this.passwordChange && this.passwordChange.length < 8) {\n      errors.push(\"Password must be at least 8 characters\");\n    }\n    return errors;\n  }\n\n  save() {\n    let errors = this.validateForm();\n    if (errors.length) {\n      this.alertService.error(errors.join(\".\\n\"), 3000);\n      return;\n    }\n    this.isSaving = true;\n    this.Company.user.password = this.passwordChange;\n    this.companyService.createCompany(this.Company).then((company) => {\n      this.router.navigate(['../', company.id, 'edit'], {replaceUrl: true, relativeTo: this.route});\n    })\n    .catch((error) => {\n      console.error(error);\n      this.isSaving = false;\n      let msg = \"Company failed to create.  Check server logs for details.\";\n      if (error.status == 400) {\n        let json = error.body;\n        if (json && json._code && json._code == 'DUP_ENTRY') {\n          msg = \"That username already exists in the system\";\n        }\n      }\n      this.alertService.error(msg);\n    });\n  }\n\n  public setUserRole(role:Role) {\n    this.Company.user.role = role;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n        <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n        <h1 class=\"h1-responsive text-center\">New Company</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <dac-tabs class=\"col-12\">\n        <dac-tab heading=\"General\">\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"name\">Name:</label>\n                <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                    <input class=\"form-control\" id=\"name\" type=\"text\" [(ngModel)]=\"Company.name\" />\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"name\">Contact Email:</label>\n                <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                    <input class=\"form-control\" id=\"name\" type=\"text\" [(ngModel)]=\"Company.email\" />\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"username\">Username:</label>\n                <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                    <username-checker [user]=\"Company.user\"></username-checker>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"password\">Password:</label>\n                <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                    <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"passwordChange\" />\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"confirmPassword\">Confirm Password:</label>\n                <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                    <input id=\"confirmPassword\" type=\"password\" class=\"form-control\" [(ngModel)]=\"confirmPassword\" />\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-12\">\n                    <input [disabled]=\"isSaving\" class=\"btn btn-primary\" type=\"button\" value=\"Save\" (click)=\"save()\" />\n                </div>\n            </div>\n        </dac-tab>\n    </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {ListQuestion} from '../../shared/models/list-question';\nimport {QuestionSetType} from '../../shared/models/question-set-type';\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AssessmentService } from 'app/shared/services/assessment.service';\nimport { Assessment } from 'app/shared/models/assessment';\nimport { Question } from 'app/shared/models/question';\nimport { QuestionType } from 'app/shared/models/question-type';\nimport { QuestionSet } from 'app/shared/models/question-set';\n\n@Component({\n  selector: 'dac-question-set-list-view',\n  templateUrl: './question-set-list-view.component.html'\n})\nexport class QuestionSetListViewComponent implements OnInit, OnChanges {\n  @Input() assessment:Assessment;\n  public selected:QuestionSet;\n\n  constructor(\n  ) {\n    }\n\n  ngOnInit() {\n    this.populateQuestionSetFromAssessment(this.assessment);\n  }\n\n  ngOnChanges() {\n    this.populateQuestionSetFromAssessment(this.assessment);\n  }\n\n  getLabelsForSelected(questionSet:QuestionSet, question:Question) {\n    if (questionSet.display_type == QuestionSetType.QUESTION_LIST) {\n      let listQuestion = question as ListQuestion;\n      return listQuestion.CustomLabels;\n    }\n    return questionSet.labels;\n  }\n\n  public isTextItem(item:Question) {\n    return item.type == QuestionType.Textbox;\n  }\n\n  getClassesForItem(item:QuestionSet) {\n    let isSelected = item == this.selected;\n    let classes = {\n      'primary-color': isSelected\n      ,'white-text': isSelected\n    };\n    return classes;\n  }\n\n  private populateQuestionSetFromAssessment(assessment:Assessment) {\n    if (!assessment) {\n      return;\n    }\n    if (assessment.question_sets && assessment.question_sets.length) {\n      this.selected = this.assessment.question_sets[0];\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n      <h2 class=\"h2-responsive\"> Question Sets</h2>\n      <!--TODO: stephen move this to <scales-list></scales-list>-->\n      <p *ngIf=\"assessment.scales.length <= 0\">No Question Sets exist</p>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-4 col-lg-3\">\n    <ul class=\"list-group flex-column\">\n      <li class=\"list-group-item\" \n        [ngClass]=\"getClassesForItem(questionSet)\"\n        *ngFor=\"let questionSet of assessment.question_sets;\" (click)=\"selected = questionSet\"><a>{{questionSet.title}}</a></li>\n      </ul>\n  </div>\n  <div class=\"col-sm-8 col-lg-9\" *ngIf=\"!selected\">\n    <p class=\"alert alert-info\">Select a question set.</p>\n  </div>\n  <div class=\"col-sm-8 col-lg-9\" *ngIf=\"selected\">\n    <h2>{{selected.title}}</h2>\n    <table class=\"table table-striped\">\n      <thead class=\"secondary-color text-white\">\n        <th scope=\"col\" class=\"w-50\">Question</th>\n        <th scope=\"col\" class=\"w-50\">Answers</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of selected.questions\">\n          <td>\n              {{item.prompt}}\n          </td>\n          <td *ngIf=\"isTextItem(item)\">\n              <span>Text</span>\n          </td>\n          <td *ngIf=\"!isTextItem(item)\">\n              <span *ngFor=\"let lbl of getLabelsForSelected(selected, item);let first = first; let last = last;\">\n                {{lbl.label}}\n                <span *ngIf=\"!last\">,</span>\n              </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AssessmentTokenService} from '../../shared/services/assessment-token.service';\nimport { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { AssessmentGroupService } from '../../shared/services/assessment-group.service';\nimport { AssessmentService } from 'app/shared/services/assessment.service';\nimport { AuthService } from 'app/login/services/auth.service';\nimport { User } from 'app/shared/models/user';\nimport { Capability } from 'app/shared/models/capability';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\n\n@Component({\n  selector: 'dac-assessment-tokens-list',\n  templateUrl: './assessment-tokens-list.component.html',\n  styleUrls: ['./assessment-tokens-list.component.css']\n})\nexport class AssessmentTokensListComponent implements OnInit,OnDestroy {\n\n  public tokenItems:{name:string, quantity:number}[];\n  public groupTokenItems:{name:string, quantity:number}[];\n  private canShop:Boolean;\n  private _loaded:boolean;\n  private _userSubscription:ISubscription;\n  @Output() buy = new EventEmitter<{name:string, quantity:number}>();\n\n  constructor(private tokenService:AssessmentTokenService\n  ,private assessmentGroupService:AssessmentGroupService\n  ,private assessmentService:AssessmentService\n  ,private authService:AuthService) {\n    this._loaded = false;\n    this.canShop = false;\n\n    this._userSubscription = this.authService.getLoginState().subscribe(loginState =>{\n      if (loginState.user) {\n        this.canShop = loginState.user.hasCapability(Capability.CAN_SHOP);\n      }\n      else {\n        this.canShop = false;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this._loaded = false;\n    Promise.all([\n      this.tokenService.loadAssessmentTokens()\n      ,this.assessmentGroupService.getAssessmentGroups()\n      ,this.assessmentService.getAssessmentList()\n      ,\n    ])\n    .then((results) => {\n      let [, groups, assessments] = results;\n      this.groupTokenItems = groups.map(g => {return {name: g.Name, quantity: this.tokenService.getGroupRemainingTokens(g)} });\n      this.tokenItems= assessments.map(a => {return {name: a.name, quantity: this.tokenService.getRemainingTokens(a)};});\n      this._loaded = true;\n    })\n    .catch(error => {\n      console.error(error);\n      this._loaded = true;\n    })\n  }\n\n  ngOnDestroy() {\n    this._userSubscription.unsubscribe();\n  }\n\n  public get loaded() {\n    return this._loaded;\n  }\n\n  triggerBuy(item:{name:string, quantity:number}) {\n    this.buy.emit(item);\n  }\n\n  public shouldBuyTokens(item) {\n    return this.canShop && item.quantity <= 0\n  }\n\n}\n","<dac-tabs>\n  <dac-tab heading=\"Batteries\" class=\"col\">\n      <div class=\"row\" *ngIf=\"!loaded\">\n          <div class=\"col-12\">\n            <p class=\"alert alert-info\">Loading...</p>\n          </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"loaded\">\n        <div class=\"list-group px-3 col-12\">\n          <div class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let item of groupTokenItems\">\n            {{item.name}}\n            <span *ngIf=\"!loaded\" class=\"badge badge-primary badge-pill\">Loading...</span>\n            <span *ngIf=\"loaded && !shouldBuyTokens(item)\" class=\"badge badge-primary badge-pill\">{{item.quantity}}</span>\n            <dac-buy-item-button *ngIf=\"loaded && shouldBuyTokens(item)\" (click)=\"triggerBuy($event)\" [item]=\"item\"></dac-buy-item-button>\n          </div>\n        </div>\n      </div>\n  </dac-tab>\n  <dac-tab heading=\"Assessments\" class=\"col\">\n      <div class=\"row\" *ngIf=\"!loaded\">\n        <div class=\"col-12\">\n          <p class=\"alert alert-info\">Loading...</p>\n        </div>\n      </div>\n      <div *ngIf=\"loaded\" class=\"row\">\n        <div class=\"list-group px-3 col-12\">\n          <div class=\"list-group-item d-flex justify-content-between align-items-center\" *ngFor=\"let item of tokenItems\">\n              {{item.name}}\n              <span *ngIf=\"!loaded\" class=\"badge badge-primary badge-pill\">Loading...</span>\n              <span *ngIf=\"loaded && !shouldBuyTokens(item)\" class=\"badge badge-primary badge-pill\">{{item.quantity}}</span>\n              <button *ngIf=\"loaded && shouldBuyTokens(item)\" class=\"badge badge-primary badge-pill btn btn-sm btn-primary\" alt=\"Buy Tokens\"\n                title=\"Buy Tokens\" [routerLink]=\"['/admin/shop/']\">Buy</button>\n          </div>\n        </div>\n      </div>\n  </dac-tab>\n</dac-tabs>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ManagedClient } from '../../shared/models/managed-client';\nimport { ClientService } from '../../shared/services/client.service';\nimport { Location } from \"@angular/common\";\nimport { ReportService } from \"../../reports/services/report.service\";\n\nimport { User } from 'app/shared/models/user';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { Assignment } from 'app/shared/models/Assignment';\nimport { ShoppingService } from 'app/shared/services/shopping.service';\nimport { AssessmentAssignerService } from '../services/assessment-assigner.service';\nimport { AuthService } from 'app/login/services/auth.service';\nimport { AssignmentService } from 'app/shared/services/assignment.service';\nimport { TabsComponent } from 'app/tabs/tabs.component';\n\ninterface ReportResult {\n  id: string;\n  name: string;\n  hasMetRequirements: boolean;\n}\ninterface ReportResultContainer {\n  [name: string] : ReportResult[]\n}\n\n@Component({\n  selector: 'app-client-edit',\n  templateUrl: './client-edit.component.html',\n  styleUrls: ['./client-edit.component.css']\n})\nexport class ClientEditComponent implements OnInit {\n\n  @ViewChild('staticTabs') staticTabs: TabsComponent;\n\n  private _client: ManagedClient;\n  private _clientToSave: ManagedClient;\n  private _newAssignedUser: User;\n  private _reportsByAssignment:ReportResultContainer;\n  public loadedClient:boolean;\n  public isSavingClient:boolean;\n  public clientShareLink:string;\n  public hasActiveSubscription:boolean;\n\n  constructor(\n    private _clientService: ClientService,\n    private router: Router,\n    private location: Location,\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private reportService:ReportService,\n    private authService:AuthService,\n    private shoppingService:ShoppingService,\n    private assessmentAssignerService:AssessmentAssignerService,\n    private assignmentService:AssignmentService\n  ) {\n    this._reportsByAssignment = {};\n    this._client = new ManagedClient();\n    this._clientToSave = new ManagedClient();\n    this.loadedClient = false;\n    this.clientShareLink = window.location.href;\n    this.hasActiveSubscription = false;\n  }\n\n  ngOnInit() {\n    this.authService.getLoginState().subscribe(loginState => {\n      if (loginState && loginState.user) {\n        this.hasActiveSubscription= loginState.user.hasActiveSubscription();\n      }\n      else {\n        this.hasActiveSubscription = false;\n      }\n    });\n\n    // we are skipping the whole switchMap thingy until we figure out\n    // more on how to use it... for now we are just trying to port the code\n    // from angularjs (1.X)\n    // TODO: stephen figure out how to do the switchMap to cut down on multiple http requests.\n    this.route.params.subscribe(params => {\n      let clientId = params['id'];\n      if (!clientId || typeof clientId !== \"string\") {\n        this.router.navigate(['../']);\n        return;\n      }\n\n      this._clientService.getClient(clientId)\n        .then((client: ManagedClient) => {\n          console.log(\"loaded client is \", client);\n          this._client = client;\n          this._clientToSave = Object.assign(new ManagedClient(), client); // copy over relevant data\n          this.loadedClient = true;\n          // if we have no assignments we need to make sure we go to the tab for setting assignments.\n\n          this._reportsByAssignment = {};\n          // TODO: stephen I'm not sure I like the way this is implemented.\n          return Promise.all(client.assignments.map(a => this.reportService.getReportsForAssignment(a).then(reports => {\n            this._reportsByAssignment[a.Id] = reports.map(r => Object.assign(r, {IsComplete: a.IsComplete, hasMetRequirements: true}));\n          })))\n          .then((results) => {\n            return client;\n          })\n        })\n        .then((client) => {\n          // since the tabs haven't rendered yet... we need to wait for them to render now that the\n          // client has loaded.\n          if (client.hasNoAssignments()) {\n            setTimeout(() => {\n             if (this.staticTabs) {\n                this.staticTabs.toggleActive(this.staticTabs.tabs[1]);\n              }\n            }, 250);\n          }\n        })\n        .catch((error) => {\n          this.alertService.error(\"Failed to load client from server. Please check your internet connection and reload the page\");\n          console.error(error);\n          // TODO: stephen handle when client is not\n          // found\n        });\n\n    });\n\n  }\n\n\n  goBack() {\n    this.location.back();\n  }\n  public get assignments(): Assignment[] {\n    return this._client.assignments;\n  }\n\n  public hasReportsForAssignment(assignment:Assignment) {\n    return this._reportsByAssignment[assignment.Id] && this._reportsByAssignment[assignment.Id].length;\n  }\n\n  public getReportsForAssignment(assignment:Assignment) {\n    if (this.hasReportsForAssignment(assignment)) {\n      return this._reportsByAssignment[assignment.Id];\n    }\n    return [];\n  }\n\n  public setNewUser(user:User) {\n    this._newAssignedUser = user;\n  }\n\n  public updateClientUser(isValid:boolean) {\n\n    if (!isValid) {\n      this.alertService.error(\"You must fill in all required fields\");\n      return;\n    }\n\n    // need to go through and validate the client\n    if (this._newAssignedUser) {\n      this._clientToSave.user = this._newAssignedUser;\n    }\n    // let errors = this._clientService.validateClient(this._clientToSave);\n\n    this.isSavingClient = true;\n    this._clientService.saveClient(this._clientToSave).then((result) => {\n      this.isSavingClient = false;\n      this._client.lastName = this._clientToSave.lastName;\n      this._client.firstName = this._clientToSave.firstName;\n      this._client.email = this._clientToSave.email;\n      this._client.user = this._clientToSave.user;\n      this.alertService.success(\"Client information was updated\");\n    })\n    .catch((error) => {\n      this.isSavingClient = false;\n      this.alertService.error(\"Failed to update client information.  Try again or contact support\");\n      console.error(error);\n    })\n  }\n\n  public get client(): ManagedClient {\n    return this._client;\n  }\n\n  public set client(v: ManagedClient) {\n    this._client = v;\n  }\n\n  public get clientToSave() : ManagedClient {\n    return this._clientToSave;\n  }\n  public set clientToSave(v:ManagedClient) {\n    this._clientToSave = v;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <h1 class=\"h1-responsive\" *ngIf=\"loadedClient\"><i class=\"fa fa-user p-2\"></i>{{client.getDisplayString()}} <span class=\"pl-2 h3\"><dac-copy-clipboard [iconClass]=\"'fa-share-alt-square'\" [content]=\"clientShareLink\"></dac-copy-clipboard></span></h1>\n    </div>\n    <div class=\"x-float-right\">\n        <p><a class=\"btn btn-primary\" [routerLink]=\"['../client']\">Back</a></p>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"!loadedClient\">\n    <div class=\"col\">\n        <p class=\"alert alert-warning\">\n            <app-spin-icon></app-spin-icon>Loading Client...\n        </p>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"loadedClient\">\n    <dac-tabs class=\"col-12\" #staticTabs>\n        <dac-tab heading=\"Assignment Reports\" class=\"reportsTab\">\n            <div class=\"alert alert-warning\" *ngIf=\"assignments.length <= 0\">No assessments currently assigned.</div>\n            <div class=\"row list-item-group view view-cascade secondary-gradient p-3 text-light\" *ngIf=\"assignments.length > 0\">\n                <div class=\"col-12\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">Name</div>\n                        <div class=\"col-2\">Assigned</div>\n                        <div class=\"col-2\">Completed</div>\n                        <div class=\"col-2 text-center\">Action</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row list-group-item\" *ngFor=\"let assignment of assignments\">\n                <div class=\"col-12\" *ngIf=\"assignment.type == 'Assessment'\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <i class=\"fa fa-clipboard\"></i>\n                            {{assignment.Name}}\n                        </div>\n                        <div class=\"col-2\">{{assignment.DateAssigned|date:'mediumDate'}}</div>\n                        <div class=\"col-2\">\n                            <span *ngIf=\"assignment.IsComplete\">{{assignment.DateCompleted|date:'mediumDate'}}</span>\n                            <span *ngIf=\"!assignment.IsComplete\">Incomplete</span>\n                        </div>\n                        <div class=\"col-2 text-center\">\n                            <button class='btn btn-primary btn-sm' *ngIf=\"assignment.IsComplete\" [routerLink]=\"['result', assignment.ResultId]\">\n                                View Report\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12\" *ngIf=\"assignment.type == 'Questionnaire' || assignment.type == 'ExternalQuestionnaire'\">\n                  <div class=\"row\">\n                      <div class=\"col-6\">\n                          <i class=\"fa fa-clipboard\"></i>\n                          {{assignment.Name}}\n                      </div>\n                      <div class=\"col-2\">{{assignment.DateAssigned|date:'mediumDate'}}</div>\n                      <div class=\"col-2\">\n                          <span *ngIf=\"assignment.IsComplete\">{{assignment.DateCompleted|date:'mediumDate'}}</span>\n                          <span *ngIf=\"!assignment.IsComplete\">Incomplete</span>\n                      </div>\n                      <div class=\"col-2 text-center\">\n                        <button class='btn btn-primary btn-sm' *ngIf=\"assignment.IsComplete\" [routerLink]=\"['questionnaire-result', assignment.ResultId]\">\n                          View Report\n                      </button>\n                      </div>\n                  </div>\n              </div>\n                <div class=\"col-12\" *ngIf=\"assignment.type == 'LibraryAsset'\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <i class=\"fa fa-file-text\"></i>\n                            {{assignment.Name}}\n                        </div>\n                        <div class=\"col-2\">{{assignment.DateAssigned|date:'mediumDate'}}</div>\n                        <div class=\"col-2\">\n                            <span *ngIf=\"assignment.IsComplete\">{{assignment.DateCompleted|date:'mediumDate'}}</span>\n                            <span *ngIf=\"!assignment.IsComplete\">Incomplete</span>\n                        </div>\n                        <div class=\"col-2 text-center\">\n                            <button class='btn btn-primary btn-sm' *ngIf=\"assignment.IsComplete\" [routerLink]=\"['asset-result', assignment.ResultId]\">\n                                View Report\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12\" *ngIf=\"assignment.isGroup\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-6\">\n                            <i class=\"fa fa-folder\"></i>\n                            {{assignment.Name}}\n                        </div>\n                        <div class=\"col-2\">{{assignment.DateAssigned|date:'mediumDate'}}</div>\n                        <div class=\"col-2\">\n                            <span *ngIf=\"assignment.IsComplete\">{{assignment.DateCompleted|date:'mediumDate'}}</span>\n                            <span *ngIf=\"!assignment.IsComplete\">Incomplete - {{assignment.getAssignmentsCompleted()}}/{{assignment.getTotalAssignments()}}</span>\n                        </div>\n                        <div class=\"col-2\">\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"hasReportsForAssignment(assignment)\">\n                            <div class=\"col-6 pl-5\">\n                                <h6>Battery Reports</h6>\n                                <hr />\n                            </div>\n                        </div>\n                    <!--Need to display the battery reports underneath here...-->\n                    <div class=\"row\" *ngFor=\"let report of getReportsForAssignment(assignment)\">\n                            <div class=\"col-6 pl-5\">\n                                <i class=\"fa fa-bar-chart\"></i>\n                                {{report.name}}\n                            </div>\n                            <div class=\"col-2 text-center\"></div>\n                            <div class=\"col-2\">\n                                <span *ngIf=\"assignment.IsComplete\">{{assignment.DateCompleted|date:'mediumDate'}}</span>\n                                <span *ngIf=\"!assignment.IsComplete\">Incomplete</span>\n                            </div>\n                            <div class=\"col-2  text-center\">\n                                <button class='btn btn-primary btn-sm' *ngIf=\"assignment.IsComplete\" [routerLink]=\"['report', report.id, assignment.id]\">\n                                    View Report\n                                </button>\n                            </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 pl-5 mt-3\">\n                            <h6>Individual Assessment Reports</h6>\n                            <hr />\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngFor=\"let item of assignment.Items\">\n                            <div class=\"col-6 pl-5\">\n                                <i class=\"fa fa-bar-chart\"></i>\n                                {{item.Name}}\n                            </div>\n                            <div class=\"col-2\"></div>\n                            <div class=\"col-2\">\n                                <span *ngIf=\"item.IsComplete\">{{item.DateCompleted|date:'mediumDate'}}</span>\n                                <span *ngIf=\"!item.IsComplete\">Incomplete</span>\n                            </div>\n                            <div class=\"col-2 text-center\" *ngIf=\"item.type == 'Assessment'\">\n                                <button class='btn btn-primary btn-sm' *ngIf=\"item.IsComplete\" [routerLink]=\"['result', item.ResultId]\">\n                                    View Report\n                                </button>\n                            </div>\n                            <div class=\"col-2 text-center\" *ngIf=\"item.type == 'Questionnaire' || item.type == 'ExternalQuestionnaire'\">\n                              <button class='btn btn-primary btn-sm' *ngIf=\"assignment.IsComplete\" [routerLink]=\"['questionnaire-result', item.ResultId]\">\n                                View Report\n                              </button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        </dac-tab>\n        <dac-tab heading=\"Manage Assignments\">\n            <dac-client-manage-assignments class=\"col\" [client]=\"client\" *ngIf=\"hasActiveSubscription\"></dac-client-manage-assignments>\n            <dac-user-upgrade-subscription-notice *ngIf=\"!hasActiveSubscription\"></dac-user-upgrade-subscription-notice>\n        </dac-tab>\n        <dac-tab heading=\"Send Invitation\">\n            <dac-client-send-invitation class=\"col\" [client]=\"client\" *ngIf=\"hasActiveSubscription\"></dac-client-send-invitation>\n            <dac-user-upgrade-subscription-notice *ngIf=\"!hasActiveSubscription\"></dac-user-upgrade-subscription-notice>\n        </dac-tab>\n        <!-- TODO: @adunsulag when we figure out how to feature enable this we can add it back -->\n        <!-- Client edit of information happens in the EMR now-->\n        <!-- <dac-tab heading=\"Admin\">\n            <div class=\"col\">\n                <h2>Client Information</h2>\n                <hr class=\"mb-3\" />\n                <div class=\"row\">\n                    <label class=\"col-md-4 col-lg-3\" for=\"uniqueToken\">\n                        <h6><i class=\"fa fa-key pt-2 pr-2 h4-responsive\"></i>Client Login Identifier:</h6>\n                    </label>\n                    <div class=\"col-6 col-md-8 col-lg-9\">\n                        {{client.customField1}}\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4 col-lg-3\">\n                        <h6><i class=\"fa fa-user red-text pt-2 pr-2 h4-responsive\"></i>Assigned User:</h6>\n                    </div>\n                    <div class=\"col-6 col-md-8 col-lg-9\">\n                        {{client.user?.getDisplayName()}}\n                    </div>\n                </div>\n\n                <h2 class=\"mt-5\">Update Client Information</h2>\n                <hr class=\"mb-3\" />\n                <form #clientForm=\"ngForm\" class=\"form-horizontal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-12\" for=\"firstName\">\n                            <h6><i class=\"fa fa-user pt-2 pr-2 h4-responsive\"></i>First Name*:</h6>\n\n                        </label>\n                        <div class=\"col-12\">\n                            <input class=\"form-control\" name=\"firstName\" type=\"text\" [(ngModel)]=\"clientToSave.firstName\"\n                            required #firstName=\"ngModel\" />\n                        </div>\n                        <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched || clientForm.submitted)\"\n                            class=\"alert alert-danger\">\n                            <div *ngIf=\"firstName.errors.required\">\n                                First Name is required.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"col-12\" for=\"lastName\">\n                            <h6><i class=\"fa fa-user pt-2 pr-2 h4-responsive\"></i>Last Name*:</h6>\n\n                        </label>\n                        <div class=\"col-12\">\n                            <input class=\"form-control\" name=\"lastName\" type=\"text\" [(ngModel)]=\"clientToSave.lastName\" required #lastName=\"ngModel\" />\n                        </div>\n                        <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched || clientForm.submitted)\"\n                            class=\"alert alert-danger\">\n                            <div *ngIf=\"lastName.errors.required\">\n                                Last Name is required.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"col-12\" for=\"emailAddress\">\n                            <h6><i class=\"fa fa-envelope pt-2 pr-2 h4-responsive\"></i>Email*:</h6>\n                        </label>\n                        <div class=\"col-12\">\n                            <input class=\"form-control\" name=\"emailAddress\" type=\"text\" email [(ngModel)]=\"clientToSave.email\" #emailAddress=\"ngModel\" />\n                        </div>\n                        <div *ngIf=\"emailAddress.invalid && (emailAddress.dirty || emailAddress.touched || clientForm.submitted)\"\n                            class=\"alert alert-danger\">\n                            <div *ngIf=\"emailAddress.errors.required\">\n                                Email is required.\n                            </div>\n                            <div *ngIf=\"emailAddress.errors.email\">\n                                    Email must be a valid email address with the local address being shorter than 64 characters and the whole email\n                                    address less than 254 characters.\n                                </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\" *hasPermission=\"'Admin'\">\n                        <label class=\"col-12\" for=\"assignedUser\"><h6><i class=\"fa fa-user red-text pt-2 pr-2 h4-responsive\"></i>Assigned User</h6></label>\n                        <div class=\"col-12\">\n                            <user-selector [user]=\"clientToSave.user\" [allowEmpty]=\"true\" (selected)=\"setNewUser($event)\"></user-selector>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <div class=\"col\">\n                            <input [disabled]=\"isSaving || !hasActiveSubscription\" class=\"btn btn-primary\" type=\"button\" value=\"Save\" (click)=\"clientForm.submitted=true;updateClientUser(clientForm.valid)\" />\n                            <dac-user-upgrade-subscription-notice *ngIf=\"!hasActiveSubscription\"></dac-user-upgrade-subscription-notice>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </dac-tab> -->\n    </dac-tabs>\n</div>\n\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {ListQuestion} from '../../shared/models/list-question';\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Question } from '../../shared/models/question';\nimport { QuestionSet } from '../../shared/models/question-set';\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { QuestionFactoryService } from '../../shared/services/question-factory.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { Scale } from '../../shared/models/scale';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QuestionSetLabel } from 'app/shared/models/question-set-label';\nimport { QuestionType } from 'app/shared/models/question-type';\nimport { FlaggedCondition } from 'app/shared/models/flagged-condition';\nimport { QuestionSetType } from \"app/shared/models/question-set-type\";\n\n@Component({\n  selector: 'app-question-edit',\n  templateUrl: './question-edit.component.html',\n  styleUrls: ['./question-edit.component.css']\n})\nexport class QuestionEditComponent implements OnInit {\n\n    private _question:Question;\n  private questionSet:QuestionSet;\n  private assessment:Assessment;\n  private readonly SAVE_TIME = 1500;\n  private readonly ERROR_MESSAGE_TIME = 3000;\n  public isSaving:boolean;\n  public flagValue:any;\n  public flagDirection:any;\n  private _flagDirectionList:{id:string, name:string}[];\n\n  constructor(\n    private assessmentService:AssessmentService\n    ,private questionFactory: QuestionFactoryService\n    ,private alertService: AlertService\n    ,private router: Router\n    ,private route: ActivatedRoute\n  ) {\n    this._question = this.questionFactory.createDefaultEmptyQuestion();\n    this._flagDirectionList = [\n      {id: 'greaterOrEqual', 'name':\"Greater than or equal to\"}\n      ,{id: 'lessOrEqual', 'name':\"Less than or equal to\"}\n    ];\n\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let setId = params['setId'];\n      let questionId = params['questionId'];\n\n      this.assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.questionSet = assessment.question_sets.find((s) => s.id == setId);\n          this._question = (this.questionSet) ? this.questionSet.questions.find((q) => q.id == questionId) : null;\n          if (!(this.questionSet && this._question)) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n\n          // if only one scale remains on the edit, make sure it's always the most current.\n          this.setScaleIfSingle(this.question, this.assessment);\n\n          if (this._question.hasFlagCondition) {\n            this.flagValue = this._question.flaggedCondition.flagValues;\n\n            // multiple choice only has a single flag so we go off that.\n            if (this.question.type == QuestionType.MultipleChoice) {\n              this.flagDirection = this._flagDirectionList.find(f => f.id == this._question.flaggedCondition.flagDirection);\n              this.flagValue = this.flagValue[0];\n            }\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.router.navigate([\"not-found\"]);\n        })\n    });\n  }\n\n  public getQuestionType(question:Question) {\n    let type = \"UNKNOWN\";\n    switch (question.type) {\n      case QuestionType.Checklist: {\n        type = \"Checklist\";\n      }\n      break;\n      case QuestionType.MultipleChoice: {\n        type = \"Multiple Choice\";\n      }\n      break;\n      case QuestionType.SingleChoice: {\n        type = \"Single Choice\";\n      }\n      break;\n      case QuestionType.Textbox: {\n        type = \"Textbox\";\n      }\n      break;\n    }\n    return type;\n  }\n\n  private setScaleIfSingle(question:Question, assessment:Assessment) {\n    if (assessment && assessment.scales && assessment.scales.length == 1) {\n      question.assessment_scale = this.assessment.scales[0];\n    }\n  }\n\n  get scales() : Scale[] {\n    if (this.assessment) {\n      return this.assessment.scales;\n    }\n    return null;\n  }\n\n  get question() : Question {\n    return this._question;\n  }\n\n  get labels() : QuestionSetLabel[] {\n    return (this.questionSet ? this.questionSet.labels : []);\n  }\n\n  get FlagDirections() : {id: string, name:string}[] {\n    return this._flagDirectionList;\n  }\n\n  public isChecklistQuestion() : boolean {\n    return this.question.type == QuestionType.Checklist;\n  }\n\n  public isMultipleChoiceQuestion() : boolean {\n    return this.question.type == QuestionType.MultipleChoice;\n  }\n\n  public compareIds(a:any, b:any) {\n    if (!a || !b) {\n      return false;\n    }\n    return a.id === b.id;\n  }\n\n  public toggleFlagQuestion(question:Question) {\n    let condition = null;\n    if (!question.hasFlagCondition) {\n      condition = new FlaggedCondition();\n    }\n    question.flaggedCondition = condition;\n  }\n\n  public hasFlagValue(flagValue:QuestionSetLabel) {\n    if (!this.flagValue) {\n      return false;\n    }\n\n    return this.flagValue.find(fv => fv.id == flagValue.id) != null;\n  }\n\n  public toggleChecklistFlagValue(flagValue:QuestionSetLabel) {\n    if (this.hasFlagValue(flagValue)) {\n      this.flagValue = this.flagValue.filter(fv => fv.id != flagValue.id);\n    }\n    else {\n      if (!this.flagValue) {\n        this.flagValue = [];\n      }\n      this.flagValue.push(flagValue);\n    }\n  }\n\n  private validateQuestion(question:Question) {\n    let errors = [];\n    if (!question.prompt || question.prompt.trim() == \"\") {\n      errors.push(\"question prompt cannot be empty\");\n    }\n    if (question.type != QuestionType.Textbox\n        && question.type != QuestionType.SingleChoice) {\n      if (question.hasFlagCondition) {\n        if (!question.flaggedCondition.flagValues.length) {\n          errors.push(\"Flag criteria must be set, or turn off the flag checkbox\");\n        }\n        if (question.type == QuestionType.MultipleChoice\n          && question.flaggedCondition.flagDirection == \"\") {\n            errors.push(\"Flag direction must be set\");\n          }\n      }\n    }\n    if (!question.assessment_scale) {\n      errors.push(\"This question must have a scale assigned to it before saving\");\n    }\n    return errors;\n\n  }\n\n  private updateFlagValues(question:Question) {\n    if (!question.hasFlagCondition) {\n      return;\n    }\n    if (question.type == QuestionType.MultipleChoice) {\n      question.flaggedCondition.addFlagValue(this.flagValue);\n      question.flaggedCondition.flagDirection = this.flagDirection.id;\n    }\n    else if (question.type == QuestionType.Checklist) {\n      this.flagValue.foreach(i => question.flaggedCondition.addFlagValue(i));\n    }\n  }\n\n  getAnswerLabels() : QuestionSetLabel[] {\n    let labels = this.questionSet.labels;\n    if (this.question.type == QuestionType.MultipleChoice\n    || this.question.type == QuestionType.Checklist) {\n      let listQuestion = this.question as ListQuestion;\n      labels = listQuestion.CustomLabels;\n    }\n    return labels;\n  }\n\n  allowCustomLabels() {\n    if (this.questionSet\n      && this.questionSet.display_type == QuestionSetType.QUESTION_LIST\n      && this.question.type != QuestionType.SingleChoice\n      && this.question.type != QuestionType.Textbox) {\n        return true;\n    }\n    return false;\n  }\n\n  private saveQuestion(question) {\n    this.isSaving = true;\n    this.updateFlagValues(question);\n    let errors = this.validateQuestion(question);\n    if (errors.length) {\n      this.alertService.error(errors.join(\".\\n\"), 3000);\n      this.isSaving = false;\n      return;\n    }\n\n\t\treturn this.assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Question saved\", this.SAVE_TIME);\n      this.isSaving = false;\n      return question;\n    }).catch((error) => {\n      this.isSaving = false;\n      this.alertService.error(\"An error occurred in saving. Please try again or contact support.\", this.ERROR_MESSAGE_TIME);\n\t\t\tconsole.error(error);\n\t\t});\n  }\n\n  save() {\n    this.saveQuestion(this.question);\n\t}\n\n\tsaveAndCreateNew() {\n    this.saveQuestion(this.question).then((question) => {\n      this.router.navigate([\"../../\", \"new\"], {relativeTo: this.route, replaceUrl: true});\n    });\n\t}\n\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">Edit Question</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card card-cascade narrower\">\n      <div class=\"view gradient-card-header primary-gradient text-light\">\n        <h3 class='h3-responsive text-center text-truncate'>{{question.prompt || \"Untitled\"}}</h3>\n      </div>\n      <div class=\"card-body\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"type\">Type:</label>\n            <input class=\"form-control\" type=\"text\" id=\"type\" name=\"type\" [value]=\"getQuestionType(question)\" readonly />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"prompt\">Prompt:</label>\n            <input class=\"form-control\" type=\"text\" id=\"prompt\" name=\"prompt\" [(ngModel)]=\"question.prompt\" />\n          </div>\n          <!--<div class=\"form-group\">\n          <label for=\"displayOrder\">Display Order:</label>\n\t\t  <input class=\"form-control\" type=\"number\" id=\"displayOrder\" name=\"displayOrder\" [(ngModel)]=\"ctrl.question.display_order\" />\n    </div>-->\n        <div class=\"form-group\" *ngIf=\"allowCustomLabels()\" >\n          <label for=\"prompt\">Question Labels:</label>\n          <dac-question-labels-edit [question]=\"question\"></dac-question-labels-edit>\n        </div>\n\n        <div class=\"form-group\">\n            <input class=\"form-control\" [checked]=\"question.skip_scoring\"\n              type=\"checkbox\" id=\"skipScoring\" name=\"skipScoring\" [(ngModel)]=\"question.skip_scoring\" />\n            <label for=\"skipScoring\">Do not score:</label>\n          </div>\n          <div class=\"form-group\">\n            <input class=\"form-control\" [checked]=\"question.is_reversed\"\n              type=\"checkbox\" id=\"isReversed\" name=\"isReversed\" [(ngModel)]=\"question.is_reversed\" />\n            <label for=\"isReversed\">Is Reversed:</label>\n          </div>\n          <div class=\"form-group\">\n              <input class=\"form-control\" (click)=\"toggleFlagQuestion(question)\" [checked]=\"question.hasFlagCondition\" type=\"checkbox\"\n              id=\"hasFlagCondition\" name=\"hasFlagCondition\" />\n            <label for=\"hasFlagCondition\">Flag Question?:</label>\n          </div>\n          <div *ngIf=\"question.hasFlagCondition && isMultipleChoiceQuestion()\" class=\"form-group\">\n            <label for=\"flag\">Flag if answer is:</label>\n            <select id=\"flagDirection\"  class=\"browser-default form-control\"\n            name=\"flagDirection\" name=\"flagDirection\" [(ngModel)]=\"flagDirection\" [compareWith]=\"compareIds\">\n              <option *ngFor=\"let dir of FlagDirections;\" [ngValue]=\"dir\">{{dir.name}}</option>\n            </select>\n            <select class=\"form-control browser-default\" id=\"flagValue\" name=\"flagValue\" name=\"flagValue\" [(ngModel)]=\"flagValue\" [compareWith]=\"compareIds\">\n              <option *ngFor=\"let label of  getAnswerLabels();\" [ngValue]=\"label\">{{label.label}}</option>\n            </select>\n          </div>\n          <div *ngIf=\"question.hasFlagCondition && isChecklistQuestion()\" class=\"form-group\">\n            <label for=\"flag\">Flag if answer is:</label>\n            <ul>\n              <li *ngFor=\"let label of getAnswerLabels();\">\n                <label for=\"condition-{{label.id}}\">{{label.label}}</label>\n                <input id=\"condition-{{label.id}}\" type=\"checkbox\" class=\"form-control\" (click)=\"toggleChecklistFlagValue(label)\" [checked]=\"hasFlagValue(label)\" /></li>\n            </ul>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"scale\">Scale</label>\n            <select id=\"scale\" class=\"browser-default form-control\" name=\"scale\" *ngIf=\"scales?.length > 1\" [(ngModel)]=\"question.assessment_scale\">\n              <option *ngFor=\"let scale of scales\" [ngValue]=\"scale\">{{scale.name}}</option>\n            </select>\n            <input class=\"form-control\" readonly *ngIf=\"scales?.length == 1\" [value]=\"scales[0].name\">\n          </div>\n        </form>\n        <input type=\"button\" [disabled]=\"isSaving\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n        <input type=\"button\" [disabled]=\"isSaving\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\"\n        />\n        <!--<pre>\n      {{ctrl.question|json}}\n    </pre>-->\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Question } from '../../shared/models/question';\nimport { QuestionSet } from '../../shared/models/question-set';\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { Scale } from '../../shared/models/scale';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QuestionType } from \"../../shared/models/question-type\";\nimport { QuestionFactoryService } from\"../../shared/services/question-factory.service\";\nimport { QuestionSetLabel } from 'app/shared/models/question-set-label';\n\n@Component({\n  selector: 'app-question-new',\n  templateUrl: './question-new.component.html',\n  styleUrls: ['./question-new.component.css']\n})\nexport class QuestionNewComponent implements OnInit {\n\n  private _question:Question;\n  private _currentType:QuestionType;\n  private questionSet:QuestionSet;\n  private assessment:Assessment;\n  private readonly SAVE_TIME = 1500;\n  private readonly ERROR_MESSAGE_TIME = 3000;\n  public isSaving:boolean;\n\n  constructor(\n    private assessmentService:AssessmentService\n    ,private questionFactory:QuestionFactoryService\n    ,private alertService: AlertService\n    ,private location:Location\n    ,private router: Router\n    ,private route: ActivatedRoute\n  ) {\n    // make the default to be multiple choice.\n    this._currentType = QuestionType.MultipleChoice;\n    this._question = this.getNewQuestion();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let setId = params['setId'];\n      this.assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.questionSet = assessment.question_sets.find((s) => s.id == setId);\n          if (!this.questionSet) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n          this.setScaleIfSingle(this.question, this.assessment);\n        })\n        .catch((error) => {\n          console.error(error);\n          this.router.navigate([\"not-found\"]);\n        })\n    });\n  }\n\n  private setScaleIfSingle(question:Question, assessment:Assessment) {\n    if (assessment && assessment.scales && assessment.scales.length == 1) {\n      question.assessment_scale = this.assessment.scales[0];\n    }\n  }\n\n  public updateType(event:Event) {\n    let select = event.target as HTMLInputElement;\n    this._currentType = +select                 .value;\n    let newQuestion = this.getNewQuestion();\n    newQuestion.prompt = this.question.prompt;\n    newQuestion.is_reversed = this.question.is_reversed;\n    this._question = newQuestion;\n  }\n\n  public get DisplayTypes() {\n    let types = [\n      {value: QuestionType.MultipleChoice, name: \"Multiple Choice\", isSelected: false}\n      ,{value: QuestionType.Checklist, name: QuestionType[QuestionType.Checklist], isSelected: false}\n      ,{value: QuestionType.Textbox, name: QuestionType[QuestionType.Textbox], isSelected: false}\n      ,{value: QuestionType.SingleChoice, name: \"Single Choice\", isSelected: false}\n    ]\n    types.forEach(t => t.isSelected = t.value == this._currentType);\n    return types;\n  }\n\n  private getNewQuestion() {\n    let question = this.questionFactory.createQuestionForType(this._currentType);\n    question.id = this.assessmentService.newId();\n    this.setScaleIfSingle(question, this.assessment);\n    return question;\n  }\n\n  get scales() : Scale[] {\n    if (this.assessment) {\n      return this.assessment.scales;\n    }\n    return null;\n  }\n\n  get question() : Question {\n    return this._question;\n  }\n\n  get labels() : QuestionSetLabel[] {\n    return (this.questionSet ? this.questionSet.labels : []);\n  }\n\n  public isMultipleChoiceQuestion() : boolean {\n    return this._currentType == QuestionType.MultipleChoice;\n  }\n\n  private saveQuestion(question) {\n    this.questionSet.addQuestion(question);\n    this.isSaving = true;\n\t\treturn this.assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Question saved\", this.SAVE_TIME);\n      this.isSaving = false;\n      return question;\n    }).catch((error) => {\n      this.isSaving = false;\n      this.alertService.error(\"An error occurred in saving. Please try again or contact support.\", this.ERROR_MESSAGE_TIME);\n\t\t\tconsole.error(error);\n\t\t});\n  }\n\n  save() {\n    this.saveQuestion(this.question).then((question) => {\n      setTimeout(() => {\n        this.router.navigate([\"../\", this.question.id, \"edit\"], {relativeTo: this.route, replaceUrl:true});\n\t\t\t}, this.SAVE_TIME);\n    });\n\t}\n\n\tsaveAndCreateNew() {\n    this.saveQuestion(this.question).then((question) => {\n      this._question = this.getNewQuestion();\n    });\n\t}\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">New Question</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card card-cascade narrower\">\n      <div class=\"view gradient-card-header primary-gradient text-light\">\n          <h3 class='h3-responsive text-center text-truncate'>{{question.prompt || \"Untitled\"}}</h3>\n      </div>\n      <div class=\"card-body\">\n        <form>\n          <div class=\"form-group\">\n              <label for=\"prompt\">Type:</label>\n              <select class=\"form-control browser-default\" id=\"display_type\" name=\"display_type\" name=\"display_type\"\n                [(ngModel)]=\"question.type\" (change)=\"updateType($event)\">\n                <option *ngFor=\"let type of DisplayTypes; let first=first;\" [value]=\"type.value\" [selected]=\"type.isSelected\">{{type.name}}</option>\n              </select>\n            </div>\n          <div class=\"form-group\">\n              <label for=\"prompt\">Prompt:</label>\n              <input class=\"form-control\" type=\"text\" id=\"prompt\" name=\"prompt\" [(ngModel)]=\"question.prompt\" />\n            </div>\n          <!--<div class=\"form-group\">\n                <label for=\"displayOrder\">Display Order:</label>\n            <input class=\"form-control\" type=\"number\" id=\"displayOrder\" name=\"displayOrder\" [(ngModel)]=\"ctrl.question.display_order\" />\n          </div>-->\n          <div class=\"form-group\">\n            <input class=\"form-control\" [checked]=\"question.skip_scoring\"\n              type=\"checkbox\" id=\"skipScoring\" name=\"skipScoring\" [(ngModel)]=\"question.skip_scoring\" />\n            <label for=\"skipScoring\">Do not score:</label>\n          </div>\n          <div class=\"form-group\">\n            <input class=\"form-control\" [checked]=\"question.is_reversed\"\n              type=\"checkbox\" id=\"isReversed\" name=\"isReversed\" [(ngModel)]=\"question.is_reversed\" />\n            <label for=\"isReversed\">Is Reversed:</label>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"scale\">Scale</label>\n            <select class=\"form-control browser-default\" id=\"scale\" name=\"scale\" *ngIf=\"scales?.length > 1\"\n              [(ngModel)]=\"question.assessment_scale\">\n              <option *ngFor=\"let scale of scales\" [ngValue] = \"scale\">{{scale.name}}</option>\n            </select>\n            <input class=\"form-control\" readonly *ngIf=\"scales?.length == 1\" [value]=\"scales[0].name\">\n          </div>\n          </form>\n          <input type=\"button\" [disabled]=\"isSaving\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n          <input type=\"button\" [disabled]=\"isSaving\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n          <!--<pre>\n            {{ctrl.question|json}}\n          </pre>-->\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { QuestionSetLabel } from '../../shared/models/question-set-label';\nimport { QuestionSet } from '../../shared/models/question-set';\n\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-label-new',\n  templateUrl: './label-new.component.html',\n  styleUrls: ['./label-new.component.css']\n})\nexport class LabelNewComponent implements OnInit {\n\n  private _label:QuestionSetLabel;\n  private questionSet:QuestionSet;\n  private assessment:Assessment;\n  private readonly SAVE_TIME = 1500;\n  private readonly ERROR_MESSAGE_TIME = 3000;\n  public isSaving:boolean;\n\n  constructor( private assessmentService:AssessmentService\n    ,private alertService: AlertService\n    ,private location:Location\n    ,private router: Router\n    ,private route: ActivatedRoute) {\n      this.label = this.getNewObject();\n    }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let setId = params['setId'];\n      this.assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.questionSet = assessment.question_sets.find((s) => s.id == setId);\n          if (!this.questionSet) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.router.navigate([\"not-found\"]);\n        })\n    });\n  }\n\n  private getNewObject() {\n    let label = new QuestionSetLabel();\n    label.id = this.assessmentService.newId();\n    return label;\n  }\n\n  get label():QuestionSetLabel {\n    return this._label;\n  }\n\n  set label(v:QuestionSetLabel) {\n    this._label = v;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  private saveLabel(label) {\n    this.questionSet.addLabel(label);\n    this.isSaving = true;\n\t\treturn this.assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Label saved\", this.SAVE_TIME);\n      this.isSaving = false;\n      return label;\n    }).catch((error) => {\n      this.isSaving = false;\n      this.alertService.error(\"An error occurred in saving. Please try again or contact support.\", this.ERROR_MESSAGE_TIME);\n\t\t\tconsole.error(error);\n\t\t});\n  }\n\n  save() {\n    this.saveLabel(this.label).then((question) => {\n      setTimeout(() => {\n        this.router.navigate([\"../\", this.label.id, \"edit\"], {relativeTo: this.route, replaceUrl: true});\n\t\t\t}, this.SAVE_TIME);\n    });\n\t}\n\n\tsaveAndCreateNew() {\n    this.saveLabel(this.label).then((question) => {\n      this.label = this.getNewObject();\n    });\n\t}\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n      <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n      <h2 class=\"h2-responsive text-center\">New Label</h2>\n    </div>\n  </div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card card-cascade narrower\">\n      <div class=\"view gradient-card-header primary-gradient text-light\">\n          <h3 class='h3-responsive text-center text-truncate'>{{label.label || \"Untitled\"}}</h3>\n      </div>\n      <form class=\"card-body\">\n        <div class=\"form-group\">\n            <label for=\"label\">Label:</label>\n            <input class=\"form-control\" type=\"text\" id=\"label\" name=\"label\" [(ngModel)]=\"label.label\" />\n          </div>\n        <!--<div class=\"form-group\">\n              <label for=\"displayOrder\">Display Order:</label>\n          <input class=\"form-control\" type=\"number\" id=\"displayOrder\" name=\"displayOrder\" [(ngModel)]=\"ctrl.label.display_order\" />\n        </div>-->\n        <div class=\"form-group\">\n          <input class=\"form-control\" type=\"checkbox\" id=\"skip-scoring\" name=\"skip-scoring\" [checked]=\"label.skipScoring\" [(ngModel)]=\"label.skipScoring\" />\n          <label for=\"skip-scoring\">Skip Scoring: (N/A questions)</label>\n        </div>\n      </form>\n      <div class=\"row\">\n        <div class=\"col\">\n          <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n          <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n        </div>\n      </div>\n\n      <!--<pre>\n        {{label|json}}\n      </pre>-->\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ManagedClient } from 'app/shared/models/managed-client';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { AuthService } from 'app/login/services/auth.service';\nimport { User } from 'app/shared/models/user';\nimport { DacConfig } from 'app/shared/services/dac-config.service';\nimport { ClientService } from 'app/shared/services/client.service';\nimport { MessageTemplateService } from 'app/admin/services/message-template.service';\n\n@Component({\n  selector: 'dac-client-send-invitation',\n  templateUrl: './client-send-invitation.component.html',\n  styleUrls: ['./client-send-invitation.component.scss']\n})\nexport class ClientSendInvitationComponent implements OnInit {\n\n  @Input() client:ManagedClient;\n  private user:User;\n  public confirmEmail:boolean;\n  public toEmailAddress:string;\n  public emailSubject:string;\n  public emailMessage:string;\n  public fromEmailAddress:string;\n  public replyToEmailAddress:string;\n  public testEmailAddress:string;\n\n  constructor(private alertService:AlertService, private authService:AuthService,\n    private dacConfig:DacConfig, private clientService:ClientService, private messageTemplateService:MessageTemplateService) {\n\n      this.emailSubject = \"Loading...\";\n      this.emailMessage = \"Loading...\";\n\n\n    // let originalSubject =  \"Discover and Change - Assessment Portal Information\";\n    // this.emailSubject = originalSubject;\n    // this.authService.getCurrentUser().then(user => {\n    //   this.user = user;\n    //   if (this.emailSubject == originalSubject && this.user.companyName) {\n    //     this.emailSubject = \"Assessment Portal Information - \" + this.user.companyName;\n    //   }\n\n    //   this.setupEmailMessage();\n    // });\n    this.confirmEmail = false;\n  }\n\n  ngOnInit() {\n    if (!this.client) {\n      this.failMessageTemplateLoad(new Error(\"No client set for this invitation\"));\n    }\n    this.toEmailAddress = this.client.email;\n\n    this.messageTemplateService.getMessageForClient(this.client).then(msgTemplate => {\n      if (msgTemplate.subject) {\n        this.emailSubject = msgTemplate.subject;\n      } else {\n        this.emailSubject = \"\";\n      }\n\n      if (msgTemplate.message) {\n        this.emailMessage = msgTemplate.message;\n      } else {\n        this.emailMessage = \"\";\n      }\n\n      if (msgTemplate.replyTo) {\n        this.replyToEmailAddress = msgTemplate.replyTo;\n      }\n\n      if (msgTemplate.testEmail) {\n        this.testEmailAddress = msgTemplate.testEmail;\n      }\n      if (msgTemplate.to) {\n        this.toEmailAddress = msgTemplate.to;\n      }\n      if (msgTemplate.from) {\n        this.fromEmailAddress = msgTemplate.from;\n      }\n    })\n    .catch(error => {\n      this.failMessageTemplateLoad(error);\n    });\n  }\n\n  private failMessageTemplateLoad(error) {\n    console.error(error);\n      this.alertService.error(\"We failed to retrieve the email template from the server.  Check your internet connection and try to refresh the page.\");\n      this.emailMessage = \"Server Error - Failed to load\";\n      this.emailSubject = \"Server Error - Failed to load\";\n  }\n\n  public get supportEmail() {\n    return this.dacConfig.supportEmail;\n  }\n\n  public get sender() {\n    return this.user ? this.user.username : this.dacConfig.supportEmail;\n  }\n\n//   private setupEmailMessage() {\n//     let message = `Hi ${this.client.getDisplayString()},\n\n// I've created a unique code for you to use to take your assessments.\n// The identifier you'll use to login is: ${this.client.customField1}\n\n// You can take your assessments here: ${this.siteURL}`;\n//     this.emailMessage = message;\n//   }\n\n  get companyName() {\n    if (this.user) {\n      return this.user.companyName;\n    }\n    return \"\";\n  }\n\n  get userEmail() {\n    if (this.user) {\n      return this.user.username;\n    }\n    return \"\";\n  }\n\n  get siteURL() {\n    return this.dacConfig.take_test_url;\n  }\n\n  sendEmail() : void {\n    this.confirmEmail = true;\n  }\n\n  confirmEmailSend() : void {\n    this.sendEmailToServer(false);\n  }\n\n  sendTestEmail() : void {\n    this.sendEmailToServer(true);\n  }\n\n  private sendEmailToServer(isTest:boolean) {\n    // if (!this.emailSubject || !this.emailSubject.trim()) {\n    //   this.alertService.error(\"Email subject must not be empty\");\n    // }\n    if (!this.emailMessage || !this.emailMessage.trim()) {\n      this.alertService.error(\"Email message must not be empty\");\n    }\n\n    this.clientService.sendClientEmail(this.client.id, this.emailSubject, this.emailMessage, isTest)\n    .then(() => {\n      this.alertService.success(\"Email sent!\");\n      this.confirmEmail = false;\n    })\n    .catch(() => {\n      this.alertService.error(\"The email failed to send. Check your connection and try again.  Or contact support\");\n    })\n  }\n\n  copyText() : void {\n    try {\n      var copyTextarea = document.getElementById('clientEmailTemplate') as HTMLInputElement;\n      copyTextarea.select();\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n      this.alertService.success(\"Message Copied To Clipboard!\");\n    } catch (err) {\n      this.alertService.error(\"Uh Oh! Looks like your browser doesn't support this feature.  Highlight the text and press Ctrl+C or CMD+C\", 5000);\n    }\n  }\n\n}\n","<div class=\"row m-0\">\n  <label class=\"col-md-1 col-6\">\n    To:\n  </label>\n  <div class=\"col-md-11 col-6\">\n    <b>{{toEmailAddress}}</b>\n  </div>\n</div>\n<div class=\"row m-0\">\n  <label class=\"col-md-1 col-6\">\n    From:\n  </label>\n  <div class=\"col-md-11 col-6\">\n    <b>{{fromEmailAddress}}</b>\n  </div>\n</div>\n<div class=\"row m-0\">\n  <label class=\"col-md-1 col-6\">\n    Reply-To:\n  </label>\n  <div class=\"col-md-11 col-6\">\n    <b>{{replyToEmailAddress}}</b>\n  </div>\n</div>\n<!-- <div class=\"row m-0\">\n  <label class=\"col-md-1 col-6\">\n    Subject\n  </label>\n  <div class=\"col-md-11 col-6\">\n    <input type=\"text\" value=\"Subject...\" [(ngModel)]=\"emailSubject\" class=\"form-control\" />\n  </div>\n</div> -->\n<div class=\"row ml-0 mr-0 mt-2\">\n  <div class=\"col-md-1 col-6\">\n    <label>\n      Message\n    </label>\n\n  </div>\n  <div class=\"col-md-11 col-6\">\n    <textarea id=\"clientEmailTemplate\" contenteditable=\"true\" [(ngModel)]=\"emailMessage\" class=\"form-control h-100\" rows=\"10\"></textarea>\n  </div>\n</div>\n<div class=\"row ml-0 mr-0 mt-2\" *ngIf=\"!confirmEmail\">\n  <div class=\"offset-md-1 offset-6 col-md-11 col-6\">\n    <input class=\"btn btn-secondary btn-sm\" type=\"button\" value=\"Copy To Clipboard\" (click)=\"copyText()\" />\n  </div>\n</div>\n<div class=\"row ml-0 mr-0 mt-2\" *ngIf=\"!confirmEmail && testEmailAddress\">\n  <div class=\"offset-md-1 offset-6 col-md-11 col-6\">\n    <input class=\"btn btn-secondary btn\" type=\"button\" value=\"Send Test Email\" (click)=\"sendTestEmail()\" />\n    <span class=\"alert alert-info\">\n      A test email will be sent to your email account at <b>{{testEmailAddress}}</b>\n    </span>\n  </div>\n</div>\n\n<div class=\"row m-0\" *ngIf=\"!confirmEmail\">\n  <div class=\"col text-right\">\n    <input class=\"btn btn-primary\" type=\"button\" value=\"Send Email\" (click)=\"sendEmail()\" [disabled]=\"!client.email\" />\n  </div>\n</div>\n<div class=\"row ml-0 mr-0 mt-2 text-center\" *ngIf=\"confirmEmail\">\n  <div class=\"col-12\">\n    <p >\n      <i>I confirm that I have reviewed the email message and taken appropriate safeguards to limit the amount and type of information I am disclosing\n      through unencrypted e-email.  I confirm that I have verified the email address of my patient that it is correct and valid and that my patient\n      has agreed to receive this communication via unencrypted e-mail.</i>\n    </p >\n  </div>\n  <div class=\"col-12 justify-content-center\">\n    <input type=\"button\" value=\"Cancel\" class=\"btn btn-secondary\" (click)=\"confirmEmail = false\" />\n    <input type=\"button\" value=\"Confirm and Send Email\" class=\"btn btn-primary\" (click)=\"confirmEmailSend()\" />\n  </div>\n</div>\n<div class=\"row m-0\" *ngIf=\"!client.email\">\n  <p class=\"col alert alert-danger\">\n    You must assign an email address to this client in order to send an email.\n  </p>\n</div>\n<div class=\"row m-0\">\n  <div class=\"alert alert-warning\">\n    <p>Note that the HIPAA Privacy Rule does not prohibit the use of unecrypted e-mail for treatment-related communications\n    between health care providers and patients.  However, <b>other safeguards should be applied to reasonably protect privacy,\n    such as limiting the amount or type of information disclosed through the unencrypted e-mail.</b></p>\n    <p>\n    You can read more here about this from HHS <i><a href=\"https://www.hhs.gov/hipaa/for-professionals/faq/570/does-hipaa-permit-health-care-providers-to-use-email-to-discuss-health-issues-with-patients/index.html\">Does the HIPAA Privacy Rule permit health care providers to use e-mail to discuss health issues and treatment with their patients?</a></i>\n    </p>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {ShoppingService} from \"../../shared/services/shopping.service\";\nimport {Item} from '../models/item';\nimport { AlertService } from 'app/shared/services/alert.service';\n\n@Component({\n  selector: 'shop-items',\n  templateUrl: './shop-items.component.html',\n  styleUrls: ['./shop-items.component.css']\n})\nexport class ShopItemsComponent implements OnInit {\n\n  private _items:Item[];\n  private _groupItems:Item[];\n  private _hasLoadedShop:boolean;\n\n  constructor(\n    private shopping:ShoppingService\n    ,private alertService: AlertService\n    ,private router:Router\n    ,private route:ActivatedRoute\n  ) {\n    this._hasLoadedShop = false;\n  }\n\n  ngOnInit() {\n    this.shopping.getAvailableItems().then((items) => {\n      this._groupItems = items.filter((i) => i.subItems && i.subItems.length);\n      this._items = items.filter((i) => !(i.subItems && i.subItems.length));\n      this._hasLoadedShop = true;\n    });\n  }\n\n  get hasLoadedShop() {\n    return this._hasLoadedShop;\n  }\n\n  addItemsToCart() {\n    let totalitems = this.getItemsForCheckout();\n    // return a resolved promise since there's nothing to do here.\n    if (!totalitems.length) {\n      return Promise.resolve();\n    }\n\n    let totalQuantity = totalitems.map(i => i.quantity).reduce((pv, cv) => pv+cv, 0);\n    this.addItems(totalitems)\n    .then(() => {\n      let message = totalQuantity + \" items were added to your cart\";\n      this.alertService.success(message);\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.error(\"There was a problem in adding the items you selected to the cart.  Please try again.\");\n    });\n  }\n\n  checkout() {\n    let items = this.getItemsForCheckout();\n    if (!(items.length || this.hasItems)) {\n      this.alertService.error(\"Please select the number of items you wish to purchase before checking out.\");\n      return;\n    }\n\n    this.addItems(items)\n    .then(() => {\n      return this.router.navigate([\"checkout\"], {relativeTo: this.route});\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.error(\"There was a problem in checking out your items, please try again or contact customer support.\");\n    });\n  }\n\n  private addItems(items:Item[]) {\n    return Promise.all(items.map(i => this.shopping.addItemToCart(i)))\n    .then((results) => {\n      items.forEach(i => i.quantity = 0);\n    });\n  }\n\n\n  private getItemsForCheckout() {\n    let groupItems = this._groupItems.filter(gi => gi.quantity > 0);\n    let items = this._items.filter(i => i.quantity > 0);\n    let totalItems = groupItems.concat(items);\n    return totalItems;\n  }\n\n  get hasItems() {\n    return this.shopping.hasItems;\n  }\n\n  get groupItems() {\n    return this._groupItems;\n  }\n\n  get items() {\n    return this._items;\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hasLoadedShop\">\n  <div class=\"col-12\">\n    <p class=\"alert alert-warning\">\n      <app-spin-icon></app-spin-icon> Loading Shop...</p>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"hasLoadedShop\">\n  <div class=\"col-12\">\n    <div class=\"row mb-3\">\n      <h1 class=\"col-8 h1-responsive m-0\">Shop</h1>\n      <hr />\n    </div>\n    <div class=\"row\">\n      <div class=\"card card-cascade wider col mb-5\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n          <h3 class='h3-responsive text-center text-truncate'>Package Deals</h3>\n        </div>\n        <div class=\"card-body\">\n          <table class=\"table table-striped\">\n            <thead class=\"secondary-color text-light\">\n              <tr>\n                <th w=\"50\">Package</th>\n                <th>Price</th>\n                <th w=\"25\">Quantity</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"items-list\" *ngFor=\"let item of groupItems\">\n                <td>\n                  {{item.name}}\n                  <ul *ngIf=\"item.subItems?.length\">\n                    <li *ngFor=\"let subItem of item.subItems\">{{subItem.name}}</li>\n                  </ul>\n                </td>\n                <td>${{item.price}}</td>\n                <td>\n                  <select class=\"form-control browser-default\" [(ngModel)]=\"item.quantity\">\n                    <option *ngFor=\"let item of [0, 1,2,3,4,5,10,15,20,25,50]\">{{item}}</option>\n                  </select>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"card card-cascade wider col\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n          <h3 class='h3-responsive text-center text-truncate'>Individual Assessments</h3>\n        </div>\n        <div class=\"card-body\">\n          <table class=\"table table-striped\">\n            <thead class=\"secondary-color text-light\">\n              <tr>\n                <th w=\"50\">Assessment</th>\n                <th>Price</th>\n                <th w=\"25\">Quantity</th>\n              </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of items\">\n                    <td>{{item.name}}\n                      <ul *ngIf=\"item.subItems?.length\">\n                        <li *ngFor=\"let subItem of item.subItems\">{{subItem.name}}</li>\n                      </ul>\n                    </td>\n                    <td>${{item.price}}</td>\n                    <td><select class=\"form-control browser-default\" [(ngModel)]=\"item.quantity\">\n                        <option *ngFor=\"let item of [0, 1,2,3,4,5,10,15,20,25,50]\">{{item}}</option>\n                      </select>\n                    </td>\n                  </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    <div class=\"row w-100 shoppingActionBar border bg-light\">\n      <cart-widget class=\"col-sm-5 col-md-6\"></cart-widget>\n      <div class=\"col-sm-7 col-md-6\">\n        <input type=\"button\" class=\"btn btn-secondary\" value=\"Add to Cart\" (click)=\"addItemsToCart()\" />\n        <input type=\"button\" class=\"btn btn-primary\" value=\"Checkout\" (click)=\"checkout()\" />\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { ErrorCode } from \"./ErrorCodes\";\n\nexport class SystemError extends Error {\n    private _code:ErrorCode;\n    private _subErrors:SystemError[];\n\n    constructor(code:ErrorCode, message:string, subErrors?:SystemError[]) {\n\t\tsuper(message)\n        this.code = code;\n        this.message = message;\n        this.subErrors = subErrors;\n    }\n\n\n\tpublic get code(): ErrorCode {\n\t\treturn this._code;\n\t}\n\n\tpublic set code(value: ErrorCode) {\n\t\tthis._code = value;\n\t}\n\n\tpublic get subErrors(): SystemError[] {\n\t\treturn this._subErrors;\n\t}\n\n\tpublic set subErrors(value: SystemError[]) {\n\t\tthis._subErrors = value;\n\t}\n\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport {Assessment} from \"../../shared/models/assessment\";\nimport {Scale} from \"../../shared/models/scale\";\nimport {ScaleRange} from \"../../shared/models/scale-range\";\nimport {SaveMessages} from \"../../shared/models/save-messages\";\nimport {AssessmentService} from \"../../shared/services/assessment.service\";\n\nclass ScaleAvailableDisplay extends Scale {\n  public available: boolean;\n}\n\n@Component({\n  selector: 'app-scale-edit',\n  templateUrl: './scale-edit.component.html',\n  styleUrls: ['./scale-edit.component.css']\n})\nexport class ScaleEditComponent implements OnInit {\n\n  private _scale:Scale;\n  private _messages:SaveMessages;\n  private _assessment:Assessment;\n  private _hasLoaded:boolean;\n\n  constructor(private _assessmentService:AssessmentService\n   ,private route:ActivatedRoute\n   ,private alertService:AlertService\n    ,private router:Router) {\n    this._scale = new Scale();\n    this._scale.id = this._assessmentService.newId();\n    this._hasLoaded = false;\n  }\n\n\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let scaleId = params['scaleId'];\n      this._assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this._assessment = assessment;\n          this._scale = assessment.scales.find((s) => s.id == scaleId);\n          this._hasLoaded = true;\n          if (!this._scale) {\n            this.router.navigate(['/not-found']);\n          }\n        })\n        .catch((error) => {\n          this.alertService.error(\"There was an error loading the scale data. Check your internet connection and refresh the page.\");\n          console.error(error);\n        })\n    });\n  }\n\n  get hasLoaded() {\n    return this._hasLoaded;\n  }\n\n  get scale() {\n    return this._scale;\n  }\n\n  set scale(v:Scale) {\n    this._scale = v;\n  }\n\n  get AvailableSubScales() :ScaleAvailableDisplay[] {\n\n      let subScaleDisplayList = [];\n      let availableScales = this._scale.getAvailableSubScales(this._assessment.scales);\n      availableScales.forEach((available, scale) => {\n        let subScaleDisplay = Object.assign(new ScaleAvailableDisplay(), scale);\n        subScaleDisplay.available = available;\n        subScaleDisplayList.push(subScaleDisplay);\n      });\n      return subScaleDisplayList;\n  }\n\n  get ScaleTypes() {\n    return [\"Sum\",\"CriteriaThreshold\", \"Mean\"]\n  }\n\n  toggleSubScale(scale:Scale) {\n    if (this._scale.hasSubScale(scale)) {\n      this._scale.removeSubScale(scale);\n    }\n    else {\n      this._scale.addSubScale(scale);\n    }\n  }\n\n  isSelected(subScale:Scale) {\n    return this._scale.hasSubScale(subScale);\n  }\n\n  updateType(type:\"Sum\"|\"CriteriaThreshold\") {\n    this._scale.type = type;\n    if (type == \"Sum\") {\n      this.scale.gradingData = {requiredQuestion:0,requiredScoreThreshold:0};\n    }\n  }\n\n  save() {\n\n\t\tthis._assessmentService.saveAssessment(this._assessment).then(() => {\n      this.alertService.success(\"Scale Saved!\");\n    }).catch((error) => {\n      this.alertService.error(\"Error occurred in saving. Please try again.\");\n      console.error(error);\n\t\t});\n\t}\n\n\tsaveAndCreateNew() {\n\t\tthis._assessmentService.saveAssessment(this._assessment).then((assessment) => {\n\t\t\t\tthis._messages.saveSuccess = true;\n        setTimeout(() => {\n          // we replace the url so we our back button can handle saving properly.\n          this.router.navigate([\"../../\", \"new\"], {relativeTo: this.route, replaceUrl: true});\n        })\n    })\n    .catch((error) => {\n      console.log(error);\n      this.alertService.error(\"Error occurred in saving. Please try again.\");\n\t\t});\n\t}\n\n  deleteRange(range:ScaleRange) {\n\t\tif (!confirm(\"Are you sure you want to delete this range?\")) {\n\t\t\treturn;\n\t\t}\n\t\tthis.scale.removeRange(range);\n\t\tthis._assessmentService.saveAssessment(this._assessment).then(() => {\n      this.alertService.success(\"Range Deleted!\");\n    })\n\t\t.catch((error) => {\n      console.log(error);\n      this.alertService.success(\"Error occurred in deleting. Please try again.!\");\n\t\t})\n\t}\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">{{scale.name}}</h2>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"hasLoaded\">\n  <dac-tabs class=\"col-12\">\n    <dac-tab heading=\"General\">\n      <form *ngIf=\"scale\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name:</label>\n          <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"scale.name\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Client Description:</label>\n          <input class=\"form-control\" type=\"text\" id=\"descriptionClient\" name=\"descriptionClient\" [(ngModel)]=\"scale.descriptionClient\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Therapist Description:</label>\n          <input class=\"form-control\" type=\"text\" id=\"descriptionTherapist\" name=\"descriptionTherapist\" [(ngModel)]=\"scale.descriptionTherapist\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"multiplier\">Multiplier:</label>\n          <input class=\"form-control\" type=\"number\" id=\"multiplier\" name=\"multiplier\" [(ngModel)]=\"scale.multiplier\" />\n        </div>\n        <div class=\"form-group\">\n          <input class=\"form-control\" type=\"checkbox\" id=\"negToPositive\" name=\"negToPositive\" [(ngModel)]=\"scale.negativeToPositiveRanges\"\n          />\n          <label for=\"negToPositive\">Negative to Positive Ranges:</label>\n        </div>\n        <div class=\"form-group\">\n            <input class=\"form-control\" type=\"checkbox\" id=\"includeInReports\" name=\"includeInReports\" [(ngModel)]=\"scale.includeInReports\"\n            />\n            <label for=\"includeInReports\">Include in reports:</label>\n        </div>\n        <div class=\"form-group\" *ngIf=\"scale.hasSubScales()\">\n            <input class=\"form-control\" type=\"checkbox\" id=\"rollUpSubScales\" name=\"rollUpSubScales\" [(ngModel)]=\"scale.rollUpSubScales\" />\n            <label for=\"rollUpSubScales\">Rollup subscale questions into this scale:</label>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"type\">Type</label>\n          <select id=\"scale\" class=\"browser-default form-control\" name=\"type\" [ngModel]=\"scale.type\" (ngModelChange)=\"updateType($event)\">\n            <option *ngFor=\"let type of ScaleTypes\" [ngValue]=\"type\">{{type}}</option>\n          </select>\n          {{scale.type}}\n        </div>\n        <div class=\"form-group\" *ngIf=\"scale.type == 'CriteriaThreshold'\">\n            <label for=\"type\">Threshold Required Number of Questions</label>\n            <input class=\"form-control\" type=\"number\" id=\"requiredQuestions\" name=\"requiredQuestions\" [(ngModel)]=\"scale.gradingData.requiredQuestions\" />\n        </div>\n        <div class=\"form-group\" *ngIf=\"scale.type == 'CriteriaThreshold'\">\n            <label for=\"type\">Threshold Criteria Score of Questions</label>\n            <input class=\"form-control\" type=\"number\" id=\"requiredScoreThreshold\" name=\"requiredScoreThreshold\" [(ngModel)]=\"scale.gradingData.requiredScoreThreshold\" />\n        </div>\n        <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n        <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n      </form>\n    </dac-tab>\n    <dac-tab heading=\"Ranges\">\n      <h2>Scale Ranges</h2>\n      <a [routerLink]=\"['scale-range','new']\" type=\"button\" class=\"btn btn-primary\">New Range</a>\n      <p class=\"alert alert-info\" *ngIf=\"!scale.ranges.length\">No Ranges exist.</p>\n      <table class=\"table table-striped\" *ngIf=\"scale.ranges.length\">\n        <thead>\n          <tr>\n            <th *ngFor=\"let name of ['Display Name', 'Range', 'Therapist Content', 'Client Content', 'Actions']\">{{name}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let range of scale.ranges\">\n            <td>{{range.displayName}}</td>\n            <td>{{range.rangeStart}} - {{range.rangeEnd}}</td>\n            <td class=\"w-25\">\n              <div [innerHTML]=\"range.therapistContent\"></div>\n            </td>\n            <td class=\"w-25\">\n              <div [innerHTML]=\"range.clientContent\"></div>\n            </td>\n            <td class=\"w-25\">\n              <button [routerLink]=\"['scale-range',range.id, 'edit']\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Edit\">\n                <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\n              </button>\n              <button (click)=\"deleteRange(range)\" type=\"button\" class=\"btn btn-secondary btn-sm\" aria-label=\"Delete\">\n                <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </dac-tab>\n    <dac-tab heading=\"Sub Scales\">\n      <h2>Sub Scales</h2>\n      <form>\n        <div class=\"form-group\">\n          <h2 class=\"h2-responsive\">Possible Subscales</h2>\n          <div *ngFor=\"let subscale of AvailableSubScales\">\n            <input [id]=\"subscale.id\" class=\"form-control\" type=\"checkbox\" (click)=\"toggleSubScale(subscale)\" [checked]=\"isSelected(subscale)\"\n              [disabled]=\"!subscale.available\" />\n            <label [for]=\"subscale.id\" (click)=\"toggleSubScale(subscale)\">{{subscale.name}}</label>\n          </div>\n        </div>\n        <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n        <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n      </form>\n    </dac-tab>\n  </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { OrderService } from '../../shared/services/order.service';\nimport { Order } from '../../shared/models/order';\n\n@Component({\n  selector: 'dac-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class OrderHistoryComponent implements OnInit {\n\n  private _orders:Order[];\n  private _isLoaded:boolean;\n\n  constructor(\n    private orderService:OrderService\n  ) {\n    this._orders = [];\n    this._isLoaded = false;\n  }\n\n  ngOnInit() {\n    this.orderService.getOrderHistory().then(orders => {\n      this._orders = orders;\n      this._isLoaded = true;\n    })\n    .catch(error => {\n      console.error(error);\n    })\n  }\n\n  hasMoreResults() {\n    return this.orderService.hasMoreResults();\n  }\n\n  loadMore() {\n    this.orderService.loadMore().then(orders => this._orders = orders);\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get hasOrders() {\n    return this._orders && this._orders.length;\n  }\n\n  get orders() {\n    return this._orders;\n  }\n\n}\n","<div *ngIf=\"isLoaded && !hasOrders\" class=\"row\">\n    <div class=\"col\">\n        <p class=\"alert alert-info\">No payments currently exist. When you make a payment your payment history will show up here</p>\n    </div>\n</div>\n\n<table *ngIf=\"hasOrders\" class=\"table-striped table\">\n    <thead class=\"secondary-color text-light\">\n        <tr>\n            <td>Id</td>\n            <td>Amount</td>\n            <td>Status</td>\n            <td>Date</td>\n            <td>Last Update Date</td>\n            <td># Items</td>\n            <td>View</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let order of orders\">\n            <td>{{order.id}}</td>\n            <td>${{order.total| number:'1.2-2'}}</td>\n            <td>{{order.status}}</td>\n            <td>{{order?.creation_date| date:'short'}}</td>\n            <td>{{order?.last_update_date| date:'short'}}</td>\n            <td>{{order.orderItems?.length}}</td>\n            <td>\n                <a class=\"btn btn-primary btn-sm\" [routerLink]=\"['/admin','my-account','order',order.id]\">\n                    <i class=\"fa fa-eye\"></i>\n                </a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<input class=\"btn btn-primary\" type=\"button\" (click)=\"loadMore()\"\n*ngIf=\"hasMoreResults()\"\nvalue=\"Load More\" />\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {UserService } from \"../../shared/services/user.service\";\nimport { User } from \"../../shared/models/user\";\nimport { Role } from 'app/shared/models/role';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  private _users:User[];\n  private singleAdmin:boolean;\n  public showArchivedUsers:boolean;\n\n  constructor(private userService:UserService) {\n    this._users = [];\n    this.showArchivedUsers = false;\n  }\n\n  ngOnInit() {\n\n    this.userService.getUsers().then((users) => {\n      let adminUserId = 0;\n\n      users.forEach(u => {\n        if (u.role == Role.Admin) {\n          if (adminUserId === 0) {\n            adminUserId = u.id;\n            this.singleAdmin = true;\n          }\n          else {\n            this.singleAdmin = false;\n          }\n        }\n      });\n      this._users = users\n    });\n  }\n\n  public restoreUser(user:User) {\n    this.userService.restoreUser(user);\n  }\n\n  public archiveUser(user:User) {\n    if (confirm(\"Are you sure you want to archive this user?\")) {\n      this.userService.archiveUser(user);\n    }\n  }\n\n  public get Users() {\n    return this._users.filter(u => {\n      if (this.showArchivedUsers) {\n        return !u.enabled;\n      } else {\n        return u.enabled;\n      }\n    });\n  }\n\n  toggleArchivedUsers() {\n    this.showArchivedUsers = !this.showArchivedUsers;\n  }\n\n  doSearch(search:string) {\n\n  }\n\n  resetSearch() {\n\n  }\n\n  canDeleteUser(user:User) {\n    if (this.singleAdmin && user.role == Role.Admin) {\n      return false;\n    }\n    else if (user.role == Role.SuperUser) {\n      return false;\n    } else if (user.role == Role.Owner) {\n      return false;\n    }\n    return true;\n  }\n}\n","<div class=\"col-12\">\n    <h1 class=\"h1-responsive\">Users List  <input type=\"button\" class=\"btn btn-primary\"\n            [routerLink]=\"['new']\"\n            value=\"Add User\" /></h1>\n            <input class=\"form-control\" id=\"showArchivedUsers\" type=\"checkbox\"\n            (click)=\"toggleArchivedUsers()\" [checked]=\"showArchivedUsers\"/> <label for=\"showArchivedUsers\">Show Archived Users</label>\n    <!-- <search-input (search)=\"doSearch($event)\" (reset)=\"resetSearch()\" class=\"mb-3\"></search-input> -->\n    <table class=\"table table-striped\">\n        <thead class=\"primary-color text-white\">\n            <tr>\n                <th>Username</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th *ngIf=\"showArchivedUsers\">Archived</th>\n                <th>Role</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of Users\">\n                <td>{{user.username}}</td>\n                <td>{{user.firstName}}</td>\n                <td>{{user.lastName}}</td>\n                <td *ngIf=\"showArchivedUsers\"><span *ngIf=\"!user.enabled\">Archived</span></td>\n                <td>{{user.roleName}}</td>\n                <td>\n                    <button aria-label=\"Edit\" class=\"btn btn-primary btn-sm\" type=\"button\" tabindex=\"0\" [routerLink]=\"[user.id, 'edit']\">\n                        <span aria-hidden=\"true\" class=\"fa fa-edit\"></span>\n                    </button>\n                    <button *ngIf=\"user.enabled\" aria-label=\"Archive User\" title=\"Archive User\" class=\"btn btn-primary btn-sm\" type=\"button\" tabindex=\"0\" (click)=\"archiveUser(user)\" [disabled]=\"!canDeleteUser(user)\">\n                        <span aria-hidden=\"true\" class=\"fa fa-archive\"></span>\n                    </button>\n                    <button *ngIf=\"!user.enabled\" aria-label=\"Restore User\" title=\"Restore User\" class=\"btn btn-primary btn-sm\" type=\"button\" tabindex=\"0\" (click)=\"restoreUser(user)\">\n                        <span aria-hidden=\"true\" class=\"fa fa-undo\"></span>\n                    </button>\n                </td>\n\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { FhirClientComponent } from \"app/debug/fhir-client/fhir-client.component\";\nimport { Assignment } from \"app/shared/models/Assignment\";\nimport { ManagedClient } from \"app/shared/models/managed-client\";\nimport { ClientService } from \"app/shared/services/client.service\";\nimport { FhirService } from \"app/shared/services/fhir-service\";\n\n/*\n *   Copyright (c) 2023 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\n@Component(\n  {\n    templateUrl: './client-appointment-assignment-edit.component.html',\n    selector: 'dac-client-appointment-assignment-edit'\n  }\n)\nexport class ClientAppointmentAssignmentEdit implements OnInit {\n  public client:ManagedClient;\n  public appointment:any;\n  public assignments:Assignment[];\n\n  constructor(private fhirClient:FhirService, private clientService:ClientService\n    , private route:ActivatedRoute) {\n\n  }\n  ngOnInit(): void {\n    let clientId = this.route.snapshot.params['id'];\n    let clientPromise = this.clientService.getClient(clientId)\n    let fhirClientPromise = this.fhirClient.getFhirClient();\n    Promise.all([clientPromise, fhirClientPromise])\n    .then(results => {\n      this.client = results[0];\n      let fhirClient = results[1];\n      let appt = this.fhirClient.getFhirContextFromClient(fhirClient, 'Appointment');\n      if (appt && appt.reference && appt.reference.indexOf(\"/\") !== false) {\n        let parts = appt.reference.split(\"/\");\n        let id = parts[1];\n        this.appointment = id;\n        this.assignments = this.client.assignments.filter(a => a.AppointmentId == id);\n      }\n    });\n  }\n\n}\n","<!-- <ul>\n  <li *ngFor=\"let item in assignments\">{{item.Name}}</li>\n</ul> -->\n<p class=\"alert alert-info\" *ngIf=\"!client\">Loading...</p>\n<dac-client-manage-assignments *ngIf=\"client\" [client]=\"client\" [appointment]=\"appointment\"></dac-client-manage-assignments>\n<!-- Add Homework\n\nAdd Profile\n\nAdd AssessmentGroup -->\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { AssessmentGroup } from \"app/shared/models/assessment-group\";\nimport { AssessmentTokenService } from \"app/shared/services/assessment-token.service\";\nimport { AlertService } from \"app/shared/services/alert.service\";\nimport { ClientService } from \"app/shared/services/client.service\";\nimport { ManagedClient } from \"app/shared/models/managed-client\";\nimport { Assignment } from \"app/shared/models/Assignment\";\nimport { Assessment } from \"app/shared/models/assessment\";\nimport { AssignedAssessment } from \"app/shared/models/AssignedAssessment\";\nimport { Injectable } from \"@angular/core\";\nimport { AssignmentService } from \"app/shared/services/assignment.service\";\nimport { AssignedAssessmentGroup } from \"app/shared/models/AssignedAssessmentGroup\";\nimport { AssignmentSingle } from \"app/shared/models/AssignmentSingle\";\n\n/**\n * The responsibility of this class is to take assessment batteries &\n * individual assessments and assign them to clients.\n */\n@Injectable()\nexport class AssessmentAssignerService {\n\n    constructor(private assessmentTokenService:AssessmentTokenService\n      , private alertService:AlertService, private clientService:ClientService\n      , private assignmentService:AssignmentService)\n    {\n\n    }\n    public async addAssessmentsFromBattery(client:ManagedClient, group:AssessmentGroup, assignmentId?:string) : Promise<Assignment> {\n        if (!group) {\n          console.error(\"group was null.  Cannot add\");\n          throw new Error(\"There was an error in adding this item to the client.  Please try again or contact customer support\");\n        }\n\n        // add each of the group assignments.\n        // TODO: should we do a promise.All here?? so we can trigger a message\n        // when all of the assessments have been added?\n        if (this.assessmentTokenService.isTokensEnabled()\n            && this.assessmentTokenService.getGroupRemainingTokens(group) <= 0) {\n          throw new Error(\"You have no available tokens for this battery. Purchase more to assign this battery\");\n          return;\n        }\n        try {\n          let assignment:Assignment = await this.assignmentService.createClientGroupAssignment(client, group, assignmentId);\n          this.consumeTokens(assignment);\n          client.assignments.push(assignment);\n          this.clientService.syncLocalClient(client);\n          return assignment;\n        }\n        catch(error) {\n          console.error(error);\n          throw new Error(\"There was an error in adding this item to the client.  Please try again or contact customer support\");\n        }\n    }\n\n    public addAssessment(client:ManagedClient, assessment: Assessment, appointmentId?:string) {\n        console.log(\"adding \", assessment);\n        if (!assessment) {\n          console.error(\"assessment was null.  Cannot add\");\n          return;\n        }\n\n        if (this.assessmentTokenService.isTokensEnabled()\n            && !this.assessmentTokenService.hasTokens(assessment)) {\n          this.alertService.error( \"You have no available tokens for this assessment.  Purchase more to assign this test\", 3000);\n          return;\n        }\n        // TODO: stephen this needs to be switched to be the\n        // assessments.\n        let assignment = new AssignmentSingle();\n        assignment.Type = \"Assessment\";\n        assignment.DateAssigned = new Date();\n        assignment.AppointmentId = appointmentId || null;\n        let assignmentItem = new AssignedAssessment();\n        assignmentItem.Name = assessment.name;\n        assignmentItem.Type = \"Assessment\";\n        assignmentItem.Uid = assessment.uid;\n        assignment.Items.push(assignmentItem);\n\n        let alertId = this.alertService.info(\"Adding \" + assessment.name + \" to \" + client.id, 120000);\n        return this.assignmentService.saveClientAssignment(client, assignment)\n          .then((assignment:Assignment) => {\n            this.consumeTokens(assignment);\n            client.assignments.push(assignment);\n            this.clientService.syncLocalClient(client);\n            this.clearAlert(alertId, 750);\n            this.alertService.success(\"Added \" + assessment.name + \" to \" + client.id);\n          })\n          .catch((error) => {\n            this.clearAlert(alertId);\n            this.alertService.error(\"There was an error in adding this item to the client.  Please try again or contact customer support\");\n            console.error(error);\n          });\n    }\n\n    private consumeTokens(assignment:Assignment) {\n      let method = this.assessmentTokenService.consumeToken.bind(this.assessmentTokenService);\n      return this.applyAssignmentMethod(assignment, method);\n    }\n\n    private freeTokens(assignment:Assignment) {\n      let method = this.assessmentTokenService.freeToken.bind(this.assessmentTokenService);\n      return this.applyAssignmentMethod(assignment, method);\n    }\n    private applyAssignmentMethod(assignment:Assignment, method:(uid:string) => void) {\n      if (this.assessmentTokenService.isTokensEnabled()) {\n        if (assignment.Type == \"Assessment\" && assignment.Items.length) {\n          let item = assignment.Items[0] as AssignedAssessment;\n          method(item.Uid);\n        } else if (assignment.Type == \"AssessmentGroup\") {\n          let item = assignment as AssignedAssessmentGroup;\n          item.getAssessmentItems().map(i => method(i.Uid));\n        }\n      }\n    }\n\n    private clearAlert(alertId, timeout?:number) {\n    timeout = timeout || 0;\n\n    // we set a slight delay so people can see we were adding the assessment.\n    setTimeout(() => {\n        this.alertService.clearAlert(alertId);\n    }, timeout);\n    }\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, SimpleChanges, Input, OnChanges } from '@angular/core';\nimport { Question } from 'app/shared/models/question';\nimport { ListQuestion } from 'app/shared/models/list-question';\nimport { QuestionSetLabel } from 'app/shared/models/question-set-label';\nimport { UniqueIdService } from 'app/shared/services/unique-id.service';\n\n@Component({\n  selector: 'dac-question-labels-edit',\n  templateUrl: './question-labels-edit.component.html',\n  styleUrls: ['./question-labels-edit.component.scss']\n})\nexport class QuestionLabelsEditComponent implements OnInit, OnChanges {\n\n  @Input() question:ListQuestion;\n\n  public labels:QuestionSetLabel[];\n  public newLabel:QuestionSetLabel;\n\n  constructor(private uuid:UniqueIdService) {\n    this.labels = [];\n    this.createNewLabel();\n  }\n\n  ngOnInit() {\n    this.updateLabels();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateLabels();\n  }\n\n  private createNewLabel() {\n    this.newLabel = new QuestionSetLabel();\n    this.newLabel.id = this.uuid.generate();\n  }\n\n  public addLabel() {\n    this.question.addLabel(this.newLabel);\n    this.updateLabels();\n    this.createNewLabel();\n  }\n\n  public shiftUpLabel(label:QuestionSetLabel) {\n    this.question.shiftUpLabel(label);\n  }\n\n  public shiftDownLabel(label:QuestionSetLabel) {\n    this.question.shiftDownLabel(label);\n  }\n\n  public deleteLabel(label:QuestionSetLabel) {\n    this.question.removeLabel(label);\n  }\n\n  private updateLabels() {\n    if (!this.question) {\n      this.labels = [];\n    }\n    this.labels = this.question.CustomLabels;\n  }\n}\n","<p class=\"alert alert-info\" *ngIf=\"labels.length <= 0\">No labels exist for this question yet.</p>\n<table class=\"table table-striped\" *ngIf=\"labels.length\">\n    <thead class=\"secondary-color text-white\">\n        <tr>\n            <th>Label</th>\n            <th>Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let label of labels; let first = first; let last=last;\">\n            <td>\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"label.label\" />\n            </td>\n            <td>\n                <button (click)=\"shiftUpLabel(label)\" [disabled]=\"first\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Up\">\n                    <span class=\"fa fa-arrow-up\" aria-hidden=\"true\"></span>\n                </button>\n                <button (click)=\"shiftDownLabel(label)\" [disabled]=\"last\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Down\">\n                    <span class=\"fa fa-arrow-down\" aria-hidden=\"true\"></span>\n                </button>\n                <button (click)=\"deleteLabel(label)\" type=\"button\" class=\"btn btn-secondary btn-sm\" aria-label=\"Delete\">\n                    <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<div class=\"row\">\n        <input type=\"text\" [(ngModel)]=\"newLabel.label\" class=\"form-control col\" placeholder=\"Label Name...\" />\n        <div class=\"col\">\n            <input type=\"button\" class=\"btn btn-primary\" value=\"Add\" (click)=\"addLabel()\" />\n        </div>\n</div>\n\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { CompanyService } from 'app/shared/services/company.service';\nimport { Company } from 'app/shared/models/company';\n\n@Component({\n  selector: 'app-companies-list',\n  templateUrl: './companies-list.component.html',\n  styleUrls: ['./companies-list.component.css']\n})\nexport class CompaniesListComponent implements OnInit {\n\n  public Companies:Company[];\n  constructor(private companyService:CompanyService) { }\n\n  ngOnInit() {\n    this.companyService.getCompanies().then((companies) => {\n      this.Companies = companies;\n    })\n  }\n\n}\n","<div class=\"col-12\">\n    <h1 class=\"h1-responsive\">Companies List\n        <input type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['new']\" value=\"Add Company\" />\n    </h1>\n    <!-- <search-input (search)=\"doSearch()\" reset=\"resetSearch()\"></search-input> -->\n    <table class=\"table table-striped\">\n        <thead class=\"primary-color text-white\">\n            <tr>\n\n                <th>Company</th>\n                <th>Contact Email</th>\n                <th>Host Site</th>\n\n                <th>Client Count</th>\n                <th>Token Count</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let company of Companies\">\n\n                <td>{{company.name}}</td>\n                <td>{{company.email}}</td>\n                <td>{{company.hostSiteName}}</td>\n                <td>{{company.clientCount}}</td>\n                <td>{{company.tokenCount}}</td>\n\n                <td>\n                    <button aria-label=\"Edit\" class=\"btn btn-primary btn-sm\" type=\"button\" tabindex=\"0\" [routerLink]=\"[company.id, 'edit']\">\n                        <span aria-hidden=\"true\" class=\"fa fa-edit\"></span>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Injectable } from \"@angular/core\";\nimport { HTTPService } from \"app/shared/services/http.service\";\nimport { AuthService } from \"app/login/services/auth.service\";\nimport { first } from \"rxjs/operators\";\nimport { SubscriptionService } from \"./subscription.service\";\n\n@Injectable()\nexport class AnnouncementService {\n\n    constructor(private dac$http:HTTPService, private authService:AuthService, private subscriptionService:SubscriptionService) {\n    }\n\n    public getAnnouncements() {\n      return Promise.resolve([]); // just return nothing for now as we will add announcements back later.\n\n        // let announcementRequest = this.dac$http.get<{id:number,content:string, link:string, linkTitle:string}[]>(\"announcements\");\n        // let loginStateRequest = this.authService.getLoginState().pipe(first()).toPromise();\n        // return Promise.all([announcementRequest, loginStateRequest]).then((results) => {\n        //     let [announcement, loginState] = results;\n        //     let announcementResults = [];\n        //     if (announcement.length) {\n        //         announcementResults = announcement.map(i => {\n        //             return {\n        //                 id: i.id\n        //                 ,content: i.content\n        //                 ,link: i.link\n        //                 ,linkTitle: i.linkTitle\n        //                 ,linkType: 'external'\n        //                 ,type: 'info'\n        //             };\n        //         });\n        //     }\n\n        //     if (loginState && !loginState.user.hasActiveSubscription()) {\n        //         announcementResults.push({\n        //             id: '0-expiredsubscription'\n        //             ,content: \"Your current subscription has ended and some functionality has been disabled.  Avoid termination of services by activating your subscription!\"\n        //             ,link: this.subscriptionService.getSubscriptionPageRoute()\n        //             ,linkTitle: 'Learn More'\n        //             ,linkType: 'internal'\n        //             ,type: 'warning'\n        //         });\n        //     }\n\n        //     return announcementResults;\n        // });\n    }\n\n    public markAnnouncementRead(announcement:any) {\n        if (announcement.id == '0-expiredsubscription') {\n            return Promise.resolve(true); // mark it as read since it's internal\n        }\n        return this.dac$http.post(\"announcements/\" + announcement.id, {read: true})\n        .then(() => {\n            return true;\n        })\n        .catch((error) => {\n            console.error(error);\n            return false;\n        });\n    }\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport { Assessment } from \"../../shared/models/assessment\";\nimport { AssessmentService } from \"../../shared/services/assessment.service\";\n\n@Component({\n  selector: 'app-assessment-new',\n  templateUrl: './assessment-new.component.html',\n  styleUrls: ['./assessment-new.component.css']\n})\nexport class AssessmentNewComponent implements OnInit {\n\n  private _assessment:Assessment;\n\n  constructor(\n    private _assessmentService:AssessmentService\n    ,private router: Router\n    ,private alertService: AlertService\n    ,private route: ActivatedRoute\n  ) {\n    this._assessment = new Assessment();\n    this._assessment.name = \"Untitled\";\n  }\n\n  ngOnInit() {\n  }\n\n  get assessment() {\n    return this._assessment;\n  }\n  set assessment(v:Assessment) {\n    this._assessment = v;\n  }\n\n  private validateAssessment(assessment:Assessment) {\n    let errors = [];\n    if (typeof assessment.uid != 'string'\n      || assessment.uid.trim() == \"\") {\n        errors.push(\"Unique id is missing\");\n    }\n    if (typeof assessment.name != 'string'\n      || assessment.name.trim() == \"\") {\n      errors.push(\"Name is missing\");\n    }\n    if (typeof assessment.description != 'string'\n      || assessment.description.trim() == \"\") {\n      errors.push(\"Description is missing\");\n    }\n    return errors;\n  }\n\n  save() {\n    let errors = this.validateAssessment(this._assessment);\n    if (errors.length) {\n      this.alertService.error(\"Please correct the following errors: \" + errors.join(\".\\n\"), 3000);\n      return;\n    }\n\n\t\tconsole.log(this._assessment);\n\n\t\tthis._assessmentService.createAssessment(this._assessment)\n\t\t.then(() => {\n      this.alertService.success(\"Assessment Saved!\");\n      // TODO: stephen figure out how to use the angular2 version of this instead of the raw setTimeout\n\t\t\t\tsetTimeout(() => {\n          this.router.navigate([\"../\", this._assessment.uid, \"edit\"], {relativeTo: this.route, replaceUrl: true});\n\t\t\t\t}, 1500);\n      })\n      .catch((error) => {\n        if (error && error.code) {\n          if (error.code === 'DUP_ENTRY') {\n            this.alertService.error(\"An assessment already exists with that unique id.  Please try a different one\");\n            return;\n          }\n        }\n\n        this.alertService.error(\"Error occurred in saving your assessment. Please try again.\");\n\t\t});\n\t}\n\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">New Assessment</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card card-cascade narrower\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n            <h3 class='h3-responsive text-center'>{{assessment.name}}</h3>\n        </div>\n        <div class=\"card-body\">\n          <form >\n            <div class=\"form-group\">\n              <label for=\"name\">Unique Identifier:</label>\n              <input class=\"form-control\" type=\"text\" id=\"uid\" name=\"uid\" [(ngModel)]=\"assessment.uid\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"name\">Name:</label>\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"assessment.name\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"instructions\">Instructions:</label>\n                <textarea class=\"form-control\" id=\"instructions\" name=\"instructions\" [(ngModel)]=\"assessment.instructions\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Description:</label>\n                <textarea class=\"form-control\" id=\"description\" name=\"description\" [(ngModel)]=\"assessment.description\"></textarea>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"creator\">Creator:</label>\n                <input class=\"form-control\" type=\"text\" id=\"creator\" name=\"creator\" [(ngModel)]=\"assessment.creator\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"creator\">Creator Url:</label>\n                <input class=\"form-control\" type=\"text\" id=\"creatorUrl\" name=\"creatorUrl\" [(ngModel)]=\"assessment.creatorUrl\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"resourcesURL\">Resources URL:</label>\n              <input class=\"form-control\" type=\"text\" id=\"resourcesURL\" name=\"resourcesURL\" [(ngModel)]=\"assessment.resourcesURL\" />\n            </div>\n            <input class=\"btn btn-primary\" type=\"submit\" (click)=\"save()\" value=\"Save\" />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ShoppingService } from \"../../shared/services/shopping.service\";\n\n@Component({\n  selector: 'app-checkout-status-monitor',\n  templateUrl: './checkout-status-monitor.component.html',\n  styleUrls: ['./checkout-status-monitor.component.css']\n})\nexport class CheckoutStatusMonitorComponent implements OnInit {\n\n    private orderStatus:string\n  constructor(\n    private shopping:ShoppingService\n  ) { }\n\n  ngOnInit() {\n    this.shopping.getCheckoutStatus().subscribe((status:string) => {\n      this.orderStatus = status;\n    });\n  }\n\n  get orderStart() {\n    return this.orderStatus === \"ORDER_START\";\n  }\n\n  get paymentPrepare() {\n    return this.orderStatus === \"PAYMENT_PREPARE\";\n  }\n\n  get orderFinalize() {\n    return this.orderStatus === \"ORDER_FINALIZE\";\n  }\n\n  get orderComplete() {\n    return this.orderStatus === \"ORDER_COMPLETE\";\n  }\n}\n","<p class=\"alert alert-warning\">\n    <app-spin-icon></app-spin-icon>\n    <span *ngIf=\"orderStart\">Preparing for purchase</span>\n    <span *ngIf=\"paymentPrepare\">Handling payment</span>\n    <span *ngIf=\"orderFinalize\">Finalizing order and setting up tokens</span>\n        <span *ngIf=\"orderComplete\">Order complete! Navigating to complete page</span>\n    <span class=\"ellipses\">...</span>\n</p>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {User} from \"../../shared/models/user\";\nimport {UserService} from \"../../shared/services/user.service\";\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { AlertService } from 'app/shared/services/alert.service';\n\n@Component({\n  selector: 'app-user-delete',\n  templateUrl: './user-delete.component.html',\n  styleUrls: ['./user-delete.component.css']\n})\nexport class UserDeleteComponent implements OnInit {\n\n  private _reassignClientsUser:User;\n  private _userToDelete:User;\n  private _userFilterFunction:(user:User) => boolean;\n  private _users:User[];\n\n  constructor(private userService:UserService,\n    private route:ActivatedRoute, private alertService:AlertService, private router:Router) {\n    this._userToDelete = new User();\n    this._userFilterFunction = this.filterUserToDelete.bind(this);\n    this._users = [];\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let userId = params['userId'];\n      this.userService.getUser(userId).then(user => {\n        this._userToDelete = user;\n      });\n    });\n  }\n\n  public get Users() {\n    return this._users;\n  }\n\n  private filterUserToDelete(user:User) {\n    return user.id != this._userToDelete.id;\n  }\n  public get filterUser() {\n    return this._userFilterFunction\n  }\n\n  public get User() {\n    return this._userToDelete;\n  }\n  public set UserToAssign(v:User) {\n    this._reassignClientsUser = v;\n  }\n  public get UserToAssign() {\n    return this._reassignClientsUser;\n  }\n  public setUserToAssign(user:User) {\n    this._reassignClientsUser = user;\n  }\n  public delete() {\n    // this.userService.deleteUser(this._userToDelete, this._reassignClientsUser).then((result) => {\n    //   this.alertService.success(\"User Deleted\");\n    //   this.router.navigate([\"../../\"], {replaceUrl: true, relativeTo: this.route});\n    // })\n    // .catch(error => {\n    //   console.error(error);\n    //   this.alertService.error(\"The user failed to delete.  Try again or contact support\");\n    // });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n        <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n        <h1 class=\"h1-responsive text-center\">Delete User {{User.username}}</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col card card-body\">\n        <div class=\"form-horizontal\">\n            <div class=\"form-group\">\n                <label class=\"col\" for=\"username\">Reassign clients for this user to?</label>\n                <div class=\"col\">\n                    <!-- TODO: stephen figure out a way to use our username picker -->\n                    <user-selector [user]=\"UserToAssign\" [filter]=\"filterUser\" [allowEmpty]=\"true\" (selected)=\"setUserToAssign($event)\"></user-selector>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"col-sm-12\">\n                    <button class=\"btn btn-primary\" (click)=\"delete()\">\n                        <span class=\"fa fa-trash mr-2\"></span>Delete User\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styleUrls: ['./my-account.component.scss']\n})\nexport class MyAccountComponent implements OnInit {\n\n  public tabs = [\n    { tab: \"Payments\" ,route: \"order\" }\n    ,{ tab: \"Billing Card\" ,route: \"billing\" }\n    ,{ tab: \"Plans\" ,route: \"plans\" }\n    ,{ tab: \"Company\" ,route: \"company\" }\n  ];\n  constructor(private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  goTo(routeUrl:string) {\n    this.router.navigate([routeUrl], {relativeTo: this.route});\n  }\n\n}\n","<h1 class=\"h1-responsive\">My Account</h1>\n\n<dac-tabs router=\"true\">\n  <dac-tab *ngFor=\"let tab of tabs\"\n    [heading]=\"tab.tab\" [routerLink]=\"tab.route\"></dac-tab>\n</dac-tabs>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ScaleRange } from '../../shared/models/scale-range';\nimport { Scale } from '../../shared/models/scale';\n\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-scale-range-edit',\n  templateUrl: './scale-range-edit.component.html',\n  styleUrls: ['./scale-range-edit.component.css']\n})\nexport class ScaleRangeEditComponent implements OnInit {\n\n    private _range:ScaleRange;\n  private scale:Scale;\n  private assessment:Assessment;\n  private readonly SAVE_TIME = 1500;\n  private readonly ERROR_MESSAGE_TIME = 3000;\n  public isSaving:boolean;\n\n  constructor( private assessmentService:AssessmentService\n    ,private alertService: AlertService\n    ,private router: Router\n    ,private route: ActivatedRoute) {\n      this.range = this.getNewObject();\n    }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let scaleId = params['scaleId'];\n      let rangeId = params['rangeId'];\n      this.assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.scale = assessment.scales.find((s) => s.id == scaleId);\n          this.range = (this.scale) ? this.scale.ranges.find((r) => r.id == rangeId) : null;\n          if (!(this.scale && this.range)) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.router.navigate([\"not-found\"]);\n        })\n    });\n  }\n\n  private getNewObject() {\n    let obj = new ScaleRange();\n    obj.id = this.assessmentService.newId();\n    return obj;\n  }\n\n  get range():ScaleRange {\n    return this._range;\n  }\n\n  set range(v:ScaleRange) {\n    this._range = v;\n  }\n\n  private saveRange(range) {\n    this.isSaving = true;\n\t\treturn this.assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Range saved\", this.SAVE_TIME);\n      this.isSaving = false;\n      return range;\n    }).catch((error) => {\n      this.isSaving = false;\n      this.alertService.error(\"An error occurred in saving. Please try again or contact support.\", this.ERROR_MESSAGE_TIME);\n\t\t\tconsole.error(error);\n\t\t});\n  }\n\n  save() {\n    this.saveRange(this.range);\n\t}\n\n\tsaveAndCreateNew() {\n      this.saveRange(this.range).then((question) => {\n        // TODO: stephen for whatever reason this isn't working very well here...\n      this.router.navigate([\"../../\", \"new\"], {relativeTo: this.route, replaceUrl: true});\n      // this.router.navigate([\"admin\",\"assessment\",this.assessment.uid, \"edit\"\n      //     ,\"scale\", this.scale.id, \"edit\"\n      //     , \"scale-range\", \"new\"], {replaceUrl: true});\n    });\n\t}\n\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n      <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n      <h2 class=\"h2-responsive text-center\">{{range.name}}</h2>\n    </div>\n  </div>\n<div class=\"row\">\n  <div class=\"col\">\n    <dac-tabs class=\"col-12\">\n        <dac-tab heading=\"General\">\n          <form>\n            <div class=\"form-group\">\n              <label for=\"name\">Name:</label>\n              <input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"range.name\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"displayName\">Display Name:</label>\n              <input class=\"form-control\" type=\"text\" name=\"displayName\" id=\"displayName\" [(ngModel)]=\"range.displayName\" />\n            </div>\n            <div class=\"form-group\">\n                  <label for=\"rangeStart\">Range Start:</label>\n              <input class=\"form-control\" type=\"number\" name=\"rangeStart\" id=\"rangeStart\" [(ngModel)]=\"range.rangeStart\" />\n            </div>\n            <div class=\"form-group\">\n                  <label for=\"rangeEnd\">Range End:</label>\n              <input class=\"form-control\" type=\"number\" name=\"rangeEnd\" id=\"rangeEnd\" [(ngModel)]=\"range.rangeEnd\" />\n            </div>\n          </form>\n          <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n          <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n      </dac-tab>\n      <dac-tab heading=\"Therapist\">\n          <form>\n              <div class=\"form-group\">\n                  <label for=\"therapistContent\">Therapist Content:</label>\n                  <textarea class=\"form-control h-100\" rows=\"5\" name=\"therapistContent\" [(ngModel)]=\"range.therapistContent\" id=\"therapistContent\"></textarea>\n            </div>\n          </form>\n          <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n      </dac-tab>\n      <dac-tab heading=\"Client\">\n          <form>\n            <div class=\"form-group\">\n              <label for=\"clientContent\">Client Content:</label>\n              <textarea class=\"form-control h-100\" rows=\"5\" name=\"clientContent\" [(ngModel)]=\"range.clientContent\" id=\"clientContent\"></textarea>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"mediaURL\">Media URL:</label>\n              <input class=\"form-control\" type=\"text\" name=\"mediaURL\" id=\"mediaURL\" [(ngModel)]=\"range.mediaURL\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"assignmentURL\">Assignment URL:</label>\n              <input class=\"form-control\" type=\"text\" name=\"assignmentURL\" id=\"assignmentURL\" [(ngModel)]=\"range.assignmentURL\" />\n            </div>\n          </form>\n          <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n        </dac-tab>\n    </dac-tabs>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Order } from '../../shared/models/order';\n\n@Component({\n  selector: 'view-order',\n  templateUrl: './view-order.component.html',\n  styleUrls: ['./view-order.component.css']\n})\nexport class ViewOrderComponent implements OnInit {\n\n  @Input(\"order\") private _order:Order;\n\n  constructor() {\n    this._order = new Order();\n  }\n\n  ngOnInit() {\n  }\n\n  get order() {\n    return this._order;\n  }\n\n}\n","<div class=\"row details\">\n  <div class=\"col-12\">\n    <div class=\"row\">\n      <h4 class=\"col h4-responsive\">Summary</h4>\n    </div>\n    <div class=\"row mb-3\">\n      <div class=\"col\">\n        <div class=\"card card-body\">\n          <div class=\"row\">\n            <div class=\"col-3\">\n              <label>Purchaser</label>\n            </div>\n            <div class=\"col-9\">{{order?.customer}}</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-3\">\n              <label>Status</label>\n            </div>\n            <div class=\"col-9\">{{order?.status}}</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-3\">\n              <label *ngIf=\"order?.status == 'paid'\">Purchased</label>\n              <label *ngIf=\"order?.status != 'paid'\">Created</label>\n            </div>\n            <div class=\"col-9\">{{order?.creation_date| date:'medium'}}</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-3\">\n              <label>Date Updated</label>\n            </div>\n            <div class=\"col-9\">{{order?.last_update_date| date:'medium'}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row items\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <h4 class=\"col h4-responsive\">Item Details</h4>\n    </div>\n    <div class=\"card card-body\">\n      <table class=\"table table-striped\">\n        <thead class=\"secondary-color text-white\">\n          <th class=\"w-25\">Items</th>\n          <th>Price</th>\n          <th>Quantity</th>\n          <th>Discount</th>\n          <th>Total</th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let orderItem of order?.orderItems\">\n            <td *ngIf=\"orderItem.type == 'subscription'\">\n              <label>{{orderItem.item.plan.name}}</label>\n            </td>\n            <td *ngIf=\"orderItem.type == 'shop-item'\">\n              <label>{{orderItem.item.name}}</label>\n              <ul *ngIf=\"orderItem.item.subItems?.length\">\n                <li *ngFor=\"let subItem of orderItem.item.subItems\">{{subItem.name}}</li>\n              </ul>\n            </td>\n            <td>${{orderItem.price | number:'1.2-2'}}</td>\n            <td>x {{orderItem.quantity}}</td>\n            <td>\n              <span *ngIf=\"orderItem.discount\">-</span>${{orderItem.discount | number:'1.2-2'}}</td>\n            <td>${{orderItem.total | number:'1.2-2'}}</td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colspan=\"4\">\n              <label>Discount Total</label>\n            </td>\n            <td>\n              <span *ngIf=\"order?.discount\">-</span>${{order?.discount | number:'1.2-2'}}</td>\n          </tr>\n          <tr class=\"items-total items-total-footer\">\n            <td colspan=\"4\">\n              <label>Payment Total</label>\n            </td>\n            <td> ${{order?.total | number:'1.2-2'}}</td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  </div>\n</div>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { QuestionSetLabel } from '../../shared/models/question-set-label';\nimport { QuestionSet } from '../../shared/models/question-set';\n\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'app/shared/services/alert.service';\n\n@Component({\n  selector: 'app-label-edit',\n  templateUrl: './label-edit.component.html',\n  styleUrls: ['./label-edit.component.css']\n})\nexport class LabelEditComponent implements OnInit {\n\n  private _label:QuestionSetLabel;\n  private questionSet:QuestionSet;\n  private assessment:Assessment;\n  public isSaving:boolean;\n\nconstructor( private assessmentService:AssessmentService\n    ,private alertService: AlertService\n    ,private location:Location\n    ,private router: Router\n    ,private route: ActivatedRoute) {\n      this.label = this.getNewObject();\n    }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let setId = params['setId'];\n      let labelId = params['labelId'];\n      this.assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.questionSet = assessment.question_sets.find((s) => s.id == setId);\n        this.label = (this.questionSet) ? this.questionSet.labels.find((l) => l.id == labelId) : null;\n        console.log(this.label);\n          if (!(this.questionSet && this.label)) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          this.router.navigate([\"not-found\"]);\n        })\n    });\n  }\n\n  private getNewObject() {\n    let label = new QuestionSetLabel();\n    return label;\n  }\n\n  get label():QuestionSetLabel {\n    return this._label;\n  }\n\n  set label(v:QuestionSetLabel) {\n    this._label = v;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  private saveLabel(label) {\n    this.isSaving = true;\n\t\treturn this.assessmentService.saveAssessment(this.assessment).then((assessment) => {\n      this.alertService.success(\"Label saved\");\n      this.isSaving = false;\n      return label;\n    }).catch((error) => {\n      this.isSaving = false;\n      this.alertService.error(\"An error occurred in saving. Please try again or contact support.\");\n\t\t\tconsole.error(error);\n\t\t});\n  }\n\n  save() {\n    this.saveLabel(this.label);\n\t}\n\n\tsaveAndCreateNew() {\n    this.saveLabel(this.label).then((question) => {\n      this.router.navigate([\"../../\", \"new\"], {replaceUrl: true, relativeTo: this.route});\n    });\n\t}\n\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n      <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n      <h2 class=\"h2-responsive text-center\">{{label.label}}</h2>\n    </div>\n  </div>\n<div class=\"row\">\n  <dac-tabs class=\"col-12\">\n    <dac-tab heading=\"General Settings\">\n      <form>\n        <div class=\"form-group\">\n            <label for=\"label\">Label:</label>\n            <input class=\"form-control\" type=\"text\" id=\"label\" name=\"label\" [(ngModel)]=\"label.label\" />\n          </div>\n        <!--<div class=\"form-group\">\n              <label for=\"displayOrder\">Display Order:</label>\n          <input class=\"form-control\" type=\"number\" id=\"displayOrder\" name=\"displayOrder\" [(ngModel)]=\"ctrl.label.display_order\" />\n        </div>-->\n        <div class=\"form-group\">\n          <input class=\"form-control\" type=\"checkbox\" id=\"skip-scoring\" name=\"skip-scoring\" [checked]=\"label.skipScoring\" [(ngModel)]=\"label.skipScoring\" />\n          <label for=\"skip-scoring\">Skip Scoring: (N/A questions)</label>\n        </div>\n      </form>\n      <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n      <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n    </dac-tab>\n  </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {ActivatedRoute} from '@angular/router';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Assessment } from 'app/shared/models/assessment';\nimport { AssessmentService } from 'app/shared/services/assessment.service';\n\n@Component({\n  selector: 'dac-assessment-details-view',\n  templateUrl: './assessment-details-view.component.html',\n  styleUrls: ['./assessment-details-view.component.css']\n})\nexport class AssessmentDetailsViewComponent implements OnInit {\n\n  @Input() assessment:Assessment;\n\n  constructor() {\n    }\n\n  ngOnInit() {\n  }\n\n}\n","<form>\n    <div class=\"form-group\">\n      <label for=\"name\">Unique Identifier:</label>\n      <input class=\"form-control\" type=\"text\" id=\"uid\" name=\"uid\" disabled=\"true\" [(ngModel)]=\"assessment.uid\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" disabled=\"true\" [(ngModel)]=\"assessment.name\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"instructions\">Instructions:</label>\n        <textarea class=\"form-control\" id=\"instructions\" name=\"instructions\" disabled=\"true\" [(ngModel)]=\"assessment.instructions\"></textarea>\n    </div> \n    <div class=\"form-group\">\n      <label for=\"therapistDescription\">Therapist Description:</label>\n      <textarea class=\"form-control\" id=\"therapistDescription\" disabled=\"true\" name=\"therapistDescription\" [(ngModel)]=\"assessment.therapistDescription\"></textarea>\n  </div>\n    \n    <div class=\"form-group\">\n        <label for=\"creator\">Creator:</label>\n        <input class=\"form-control\" type=\"text\" id=\"creator\" name=\"creator\" disabled=\"true\" [(ngModel)]=\"assessment.creator\" />\n    </div>\n    <div class=\"form-group\">\n        <label for=\"creator\">Creator Url:</label>\n        <input class=\"form-control\" type=\"text\" id=\"creatorUrl\" disabled=\"true\" name=\"creatorUrl\" [(ngModel)]=\"assessment.creatorUrl\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"resourcesURL\">Resources URL:</label>\n      <input class=\"form-control\" type=\"text\" id=\"resourcesURL\" disabled=\"true\" name=\"resourcesURL\" [(ngModel)]=\"assessment.resourcesURL\" />\n    </div>\n</form>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { User } from \"../../shared/models/user\";\nimport { UserService } from \"../../shared/services/user.service\";\nimport { Role } from \"../../shared/models/role\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AlertService } from '../../shared/services/alert.service';\n\n@Component({\n  selector: 'app-user-new',\n  templateUrl: './user-new.component.html',\n  styleUrls: ['./user-new.component.css']\n})\nexport class UserNewComponent implements OnInit {\n  private _user:User;\n  public password:string;\n  public isSaving:boolean;\n\n  public get User() {\n    return this._user;\n  }\n  public set User(v:User) {\n    this._user = v;\n  }\n\n  constructor(private userService:UserService, private router:Router\n    , private route:ActivatedRoute, private alertService:AlertService) {\n    this._user = new User();\n  }\n\n  ngOnInit() {\n  }\n\n  private validateForm() {\n    let errors = [];\n    if (!this._user.username) {\n      errors.push(\"You must enter an email address for this user\");\n    }\n    else if (this._user.username.length < 3) {\n      errors.push(\"The email address must be at least 3 characters long\");\n    }\n    // the server will catch anything else that's not valid... we just check for '@' for a simple typo.\n    else if (this._user.username.indexOf(\"@\") < 0) {\n      errors.push(\"The email address must be a valid email\");\n    }\n\n    let passwordPolicyMsg = \"Password must be 8 characters or more, contain at least one number(0-9), one uppercase letter(a-z), and one lowercase letter(A-Z)\";\n    let password = this.password;\n    if (!password || password.length < 8) {\n      errors.push(passwordPolicyMsg);\n    }\n    else if (!password.match(/[0-9]+/)) {\n      errors.push(passwordPolicyMsg);\n    }\n    else if (!password.match(/[A-Z]+/)) {\n      errors.push(passwordPolicyMsg);\n    }\n    else if (!password.match(/[a-z]+/)) {\n      errors.push(passwordPolicyMsg);\n    }\n    return errors;\n  }\n\n  save() {\n    let errors = this.validateForm();\n    if (errors.length) {\n      this.alertService.error(errors.join(\".\\n\"), 3000);\n      return;\n    }\n\n    // TODO: stephen need a confirm password piece here.\n    this.isSaving = true;\n    this._user.password = this.password;\n    this.userService.createUser(this._user).then((savedUser:User) => {\n      this.password = \"\"; // clear out the password now that we are done with it.\n      this.alertService.success(\"User created!\");\n      this.isSaving = false;\n      this.router.navigate(['../', savedUser.id, 'edit'], {replaceUrl: true, relativeTo: this.route});\n    })\n    .catch((error) => {\n      this.isSaving = false;\n      // TODO: stephen update this to be the more specific messages when we can...\n      this.alertService.error(\"Failed to save new user.  Please try again\");\n    })\n  }\n\n  public setUserRole(role:Role) {\n    this._user.role = role;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n        <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n        <h1 class=\"h1-responsive text-center\">New User</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <dac-tabs>\n        <dac-tab heading=\"General\">\n            <div class=\"form-horizontal\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"username\">Email:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                        <username-checker [user]=\"User\"></username-checker>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"username\">First Name:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                        <input class=\"form-control\" id=\"firstName\" type=\"text\" [(ngModel)]=\"User.firstName\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"lastName\">Last Name:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                        <input class=\"form-control\" id=\"lastName\" type=\"text\" [(ngModel)]=\"User.lastName\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"password\">Password:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                        <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"password\" />\n                        <p class=\"alert alert-info\">Password must be at least 8 characters, have at least one uppercase letter, at least one lowercase letter, and at least one number</p>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"roleSelector\">Role:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                        <app-role-selector id=\"roleSelector\" [role]=\"User.role\" (selected)=\"setUserRole($event)\"></app-role-selector>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"col\">\n                        <input [disabled]=\"isSaving\" class=\"btn btn-primary\" type=\"button\" value=\"Save\" (click)=\"save()\" />\n                    </div>\n                </div>\n            </div>\n        </dac-tab>\n    </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AssessmentService } from 'app/shared/services/assessment.service';\nimport { Assessment } from 'app/shared/models/assessment';\nimport { Scale } from 'app/shared/models/scale';\n\n@Component({\n  selector: 'dac-scales-list-view',\n  templateUrl: './scales-list-view.component.html',\n  styleUrls: ['./scales-list-view.component.css']\n})\nexport class ScalesListViewComponent implements OnInit, OnChanges {\n\n  @Input() assessment:Assessment;\n  public selectedScale:Scale;\n\n  constructor() {\n  }\n\n  getClassesForScale(scale:Scale) {\n    let isSelected = scale == this.selectedScale;\n    let classes = {\n      'primary-color': isSelected\n      ,'white-text': isSelected\n    };\n    return classes;\n  }\n\n  ngOnChanges() {\n    this.populateScaleFromAssessment(this.assessment);\n  }\n  ngOnInit() {\n    this.populateScaleFromAssessment(this.assessment);\n  }\n\n  private populateScaleFromAssessment(assessment:Assessment) {\n    if (!assessment) {\n      return;\n    }\n\n    if (assessment.scales.length) {\n      this.selectedScale = assessment.scales[0];\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col\">\n      <h2 class=\"h2-responsive\">Scales</h2>\n      <!--TODO: stephen move this to <scales-list></scales-list>-->\n      <p *ngIf=\"assessment.scales.length <= 0\">No scales exist</p>\n  </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-sm-4 col-lg-3\">\n        <ul class=\"list-group flex-column\">\n          <li class=\"list-group-item\"\n            [ngClass]=\"getClassesForScale(scale)\"\n            *ngFor=\"let scale of assessment.scales\" (click)=\"selectedScale = scale\"><a>{{scale.name}}</a></li>\n        </ul>\n      </div>\n      <div class=\"col-sm-8 col-lg-9\" *ngIf=\"!selectedScale\">\n        <p class=\"alert alert-info\">Select a scale</p>\n      </div>\n      <div class=\"col-sm-8 col-lg-9\" *ngIf=\"selectedScale\">\n        <div *ngFor=\"let range of selectedScale.ranges\" class=\"card card-cascade mb-3\">\n          <div class=\"view gradient-card-header secondary-gradient text-light\">\n            <h2 class=\"h2-responsive\">{{range.displayName}} ({{range.rangeStart}} - {{range.rangeEnd}})</h2>\n          </div>\n          <div class=\"card-body\">\n            <h3 class=\"h3-responsive p-0\">Therapist Content</h3>\n            <hr class=\"mb-2\" />\n            <div [innerHTML]=\"range.therapistContent\"></div>\n            <h3 class=\"h3-responsive p-0\">Client Content</h3>\n            <hr class=\"mb-2\" />\n            <div *ngIf=\"range.clientContent\" [innerHTML]=\"range.clientContent\"></div>\n            <div *ngIf=\"!range.clientContent\" [innerHTML]=\"range.therapistContent\"></div>\n          </div>\n        </div>\n      </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../shared/services/client.service';\nimport { ManagedClient } from '../../shared/models/managed-client';\nimport { Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport {DacConfig} from \"../../shared/services/dac-config.service\";\nimport { User } from 'app/shared/models/user';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { AuthService } from 'app/login/services/auth.service';\n\n// Todo: Stephen I'm not sure how much the wordpress stuff works and may just need to be removed.\n@Component({\n  selector: 'app-client-new',\n  templateUrl: './client-new.component.html',\n  styleUrls: ['./client-new.component.css']\n})\nexport class ClientNewComponent implements OnInit {\n\n  private _client: ManagedClient;\n  public password:string;\n  public confirmPassword:string;\n  public isSaving:boolean;\n  public clientName:string;\n  private _generatingClientId:boolean;\n\n  constructor(\n    private _clientService: ClientService,\n    private router: Router,\n    private location: Location,\n    private alertService: AlertService,\n    private authService:AuthService,\n    private dacConfig:DacConfig\n  ) {\n    this._client = new ManagedClient();\n    this.authService.getCurrentUser().then(user => {\n      this._client.user = user;\n    });\n    this.isSaving = false;\n  }\n\n  ngOnInit() {\n    this.generateClientId();\n  }\n\n  get isGeneratingClientId() {\n    return this._generatingClientId;\n  }\n  generateClientId() {\n    this._generatingClientId = true;\n    this._clientService.generateClientId().then(id => {\n      this._client.id = id;\n      this._generatingClientId = false;\n    })\n    .catch(error => {\n      this.alertService.error(\"There was an error generating the client id for this client.  Please press the generate button again or contact support\");\n      console.error(error);\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  get shouldShowEmailTemplate() {\n    return this.dacConfig.isFeatureEnabled(\"assessments.manage.emailtemplate\");\n  }\n\n\n\n  get Client(): ManagedClient {\n    return this._client;\n  }\n\n  set Client(v: ManagedClient) {\n    this._client = v;\n  }\n\n  get showPasswordFields() {\n    return false;\n  }\n\n  private validate() : string[] {\n    let errors = [];\n    if (this.showPasswordFields) {\n      if (this.password.trim() === \"\") {\n        errors.push(\"Password cannot be empty\");\n      }\n      else if (this.password !== this.confirmPassword) {\n        errors.push(\"Passwords do not match\");\n      }\n      else if (this.password.length < 8) {\n        errors.push(\"Password must be at least 8 characters long\");\n      }\n    }\n    if (this._client.id === null\n        || this._client.id.trim() === \"\") {\n      errors.push(\"Unique Client Login ID cannot be empty\");\n    }\n    return errors;\n  }\n\n  setUser(user:User) {\n    this.Client.user = user;\n  }\n\n  save(isValid:boolean): void {\n    if (!isValid) {\n      this.alertService.error(\"You must fill in all required fields\");\n      return;\n    }\n\n    let errors = this.validate();\n    if (errors.length) {\n      this.alertService.error(errors.join(\".\"), 3000);\n      return;\n    }\n    this.isSaving = true;\n    this._client.customField1 = this._client.id;\n    this._clientService.createClient(this._client).then((client) => {\n      this.handleClientCreateSuccess();\n    })\n    .catch((error) => {\n      this.isSaving = false;\n      console.error(error);\n      if (error._code && error._code == \"DUP_ENTRY\") {\n        this.alertService.error(\"That Unique Token already exists.  Please choose another one.\", 3000);\n      }\n      else {\n        this.alertService.error(\"An error occurred in saving this client.  Try again or contact customer support\", 3000);\n      }\n    });\n\n  }\n\n  private handleClientCreateSuccess() {\n    this.alertService.success(\"Client was created\");\n    setTimeout(() => {\n      this.isSaving = false;\n      this.router.navigate(['admin','client',this._client.id], {replaceUrl:true});\n    }, 1000);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n        <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n        <h2 class=\"h2-responsive text-center\">New Client</h2>\n    </div>\n</div>\n<div class=\"row\">\n    <dac-tabs class=\"col-12\">\n        <dac-tab heading=\"General\">\n            <form #clientForm=\"ngForm\" class=\"form-horizontal\">\n                <div class=\"form-group\">\n                    <label class=\"col-12\" for=\"firstName\">\n                        <h6><i class=\"fa fa-user pt-2 pr-2 h4-responsive\"></i>First Name*:</h6>\n\n                    </label>\n                    <div class=\"col-12\">\n                        <input class=\"form-control\" name=\"firstName\" type=\"text\" [(ngModel)]=\"Client.firstName\"\n                        required #firstName=\"ngModel\" />\n                    </div>\n                    <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched || clientForm.submitted)\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"firstName.errors.required\">\n                            First Name is required.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-12\" for=\"lastName\">\n                        <h6><i class=\"fa fa-user pt-2 pr-2 h4-responsive\"></i>Last Name*:</h6>\n\n                    </label>\n                    <div class=\"col-12\">\n                        <input class=\"form-control\" name=\"lastName\" type=\"text\" [(ngModel)]=\"Client.lastName\" required #lastName=\"ngModel\" />\n                    </div>\n                    <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched || clientForm.submitted)\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"lastName.errors.required\">\n                            Last Name is required.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-12\" for=\"uniqueToken\">\n                        <h6><i class=\"fa fa-key pt-2 pr-2 h4-responsive\"></i>Client Login Identifier**: </h6>\n                    </label>\n                    <div class=\"col-12\">\n                        <h6>\n                            <span *ngIf=\"isGeneratingClientId\" class=\"h4\">Generating...</span>\n                            <span *ngIf=\"!isGeneratingClientId\" class=\"h4\">{{Client.id}}</span>\n                            <input type=\"button\" class=\"btn btn-primary\" value=\"Generate New Id\" (click)=\"generateClientId()\" [disabled]=\"isGeneratingClientId\" />\n                            <app-spin-icon *ngIf=\"isGeneratingClientId\"></app-spin-icon>\n                        </h6>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-12\" for=\"emailAddress\">\n                        <h6><i class=\"fa fa-envelope pt-2 pr-2 h4-responsive\"></i>Email*:</h6>\n                    </label>\n                    <div class=\"col-12\">\n                        <input class=\"form-control\" name=\"emailAddress\" type=\"text\" email [(ngModel)]=\"Client.email\" #emailAddress=\"ngModel\" />\n                    </div>\n                    <div *ngIf=\"emailAddress.invalid && (emailAddress.dirty || emailAddress.touched || clientForm.submitted)\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"emailAddress.errors.required\">\n                            Email is required.\n                        </div>\n                        <div *ngIf=\"emailAddress.errors.email\">\n                                Email must be a valid email address with the local address being shorter than 64 characters and the whole email\n                                address less than 254 characters.\n                            </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\" *hasPermission=\"'Admin'\">\n                    <label class=\"col-12\" for=\"assignedUser\"><h6><i class=\"fa fa-user pt-2 pr-2 h4-responsive red-text\"></i>Assigned User</h6></label>\n                    <div class=\"col-12\">\n                        <user-selector [user]=\"Client.user\" [allowEmpty]=\"true\" (selected)=\"setUser($event)\"></user-selector>\n                    </div>\n                </div>\n\n                <div *ngIf=\"showPasswordFields\" class=\"form-group\">\n                    <label class=\"col-12\" for=\"password\">Client Password:</label>\n                    <div class=\"col-12 \">\n                        <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"password\" />\n                    </div>\n                </div>\n\n                <div *ngIf=\"showPasswordFields\" class=\"form-group\">\n                    <label class=\"col-12\" for=\"confirmPassword\">Client Confirm Password:</label>\n                    <div class=\"col-12\">\n                        <input id=\"confirmPassword\" type=\"password\" class=\"form-control\" [(ngModel)]=\"confirmPassword\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"col\">\n                        <input [disabled]=\"isSaving\" class=\"btn btn-primary\" type=\"button\" value=\"Save\" (click)=\"clientForm.submitted=true;save(clientForm.valid)\" />\n                    </div>\n                </div>\n                <div class=\"col-12 alert alert-info\">\n                    <p> * This field is required</p>\n                    <p>** Your client will use this unique identifier to login.</p>\n                </div>\n            </form>\n        </dac-tab>\n\n    </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-shop',\n  templateUrl: './admin-shop.component.html',\n  styleUrls: ['./admin-shop.component.css']\n})\nexport class AdminShopComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<shop-items class=\"col-md-7\"></shop-items>\n<checkout class=\"col-md-offset-1 col-md-4\"></checkout>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { NavBarService } from 'app/theme/services/nav-bar.service';\n\nimport { DacConfig } from \"../../shared/services/dac-config.service\";\nimport { SubscriptionService } from '../services/subscription.service';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { ModalService } from 'app/shared/services/modal.service';\nimport { SubscriptionDialogComponent } from '../subscription-dialog/subscription-dialog.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit, OnDestroy {\n\n  private _subscriptionServiceSubscription:ISubscription;\n\n  constructor(\n    private dacConfig:DacConfig\n    ,private navService:NavBarService\n    ,private subscriptionService:SubscriptionService\n    ,private modalService:ModalService\n  ) {\n  }\n\n  ngOnInit() {\n    // turn it on\n    this.navService.toggleSidebar();\n    this._subscriptionServiceSubscription = this.subscriptionService.subscriptionRequiredEvent().subscribe(() => {\n      this.openSubscriptionDialog();\n    });\n  }\n\n  private openSubscriptionDialog() {\n    this.modalService.openDialog(SubscriptionDialogComponent);\n  }\n\n  ngOnDestroy() {\n    // turn it off\n    this.navService.toggleSidebar();\n    if (this._subscriptionServiceSubscription) {\n      this._subscriptionServiceSubscription.unsubscribe();\n      this._subscriptionServiceSubscription = null;\n    }\n  }\n\n  get canManageAssessments() {\n    return this.dacConfig.isFeatureEnabled(\"admin.assessments.navigation\");\n  }\n\n  get shouldShowAddoHome() {\n    return this.dacConfig.isFeatureEnabled(\"addo.dashboard.admin\");\n  }\n\n  get canShop() {\n    return this.dacConfig.isFeatureEnabled(\"admin.shop\");\n  }\n\n  goToAddoHome(event:Event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // go to the base url\n    window.location.href = \"/\";\n    return false;\n  }\n}\n","<div class=\"row no-gutters\">\n  <dac-announcement-bar class=\"col\"></dac-announcement-bar>\n</div>\n<div class=\"row no-gutters\">\n  <div class=\"col\">\n    <div class=\"mt-3 mb-3\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Router,ActivatedRoute } from \"@angular/router\";\n\nimport { Assessment } from \"../../shared/models/assessment\";\nimport { SaveMessages } from \"../../shared/models/save-messages\";\nimport { AssessmentService } from \"../../shared/services/assessment.service\";\nimport { Scale } from \"../../shared/models/scale\";\nimport { QuestionSet } from \"../../shared/models/question-set\";\nimport { AssessmentHydrator } from '../../shared/services/assessment-hydrator.service';\nimport { AssessmentCompressorService } from 'app/shared/services/assessment-compressor.service';\n\n@Component({\n  selector: 'app-assessment-edit',\n  templateUrl: './assessment-edit.component.html',\n  styleUrls: ['./assessment-edit.component.css']\n})\nexport class AssessmentEditComponent implements OnInit {\n\n\tprivate _assessment:Assessment;\n\tpublic hasLoadedAssessment:boolean;\n\tprivate _messages:SaveMessages;\n\t@ViewChild('reportContents') reportContents:ElementRef;\n\n  constructor(\n    private _assessmentService:AssessmentService\n\t\t,private assessmentCompressor:AssessmentCompressorService\n\t\t,private router: Router\n\t\t,private alertService:AlertService\n\t\t,private hydrator:AssessmentHydrator\n    ,private route: ActivatedRoute\n  ) {\n\t\tthis.hasLoadedAssessment = false;\n    this._messages = new SaveMessages();\n    this._assessment = new Assessment();\n  }\n\n  ngOnInit() {\n\tlet uid = this.route.snapshot.params['uid'];\n\tlet version = this.route.snapshot.queryParams['version'];\n\n\n\tthis._assessmentService.uid = uid;\n\tlet assessmentPromise;\n    if (version) {\n      assessmentPromise = this._assessmentService.getAssessmentVersion(uid, version);\n    } else {\n      assessmentPromise = this._assessmentService.getAssessment(uid);\n    }\n    assessmentPromise.then((assessment) => {\n\t\t\t\tif (assessment) {\n\t\t\t\t\t// if we have nothing back in the admin then we are going to create our own\n\t\t\t\t\tthis.assessment = assessment;\n\t\t\t\t\tthis.hasLoadedAssessment = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// TODO: stephen handle 404 errors\n\t\t\t\t\t//this._$state.go(\"404\");\n          this.router.navigate([\"page-not-found\"]);\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\tthis.hasLoadedAssessment = true;\n\t\t\t\t// TODO: stephen can't all of this just go in the catch block below?\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.alertService.error(\"Failed to retrieve assessment data from server\");\n\t\t\t\tthis.assessment = new Assessment();\n\t\t\t\tthis.assessment.uid = this._assessmentService.uid;\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tthis.hasLoadedAssessment = true;\n\t\t\t\tthis.alertService.error(\"Failed to retrieve assessment data from server\");\n\t\t\t\tconsole.error(error);\n\t\t\t})\n  }\n\n  get assessment() {\n    return this._assessment;\n  }\n  set assessment(v:Assessment) {\n    this._assessment = v;\n  }\n\n  get messages() {\n    return this._messages;\n  }\n\n  getRawAssessment() {\n    let data = this.assessmentCompressor.compress(this.assessment);\n    if (data && data['token']) {\n      delete data['token']; // this should never be included but we don't want to copy it over anyways.\n    }\n\t  return JSON.stringify(data, null, \" \");\n  }\n\n  save() {\n\t\tconsole.log(this._assessment);\n\t\tthis._assessmentService.saveAssessment(this._assessment)\n\t\t.then(() => {\n\t\t\tthis.alertService.success(\"Assessment Saved!\");\n\t\t}).catch(() => {\n\t\t\t\tthis.alertService.error(\"Error occurred in saving your assessment. Please try again.\");\n\t\t});\n\t}\n\n\tpublic updateAssessmentContents() {\n    let reportContents = this.reportContents.nativeElement as HTMLTextAreaElement;\n    let jsonData = reportContents.value;\n    let assessmentJSON;\n    try {\n\t\t\tassessmentJSON = JSON.parse(jsonData);\n\t\t\tthis.assessment = this.hydrator.hydrate(assessmentJSON);\n      this.alertService.info(\"Assessment contents updated.  Make sure to save the assessment before proceeding\");\n    }\n    catch (error) {\n      this.alertService.error(\"The assessment contains invalid JSON and could not be parsed\");\n      console.error(error);\n    }\n\n  }\n\n\tmoveUpScale(scale:Scale) {\n\t\tthis.assessment.shiftScaleUp(scale);\n\t}\n\tmoveDownScale(scale:Scale) {\n\t\tthis.assessment.shiftScaleDown(scale);\n\t}\n\n  moveUpSet(questionSet:QuestionSet) {\n\t\tthis.assessment.shiftQuestionSetUp(questionSet);\n\t\tthis.save();\n\t}\n\n\tmoveDownSet(questionSet:QuestionSet) {\n\t\tthis.assessment.shiftQuestionSetDown(questionSet);\n\t\tthis.save();\n\t}\n\n\tdeleteQuestionSet(questionSet:QuestionSet) {\n\t\tif (!confirm(\"Are you sure you want to delete this question set?\")) {\n\t\t\treturn;\n\t\t}\n\t\tthis.assessment.removeQuestionSet(questionSet);\n\t\tthis._assessmentService.saveAssessment(this.assessment).then(() => {\n\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(error);\n\t\t\tthis.alertService.error(\"An error occurred in removing the question set.\");\n\t\t})\n\t}\n\tdeleteScale(scale:Scale) {\n\t\tif (!confirm(\"Are you sure you want to delete this scale?\")) {\n\t\t\treturn;\n\t\t}\n\t\tscale.isDeleted = true;\n\t\tthis.assessment.removeScale(scale);\n\t\tthis._assessmentService.saveAssessment(this.assessment).then(() => {\n\t\t\tthis.alertService.success(\"Scale deleted...\");\n\t\t\t// we don't do anything here...\n\t\t}, () => {\n\t\t\t// TODO: stephen handle the error\n\t\t\tthis.alertService.error(\"Error occurred.  Could not delete this scale\");\n\t\t\tscale.isDeleted = false;\n\t\t\tthis.assessment.addScale(scale);\n\t\t})\n\t}\n\n}\n","<div class=\"row\" *ngIf=\"!hasLoadedAssessment\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-warning\"><app-spin-icon></app-spin-icon> Loading Assessment data...</p>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"hasLoadedAssessment\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">{{assessment.name}}</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <dac-tabs class=\"col-12\">\n    <dac-tab heading=\"General\">\n    <form>\n        <div role=\"alert\">\n          <div *ngIf=\"messages.saveSuccess\">Assessment Saved!</div>\n          <div *ngIf=\"messages.saveFailed\">Error occurred in saving your assessment. Please try again.</div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Unique Identifier:</label>\n          <input class=\"form-control\" type=\"text\" id=\"uid\" name=\"uid\" [(ngModel)]=\"assessment.uid\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">Name:</label>\n          <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"assessment.name\" />\n        </div>\n        <div class=\"form-group\">\n            <label for=\"instructions\">Instructions:</label>\n            <textarea class=\"form-control\" id=\"instructions\" name=\"instructions\" [(ngModel)]=\"assessment.instructions\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"description\">Description:</label>\n            <textarea class=\"form-control\" id=\"description\" name=\"description\" [(ngModel)]=\"assessment.description\"></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"therapistDescription\">Therapist Description:</label>\n          <textarea class=\"form-control\" id=\"therapistDescription\" name=\"therapistDescription\" [(ngModel)]=\"assessment.therapistDescription\"></textarea>\n      </div>\n\n        <div class=\"form-group\">\n            <label for=\"creator\">Creator:</label>\n            <input class=\"form-control\" type=\"text\" id=\"creator\" name=\"creator\" [(ngModel)]=\"assessment.creator\" />\n        </div>\n        <div class=\"form-group\">\n            <label for=\"creator\">Creator Url:</label>\n            <input class=\"form-control\" type=\"text\" id=\"creatorUrl\" name=\"creatorUrl\" [(ngModel)]=\"assessment.creatorUrl\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"resourcesURL\">Resources URL:</label>\n          <input class=\"form-control\" type=\"text\" id=\"resourcesURL\" name=\"resourcesURL\" [(ngModel)]=\"assessment.resourcesURL\" />\n        </div>\n        <input class=\"btn btn-primary\" type=\"submit\" (click)=\"save()\" value=\"Save\" />\n      </form>\n    </dac-tab>\n    <dac-tab heading=\"Scales\">\n        <a [routerLink]=\"['scale','new']\"  type=\"button\" class=\"btn btn-primary\">New Scale</a>\n        <!--TODO: stephen move this to <scales-list></scales-list>-->\n        <p class=\"alert alert-info\" *ngIf=\"assessment.scales.length <= 0\">No scales exist</p>\n        <table class=\"table\" *ngIf=\"assessment.scales.length\">\n          <thead class=\"primary-color text-white\">\n            <tr>\n              <th>Title</th>\n              <th>Score Multiplier</th>\n              <th>Ranges</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let scale of assessment.scales; let first = first; let last = last;\">\n\n            <td class=\"w-25\">\n                {{scale.name}}\n            </td>\n            <td>\n              {{scale.multiplier}}\n            </td>\n            <td class=\"w-50\">\n              <span *ngFor=\"let range of scale.ranges;\">{{range.displayName}}&nbsp;</span>\n            </td>\n            <td class=\"w-25\">\n                <button (click)=\"moveUpScale(scale)\" [disabled]=\"first\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Up\">\n                    <span class=\"fa fa-arrow-up\" aria-hidden=\"true\"></span>\n                  </button>\n                  <button (click)=\"moveDownScale(scale)\" [disabled]=\"last\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Down\">\n                    <span class=\"fa fa-arrow-down\" aria-hidden=\"true\"></span>\n                  </button>\n              <button [routerLink]=\"['scale',scale.id,'edit']\"\n                type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Edit\">\n                <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\n              </button>\n              <button (click)=\"deleteScale(scale)\" type=\"button\" class=\"btn btn-secondary btn-sm\" aria-label=\"Delete\">\n                <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n              </button>\n            </td>\n          </tr>\n        </table>\n    </dac-tab>\n    <dac-tab heading=\"Question Sets\">\n      <a [routerLink]=\"['question-set', 'new']\"  type=\"button\" class=\"btn btn-primary\">New Question Set</a>\n      <p class=\"alert alert-info\" *ngIf=\"assessment.question_sets.length <= 0\">No Question Sets exist</p>\n      <!--<question-set-list></question-set-list>-->\n      <table class=\"table\" *ngIf=\"assessment.question_sets.length\">\n        <thead class=\"primary-color text-white\">\n          <tr>\n            <th>Title</th>\n            <th># of Questions</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tr *ngFor=\"let questionSet of assessment.question_sets; let first = first; let last = last;\">\n          <td>\n              {{questionSet.title}}\n          </td>\n          <td>\n            {{questionSet.questions.length}}\n          </td>\n          <td>\n            <button (click)=\"moveUpSet(questionSet)\" [disabled]=\"first\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Up\">\n              <span class=\"fa fa-arrow-up\" aria-hidden=\"true\"></span>\n            </button>\n            <button (click)=\"moveDownSet(questionSet)\" [disabled]=\"last\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Down\">\n              <span class=\"fa fa-arrow-down\" aria-hidden=\"true\"></span>\n            </button>\n            <button [routerLink]=\"['question-set',questionSet.id,'edit']\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Edit\">\n              <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\n            </button>\n              <button (click)=\"deleteQuestionSet(questionSet)\" type=\"button\" class=\"btn btn-primary btn-sm\" aria-label=\"Delete\">\n              <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n            </button>\n          </td>\n        </tr>\n      </table>\n    </dac-tab>\n    <dac-tab heading=\"Raw Edit\">\n        <textarea class=\"text-editor-window\" #reportContents [value]=\"getRawAssessment()\"></textarea>\n        <input type=\"button\" class=\"btn btn-primary\" (click)=\"updateAssessmentContents()\" value=\"Update\" />\n    </dac-tab>\n  </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AssessmentService } from 'app/shared/services/assessment.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Assessment } from 'app/shared/models/assessment';\nimport { Question } from 'app/shared/models/question';\nimport { QuestionType } from 'app/shared/models/question-type';\n\n@Component({\n  selector: 'app-assessment-view',\n  templateUrl: './assessment-view.component.html',\n  styleUrls: ['./assessment-view.component.css']\n})\nexport class AssessmentViewComponent implements OnInit {\n  public assessment:Assessment;\n  public hasLoadedAssessment:boolean;\n\n  constructor(\n    private route:ActivatedRoute\n    ,private router:Router\n    ,private assessmentService:AssessmentService\n    ,private alertService:AlertService\n  ) {\n    this.assessment = new Assessment();\n  }\n\n  ngOnInit() {\n    let uid = this.route.snapshot.params['uid'];\n    let version = this.route.snapshot.queryParams['version'];\n    this.assessmentService.uid = uid;\n    let assessmentPromise;\n    if (version) {\n      assessmentPromise = this.assessmentService.getAssessmentVersion(uid, version);\n    } else {\n      assessmentPromise = this.assessmentService.getAssessment(uid);\n    }\n    assessmentPromise.then((assessment) => {\n\t\t\t\tif (assessment) {\n\t\t\t\t\tthis.assessment = assessment;\n\t\t\t\t\tthis.hasLoadedAssessment = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// TODO: stephen handle 404 errors\n\t\t\t\t\t//this._$state.go(\"404\");\n          this.router.navigate([\"page-not-found\"]);\n\t\t\t\t}\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.hasLoadedAssessment = true;\n\t\t\t\t// TODO: stephen can't all of this just go in the catch block below?\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.alertService.error(\"Failed to retrieve assessment data from server\");\n\t\t\t\tthis.assessment = new Assessment();\n\t\t\t\tthis.assessment.uid = this.assessmentService.uid;\n\t\t\t});\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hasLoadedAssessment\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-warning\"><app-spin-icon></app-spin-icon> Loading Assessment data...</p>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"hasLoadedAssessment\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">{{assessment.name}}</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <dac-tabs class=\"col-12\">\n    <dac-tab heading=\"Details\">\n      <dac-assessment-details-view [assessment]=\"assessment\"></dac-assessment-details-view>\n    </dac-tab>\n    <dac-tab heading=\"Scales\">\n      <dac-scales-list-view [assessment]=\"assessment\"></dac-scales-list-view>\n    </dac-tab>\n    <dac-tab heading=\"Question Sets\">\n      <dac-question-set-list-view [assessment]=\"assessment\"></dac-question-set-list-view>\n    </dac-tab>\n  </dac-tabs>\n<div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AdminRoutingModule } from \"./admin-routing.module\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { AssessmentChartsModule } from \"../assessment-charts/assessment-charts.module\";\nimport { ThemeModule } from \"../theme/theme.module\";\n\nimport { AdminComponent } from './admin/admin.component';\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { ClientNewComponent } from './client-new/client-new.component';\nimport { ClientEditComponent } from './client-edit/client-edit.component';\nimport { AssessmentListComponent } from './assessment-list/assessment-list.component';\nimport { AssessmentNewComponent } from './assessment-new/assessment-new.component';\nimport { AssessmentEditComponent } from './assessment-edit/assessment-edit.component';\nimport { AssessmentAdminComponent } from './assessment-admin/assessment-admin.component';\nimport { QuestionSetEditComponent } from './question-set-edit/question-set-edit.component';\nimport { QuestionSetCoreFormComponent } from './question-set-core-form/question-set-core-form.component';\nimport { QuestionSetNewComponent } from './question-set-new/question-set-new.component';\nimport { ScaleNewComponent } from './scale-new/scale-new.component';\nimport { ScaleEditComponent } from './scale-edit/scale-edit.component';\n\nimport { QuestionNewComponent } from './question-new/question-new.component';\nimport { QuestionEditComponent } from './question-edit/question-edit.component';\n\nimport { AssessmentGroupEditComponent } from './assessment-group-edit/assessment-group-edit.component';\nimport { LabelNewComponent } from './label-new/label-new.component';\nimport { LabelEditComponent } from './label-edit/label-edit.component';\nimport { ScaleRangeNewComponent } from './scale-range-new/scale-range-new.component';\nimport { ScaleRangeEditComponent } from './scale-range-edit/scale-range-edit.component';\nimport { AdminShopComponent } from './admin-shop/admin-shop.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { ShopItemsComponent } from './shop-items/shop-items.component';\nimport { CheckoutThankyouComponent } from './checkout-thankyou/checkout-thankyou.component';\nimport { ViewOrderComponent } from './view-order/view-order.component';\nimport { CartWidgetComponent } from './cart-widget/cart-widget.component';\nimport { MyAccountComponent } from './my-account/my-account.component';\nimport { OrderHistoryComponent } from './order-history/order-history.component';\nimport { ViewOrderPageComponent } from './view-order-page/view-order-page.component';\nimport { CheckoutStatusMonitorComponent } from './checkout-status-monitor/checkout-status-monitor.component';\nimport {ReportsModule} from \"../reports/reports.module\";\nimport { LoginModule } from 'app/login/login.module';\nimport { AssessmentViewComponent } from './assessment-view/assessment-view.component';\nimport { ScalesListViewComponent } from './scales-list-view/scales-list-view.component';\nimport { QuestionSetListViewComponent } from './question-set-list-view/question-set-list-view.component';\nimport { AssessmentDetailsViewComponent } from './assessment-details-view/assessment-details-view.component';\nimport { AssessmentTokensListComponent } from './assessment-tokens-list/assessment-tokens-list.component';\nimport { QuestionLabelsEditComponent } from './question-labels-edit/question-labels-edit.component';\nimport {ClientSearchService} from \"./services/client-search.service\";\nimport { AssessmentAssignerService } from './services/assessment-assigner.service';\nimport { ClientSendInvitationComponent } from '../client-send-invitation/client-send-invitation.component';\nimport { AnnouncementBarComponent } from './announcement-bar/announcement-bar.component';\nimport { AnnouncementService } from './services/announcement.service';\nimport { ClientManageAssignmentsComponent } from './client-manage-assignments/client-manage-assignments.component';\nimport { UserUpgradeSubscriptionNoticeComponent } from './user-upgrade-subscription-notice/user-upgrade-subscription-notice.component';\nimport { SubscriptionDialogComponent } from './subscription-dialog/subscription-dialog.component';\nimport { SubscriptionService } from './services/subscription.service';\nimport { BillingPlansComponent } from './billing-plans/billing-plans.component';\nimport { LibraryAssetsModule } from 'app/library-assets/library-assets.module';\nimport { MessageTemplateService } from './services/message-template.service';\nimport { ClientEmbeddedViewComponent } from './client-embedded-view/client-embedded-view.component';\nimport { ClientAppointmentAssignmentEdit } from './client-appointment-assignment-edit/client-appointment-assignment-edit.component';\n\n@NgModule({\n  imports: [\n    RouterModule\n    ,SharedModule\n    ,LibraryAssetsModule\n    ,AssessmentChartsModule\n    ,ReportsModule\n    ,ThemeModule\n    ,LoginModule\n    ,FormsModule\n    ,AdminRoutingModule\n  ],\n  declarations: [\n    AdminComponent,\n    ClientListComponent,\n    ClientNewComponent,\n    ClientEditComponent,\n    AssessmentListComponent,\n    AssessmentNewComponent,\n    AssessmentEditComponent,\n    AssessmentAdminComponent,\n    QuestionSetEditComponent,\n    QuestionSetCoreFormComponent,\n    QuestionSetNewComponent,\n    QuestionNewComponent,\n    QuestionEditComponent,\n    ScaleNewComponent,\n    ScaleEditComponent,\n    AssessmentGroupEditComponent,\n    LabelNewComponent,\n    LabelEditComponent,\n    ScaleRangeNewComponent,\n    ScaleRangeEditComponent,\n    AdminShopComponent,\n    CheckoutComponent,\n    ShopItemsComponent,\n    CheckoutThankyouComponent,\n    ViewOrderComponent,\n    CartWidgetComponent,\n    MyAccountComponent,\n    OrderHistoryComponent,\n    ViewOrderPageComponent,\n    CheckoutStatusMonitorComponent,\n    AssessmentViewComponent,\n    ScalesListViewComponent,\n    QuestionSetListViewComponent,\n    AssessmentDetailsViewComponent,\n    AssessmentTokensListComponent,\n    QuestionLabelsEditComponent,\n    ClientSendInvitationComponent,\n    AnnouncementBarComponent,\n    ClientManageAssignmentsComponent,\n    UserUpgradeSubscriptionNoticeComponent,\n    SubscriptionDialogComponent,\n    BillingPlansComponent,\n    ClientEmbeddedViewComponent,\n    ClientAppointmentAssignmentEdit\n  ],\n  entryComponents: [SubscriptionDialogComponent]\n  ,providers: [ClientSearchService, AssessmentAssignerService, AnnouncementService, SubscriptionService, MessageTemplateService]\n})\nexport class AdminModule { }\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CompaniesListComponent } from 'app/companies-admin/companies-list/companies-list.component';\nimport { CompanyNewComponent } from 'app/companies-admin/company-new/company-new.component';\nimport { CompanyEditComponent } from 'app/companies-admin/company-edit/company-edit.component';\n\nconst companyRoutes: Routes = [\n  {path: '',component: CompaniesListComponent}\n  ,{path: 'new', component: CompanyNewComponent }\n  ,{path: ':companyId/edit', component: CompanyEditComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(companyRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CompaniesAdminRoutingModule { }\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Injectable } from \"@angular/core\";\nimport { Observable ,  Subject } from \"rxjs\";\nimport { AuthService } from \"app/login/services/auth.service\";\nimport { Subscription } from \"app/shared/models/subscription\";\nimport { BillingService } from \"app/shared/services/billing.service\";\nimport { BillingDetails } from \"app/shared/models/billing-details\";\nimport { SubscriptionStatus } from \"app/shared/models/subscription-status\";\nimport { HTTPService } from \"app/shared/services/http.service\";\nimport { SystemError } from \"app/shared/models/SystemError\";\nimport { ErrorCode } from \"app/shared/models/ErrorCodes\";\nimport { SubscriptionHydratorService } from \"app/shared/services/subscription-hydrator.service\";\n\n@Injectable({\n  // we have to have this in root for the subscription dialog component to make sure it can find the service.\n  // TODO: stephen is there a better way to deal with this dependency?\n  providedIn: 'root'\n})\nexport class SubscriptionService {\n\n    private _subscriptionRequiredSubject:Subject<boolean>;\n    constructor(private authService:AuthService,\n        private billingService:BillingService\n        ,private httpService:HTTPService\n        , private subHydrator:SubscriptionHydratorService) {\n        this._subscriptionRequiredSubject = new Subject<boolean>();\n    }\n\n\n  cancelSubscription(subscription:Subscription, billingDetails:BillingDetails, reason:string) {\n    let subIndex = billingDetails.subscriptions.findIndex(s => s.id == subscription.id);\n    let sub = billingDetails.subscriptions[subIndex];\n    let subscriptionToSave:any = Object.assign({}, sub);\n    subscriptionToSave.status = SubscriptionStatus.CANCEL_PROCESSING;\n    subscriptionToSave.cancelReason = reason;\n\n    return this.authService.getCurrentUser().then(user => {\n      return this.httpService.post(\"/admin/billing/\" + user.companyID + \"/subscription/\" + subscriptionToSave.id, subscriptionToSave)\n      .then((json) => {\n        let updatedSubscription = this.subHydrator.fromJSONObject(json);\n        billingDetails.subscriptions[subIndex] = updatedSubscription;\n        this.authService.updateUserWithSubscription(updatedSubscription);\n        return billingDetails;\n      })\n      .catch(error => {\n        console.error(error);\n        if (error.status < 500) {\n          let errorResponse = error.body as any;\n          throw new SystemError(errorResponse._code, errorResponse._message);\n        } else {\n          throw new SystemError(ErrorCode.SYSTEM_ERROR, \"There was a system error in communicating with the server\");\n        }\n      })\n    });\n  }\n\n    public upgradeSubscription(subscription:Subscription, billingDetails:BillingDetails) {\n        // subscription.status = SubscriptionStatus.ACTIVE; // just fake it for now.\n\n        let subIndex = billingDetails.subscriptions.findIndex(s => s.id == subscription.id);\n        let sub = billingDetails.subscriptions[subIndex];\n        let subscriptionToSave = Object.assign(new Subscription(), sub);\n        subscriptionToSave.status = SubscriptionStatus.ACTIVE;\n        return this.authService.getCurrentUser().then(user => {\n          return this.httpService.post(\"/admin/billing/\" + user.companyID + \"/subscription/\" + subscriptionToSave.id, subscriptionToSave)\n          .then((json) => {\n            let updatedSubscription = this.subHydrator.fromJSONObject(json);\n            this.authService.updateUserWithSubscription(updatedSubscription);\n            billingDetails.subscriptions[subIndex] = updatedSubscription;\n            return billingDetails;\n          })\n          .catch(error => {\n            // TODO: stephen should we put this in the HTTP service?  It would be nice to start having the same objects on the server\n            // as we do on the client.\n            console.error(error);\n            if (error.status < 500) {\n              let errorResponse = error.body as any;\n              throw new SystemError(errorResponse._code, errorResponse._message);\n            } else {\n              throw new SystemError(ErrorCode.SYSTEM_ERROR, \"There was a system error in communicating with the server\");\n            }\n          });\n        });\n    }\n\n    public updatePastDueSubscription(subscription:Subscription, billingDetails:BillingDetails) {\n        // poll the server and check if the subscription has been processed...\n      return new Promise<BillingDetails>((resolve, reject) => {\n        let count = 0;\n        let interval = setInterval(() => {\n          if (count++ > 10) {\n            // we got nowhere...\n            clearInterval(interval);\n            resolve(billingDetails);\n            return;\n          }\n           // too tired, but something like this would work...\n           this.billingService.getBillingDetails().then(details => {\n            let updatedSub = details.subscriptions.find(s => s.id == subscription.id);\n            if (updatedSub && updatedSub.isActiveSubscription()) {\n                this.authService.updateUserWithSubscription(updatedSub);\n                clearInterval(interval);\n                resolve(details);\n            }\n          })\n          .catch(error => {\n              reject(error);\n          });\n        }, 2000)\n      });\n    }\n\n    public subscriptionRequiredEvent() : Observable<boolean> {\n        return this._subscriptionRequiredSubject;\n    }\n\n    public getSubscriptionPageRoute() : string[] {\n        return ['/admin/my-account/plans'];\n    }\n\n    public notifySubscriptionRequired() {\n        this._subscriptionRequiredSubject.next(true);\n    }\n\n    public getCurrentUserSubscription() {\n        return this.authService.getCurrentUser().then(user => {\n            return user.subscription;\n        });\n    }\n\n    public getPlanDetailsForSubscription(subscription:Subscription) {\n        let items = [];\n        if (subscription.plan && subscription.plan.unitType == 'Assessments') {\n            items.push(\"5000 Assessments per month\");\n            items.push(\"$1 per additional thousand tests\");\n            items.push(\"External hosting of assessments\");\n            items.push(\"Custom hosted assessment reports\");\n          } else {\n            items.push(\"Unlimited use of our library of research backed, valid, and reliable assessments\");\n            items.push(\"Comprehensive and personalized battery and assessment reports\")\n            items.push(\"Unlimited number of clients\");\n            items.push(\"Unlimited number of assessment batteries\");\n            items.push(\"Unlimited number of assessments\");\n            items.push(\"Assignment completion notifications\");\n          }\n        return items;\n    }\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {CompanyService} from '../../shared/services/company.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Company} from '../../shared/models/company';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company-edit',\n  templateUrl: './company-edit.component.html',\n  styleUrls: ['./company-edit.component.css']\n})\nexport class CompanyEditComponent implements OnInit {\n  private _company:Company;\n  private _users:any;\n  private _orderStatistics:any;\n\n  constructor(private route:ActivatedRoute, private companyService:CompanyService, ) {\n    this.company = new Company();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let companyID = params['companyId'];\n      this.companyService.getCompany(companyID).then((company) => {\n        this.company = company;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n      this.companyService.getUserStatistics(companyID).then((userStats) => {\n        this._users = userStats;\n      });\n\n      this.companyService.getOrderStatistics(companyID).then((orderStats) => {\n        this._orderStatistics = orderStats;\n      });\n    });\n  }\n\n  public get users() {\n    return this._users;\n  }\n\n  public get orderStatistics() {\n    return this._orderStatistics;\n  }\n\n\tpublic get company(): Company {\n\t\treturn this._company;\n\t}\n\n\tpublic set company(value: Company) {\n\t\tthis._company = value;\n\t}\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h1 class=\"h1-responsive text-center\">{{company.name}}</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <dac-tabs class=\"col-12\">\n    <dac-tab heading=\"General\">\n      <ul>\n        <li>Name: {{company.name}}</li>\n        <li>Email: {{company.email}}</li>\n        <li>Owner: {{company.user?.username}}</li>\n        <li *ngIf=\"company.sharedTokens\">Token Share Setting: Shared</li>\n        <li *ngIf=\"!company.sharedTokens\">Token Share Setting: Private</li>\n        <li>Host Site: {{company.hostSiteName}}</li>\n        <li>Send Assessments Complete Notifications: {{company.sendAssessmentsCompleteNotifications}}</li>\n        <li>Send Notifications to Primary Contact: {{company.sendNotificationsToPrimaryContact}}</li>\n      </ul>\n    </dac-tab>\n    <dac-tab heading=\"Details\">\n      <h1>System Users</h1>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Role</th>\n            <th># Assigned Clients</th>\n          </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of users\">\n          <td>{{user.username}}</td>\n          <td>{{user.role_name}}</td>\n          <td>{{user.client_count}}</td>\n        </tr>\n      </tbody>\n      </table>\n    </dac-tab>\n    <dac-tab heading=\"Order History\">\n      <table class=\"table table-striped\">\n        <tbody>\n          <tr>\n            <td>Successful Orders</td>\n            <td>{{orderStatistics.orders}}</td>\n          </tr>\n          <tr>\n            <td>Pending Orders</td>\n            <td>{{orderStatistics.pendingOrders}}</td>\n          </tr>\n          <tr>\n            <td>Failed Orders</td>\n            <td>{{orderStatistics.failedOrders}}</td>\n          </tr>\n          <tr>\n            <td>Average Revenue / Order</td>\n            <td>{{orderStatistics.revenueAverage | currency}}</td>\n          </tr>\n          <tr>\n            <td>Total Revenue</td>\n            <td>{{orderStatistics.revenue | currency}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </dac-tab>\n  </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { AnnouncementService } from '../services/announcement.service';\n\n@Component({\n  selector: 'dac-announcement-bar',\n  templateUrl: './announcement-bar.component.html',\n  styleUrls: ['./announcement-bar.component.scss']\n})\nexport class AnnouncementBarComponent implements OnInit {\n  private _announcements:any[];\n\n  constructor(private announcementService:AnnouncementService) { }\n\n  ngOnInit() {\n    // for now we are just going to grab a new announcement every time we come to the client list page.\n    this.announcementService.getAnnouncements()\n    .then((announcements) => {\n      this._announcements = announcements.map(a => {\n        a.alertClass = 'alert-' + a.type;\n        return a;\n      });\n    })\n    .catch(error => {\n      console.error(error);\n    });\n  }\n\n  public get Announcements() {\n    return this._announcements;\n  }\n\n  public dismissAnnouncement(announcement:any) {\n    this._announcements = this._announcements.filter(a => a !== announcement);\n    this.announcementService.markAnnouncementRead(announcement); // even if it fails it will show up the next time and we take care of it on the server.\n\n  }\n\n}\n","<div class=\"row\" *ngFor=\"let announcement of Announcements\">\n  <div class=\"col\">\n    <div class=\"alert\" [ngClass]=\"announcement.alertClass\">\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissAnnouncement(announcement)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      {{announcement.content}}\n      <a *ngIf=\"announcement.linkType=='external'\" [href]=\"announcement.link\" target=\"_blank\" class=\"btn btn-link btn-secondary btn-sm\">{{announcement.linkTitle}}</a>\n      <a *ngIf=\"announcement.linkType=='internal'\" [routerLink]=\"announcement.link\" class=\"btn btn-link btn-secondary btn-sm\">{{announcement.linkTitle}}</a>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2023 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\n\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { DacConfig } from \"app/shared/services/dac-config.service\";\n\n@Component({\n  selector: 'dc-client-embedded-view',\n  templateUrl: './client-embedded-view.component.html'\n})\nexport class ClientEmbeddedViewComponent implements OnInit,OnDestroy {\n\n  constructor(private dacConfig:DacConfig) {\n  }\n  ngOnInit(): void {\n    // this.dacConfig.setupSeamlessModeForSession();\n  }\n  ngOnDestroy(): void {\n      // this.dacConfig.clearSeamlessModeForSession();\n  }\n\n}\n","<div>\n  <input type=\"button\" class=\"btn btn-primary\" value=\"Chart to Encounters\" />\n  <router-outlet></router-outlet>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AssessmentService } from \"../../shared/services/assessment.service\";\nimport { QuestionSet } from \"../../shared/models/question-set\";\nimport { QuestionSetLabel } from \"../../shared/models/question-set-label\";\nimport { Question } from \"../../shared/models/question\";\nimport { SaveMessages } from \"../../shared/models/save-messages\";\nimport { Assessment } from \"../../shared/models/assessment\";\nimport { DisplayCondition } from \"../../shared/models/display-condition\";\nimport { QuestionSetType } from \"../../shared/models/question-set-type\";\n@Component({\n  selector: 'app-question-set-edit',\n  templateUrl: './question-set-edit.component.html',\n  styleUrls: ['./question-set-edit.component.css']\n})\nexport class QuestionSetEditComponent implements OnInit {\n\n\tprivate _questionSet:QuestionSet;\n\tprivate assessment:Assessment;\n\n  constructor(\n    private _assessmentService:AssessmentService\n    ,private route:ActivatedRoute\n    ,private router:Router\n\t\t,private location:Location\n\t\t,private alertService:AlertService\n  ) {\n    this.questionSet = new QuestionSet();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      let setId = params['setId'];\n      this._assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this.assessment = assessment;\n          this.questionSet = assessment.question_sets.find((s) => s.id == setId);\n\t\t\t\t\tconsole.log(this.questionSet);\n          if (!this.questionSet) {\n            // TODO: stephen should we navigate back?? or do some kind of 404?\n            this.router.navigate([\"not-found\"]);\n          }\n        });\n    });\n  }\n\n\tget Assessment() {\n\t\treturn this.assessment;\n\t}\n\n\tpublic hasConditions(questionSet:QuestionSet) {\n\t\treturn questionSet.display_conditions && questionSet.display_conditions.length > 0;\n\t}\n\n\tpublic toggleCondition(questionSet:QuestionSet) {\n\t\tif (this.hasConditions(questionSet)) {\n\t\t\tquestionSet.display_conditions = [];\n\t\t}\n\t\telse {\n\t\t\t// set it with a new display condition\n\t\t\tquestionSet.display_conditions.push(new DisplayCondition());\n\t\t}\n\t}\n\n\tget Condition() : DisplayCondition {\n\t\treturn this._questionSet.display_conditions[0];\n\t}\n\n  get questionSet() : QuestionSet {\n    return this._questionSet;\n  }\n\n  set questionSet(v:QuestionSet) {\n    this._questionSet = v;\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n\tmoveDownLabel(label:QuestionSetLabel) {\n\t\tthis.questionSet.shiftLabelDown(label);\n\t\tthis.save();\n\t}\n\n\tmoveUpLabel(label:QuestionSetLabel) {\n\t\tthis.questionSet.shiftLabelUp(label);\n\t\tthis.save();\n\t}\n\n\tmoveUpQuestion(question:Question) {\n\t\tthis.questionSet.shiftQuestionUp(question);\n\t\tthis.save();\n\t}\n\n\tmoveDownQuestion(question:Question) {\n\t\tthis.questionSet.shiftQuestionDown(question);\n\t\tthis.save();\n\t}\n\n\tsave() {\n\t\tthis._assessmentService.saveAssessment(this.assessment).then((assessment) => {\n\t\t\t\tthis.alertService.success(\"Question Set saved\");\n    }).catch((error) => {\n\t\t\tthis.alertService.error(\"Question Set failed to save.  Please try again or contact customer support.\");\n      console.error(error);\n    });\n\t}\n\n\tdeleteQuestion(question) {\n\t\tif (!confirm(\"Are you sure you want to delete this question?\")) {\n\t\t\treturn;\n\t\t}\n\t\tthis.questionSet.removeQuestion(question);\n\t\t// TODO: stephen need messaging for removing a question, at least if it fails\n    this.saveDeleteItem(this.assessment);\n\t}\n\n\tdeleteLabel(label) {\n\t\tif (!confirm(\"Are you sure you want to delete this label?\")) {\n\t\t\treturn;\n\t\t}\n\t\tthis.questionSet.removeLabel(label);\n\t\tthis.saveDeleteItem(this.assessment);\n\t}\n\n\tshowQuestionLabelsForType(type) {\n\t\tif (type != QuestionSetType[type]) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n  private saveDeleteItem(assessment) {\n    this._assessmentService.saveAssessment(this.assessment).then((assessment) => {\n\t\t\tthis.alertService.error(\"Item deleted.\");\n    }).catch((error) => {\n\t\t\tthis.alertService.error(\"Failed to delete item.  Please try again or contact customer support.\");\n      console.error(error);\n\t\t});\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">{{questionSet.title}}</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <dac-tabs class=\"col-12\">\n    <dac-tab heading=\"General\">\n      <app-question-set-core-form [questionSet]=\"questionSet\"></app-question-set-core-form>\n      <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n    </dac-tab>\n    <dac-tab heading=\"Labels\" *ngIf=\"showQuestionLabelsForType(questionSet.display_type)\"\n      class=\"labelsContainer\">\n      <a [routerLink]=\"['label','new']\" type=\"button\" class=\"btn btn-primary\">New Label</a>\n      <p class=\"alert alert-info\" *ngIf=\"!questionSet.labels.length\">There are no labels.</p>\n      <table class=\"table table-striped\" *ngIf=\"questionSet.labels.length\">\n        <thead class=\"primary-color text-white\">\n          <tr>\n            <th *ngFor=\"let name of ['Label', 'Answer Value', 'Actions']\">{{name}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let label of questionSet.labels;let index = index;let first = first;let last=last;\">\n            <td class=\"50\">{{label.label}}</td>\n            <td>{{questionSet.answer_start_value + index}}</td>\n            <td class=\"25\">\n              <button (click)=\"moveUpLabel(label)\" [disabled]=\"first\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                aria-label=\"Up\">\n                <span class=\"fa fa-arrow-up\" aria-hidden=\"true\"></span>\n              </button>\n              <button (click)=\"moveDownLabel(label)\" [disabled]=\"last\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                aria-label=\"Down\">\n                <span class=\"fa fa-arrow-down\" aria-hidden=\"true\"></span>\n              </button>\n              <button [routerLink]=\"['label', label.id, 'edit']\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                aria-label=\"Edit\">\n                <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\n              </button>\n              <button (click)=\"deleteLabel(label)\" type=\"button\" class=\"btn btn-secondary btn-sm\" aria-label=\"Delete\">\n                <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </dac-tab>\n    <dac-tab heading=\"Questions\" class=\"questionsContainer\">\n      <a [routerLink]=\"['question','new']\" type=\"button\" class=\"btn btn-primary\">New Question</a>\n      <p class=\"alert alert-info\" *ngIf=\"!questionSet.questions.length\">There are no questions.</p>\n      <table class=\"table table-striped\" *ngIf=\"questionSet.questions.length\">\n        <thead class=\"primary-color text-white\">\n          <tr>\n            <th *ngFor=\"let name of ['', 'Question', 'Reversed', 'Flagged', 'Scale', 'Actions']\">{{name}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let question of questionSet.questions; let index = index;let first=first; let last=last;\">\n            <td class=\"col-xs-1\">{{index+1}}.\n              <!--<td>{{question.id}}</td>-->\n            <td class=\"col-xs-5\">{{question.prompt}}</td>\n            <td>\n              <span *ngIf=\"question.is_reversed\">Yes</span>\n              <span *ngIf=\"!question.is_reversed\">No</span>\n            </td>\n            <td>\n              <span *ngIf=\"question.hasFlagCondition\">Yes</span>\n              <span *ngIf=\"!question.hasFlagCondition\">No</span>\n            </td>\n            <td class=\"col-xs-2\">{{question?.assessment_scale?.name}}</td>\n            <td class=\"col-xs-4\">\n              <button (click)=\"moveUpQuestion(question)\" [disabled]=\"first\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                aria-label=\"Up\">\n                <span class=\"fa fa-arrow-up\" aria-hidden=\"true\"></span>\n              </button>\n              <button (click)=\"moveDownQuestion(question)\" [disabled]=\"last\" type=\"button\"\n                class=\"btn btn-primary btn-sm\" aria-label=\"Down\">\n                <span class=\"fa fa-arrow-down\" aria-hidden=\"true\"></span>\n              </button>\n              <button [routerLink]=\"['question',question.id,'edit']\" type=\"button\" class=\"btn btn-primary btn-sm\"\n                aria-label=\"Edit\">\n                <span class=\"fa fa-edit\" aria-hidden=\"true\"></span>\n              </button>\n              <button (click)=\"deleteQuestion(question)\" type=\"button\" class=\"btn btn-secondary btn-sm\"\n                aria-label=\"Delete\">\n                <span class=\"fa fa-trash\" aria-hidden=\"true\"></span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </dac-tab>\n    <dac-tab heading=\"Advanced\">\n      <div class=\"row\">\n        <div class=\"form-group col\">\n          <input id=\"condition-display\" type=\"checkbox\" [checked]=\"hasConditions(questionSet)\"\n            (click)=\"toggleCondition(questionSet)\" />\n          <label for=\"condition-display\">Conditionally Display?</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <condition-edit *ngIf=\"hasConditions(questionSet)\" class=\"col p-2\" [condition]=\"Condition\"\n          [assessment]=\"Assessment\"></condition-edit>\n      </div>\n      <div class=\"row\">\n        <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n      </div>\n    </dac-tab>\n  </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from \"../../shared/models/user\";\nimport { UserService } from \"../../shared/services/user.service\";\nimport { Role } from \"../../shared/models/role\";\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { AuthService } from 'app/login/services/auth.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n  private _user:User;\n  public passwordChange:string;\n  public confirmPassword:string;\n  public isSaving:boolean;\n\n  public canArchive:boolean;\n\n  public get User() {\n    return this._user;\n  }\n  public set User(v:User) {\n    this._user = v;\n  }\n\n  constructor(private userService:UserService, private route:ActivatedRoute\n    , private alertService:AlertService, private authService:AuthService) {\n      this.passwordChange = \"\";\n      this.confirmPassword = \"\";\n    this._user = new User();\n    this.isSaving = false;\n    this.canArchive = true;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let userId = params['userId'];\n      let editUser = this.userService.getUser(userId);\n      let currentUser = this.authService.getCurrentUser();\n      Promise.all([editUser, currentUser]).then((results) => {\n        let [user, currentUser] = results;\n        this._user = user;\n        if (user.id == currentUser.id) {\n          this.canArchive = false;\n        } else if (user.role <= Role.Owner) {\n          this.canArchive = false;\n        }\n      });\n\n      // TODO: stephen handle not found user...\n    });\n  }\n\n  private validateForm() {\n    let errors = [];\n    // nothing to do here as the passwords don't matter.\n    if (!(this.passwordChange && this.confirmPassword)) {\n      return errors;\n    }\n    if (this.passwordChange != this.confirmPassword) {\n      errors.push(\"Your passwords don't match\");\n    }\n    let passwordPolicyMsg = \"Password must be 8 characters or more, contain at least one number(0-9), one uppercase letter(a-z), and one lowercase letter(A-Z)\";\n    let password = this.passwordChange;\n    if (!password || password.length < 8) {\n      errors.push(passwordPolicyMsg);\n    }\n    else if (!password.match(/[0-9]+/)) {\n      errors.push(passwordPolicyMsg);\n    }\n    else if (!password.match(/[A-Z]+/)) {\n      errors.push(passwordPolicyMsg);\n    }\n    else if (!password.match(/[a-z]+/)) {\n      errors.push(passwordPolicyMsg);\n    }\n    return errors;\n  }\n\n  public save() {\n    let errors = this.validateForm();\n    if (errors.length) {\n      this.alertService.error(errors.join(\"\\n\"), 3000);\n      return;\n    }\n    if (this.passwordChange.trim() != \"\") {\n      this._user.password = this.passwordChange;\n    }\n    this.userService.saveUser(this._user).then(response => {\n      this.alertService.success(\"User saved!\");\n    })\n    .catch(error => {\n      if (error._code == 'DUP_ENTRY') {\n        this.alertService.error(error.message);\n      } else {\n        this.alertService.error(\"User failed to save.  Please try again or contact support!\");\n      }\n    });\n  }\n\n  public archiveUser() {\n    if (confirm(\"Are you sure you wish to archive this user?\")) {\n      this.userService.archiveUser(this._user);\n    }\n  }\n\n  public restoreUser() {\n    this.userService.restoreUser(this._user);\n  }\n\n  public setUserRole(role:Role) {\n    console.log(\"setting user's role to \", role);\n    this._user.role = role;\n  }\n\n}\n\n","<div class=\"row\">\n    <div class=\"col-1\">\n        <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n        <h1 class=\"h1-responsive text-center\">{{User.username}}</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <dac-tabs class=\"col-12\">\n        <dac-tab heading=\"General\">\n            <div class=\"form-horizontal\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"username\">Email:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                        <b>{{User.username}}</b>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"username\">First Name:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                        <input class=\"form-control\" id=\"firstName\" type=\"text\" [(ngModel)]=\"User.firstName\" [disabled]=\"!User.enabled\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"lastName\">Last Name:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10\">\n                        <input class=\"form-control\" id=\"lastName\" type=\"text\" [(ngModel)]=\"User.lastName\" [disabled]=\"!User.enabled\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"password\">Password:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                        <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"passwordChange\" [disabled]=\"!User.enabled\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"confirmPassword\">Confirm Password:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                        <input id=\"confirmPassword\" type=\"password\" class=\"form-control\" [(ngModel)]=\"confirmPassword\" [disabled]=\"!User.enabled\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label class=\"col-sm-12 col-md-6 col-lg-2\" for=\"roleSelector\">Role:</label>\n                    <div class=\"col-sm-12 col-md-6 col-lg-10 \">\n                        <app-role-selector id=\"roleSelector\" [role]=\"User.role\" (selected)=\"setUserRole($event)\" [disabled]=\"!User.enabled\"></app-role-selector>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-8\">\n                        <input [disabled]=\"isSaving || !User.enabled\" class=\"btn btn-primary\" type=\"button\" value=\"Save\" (click)=\"save()\" />\n                    </div>\n                    <div class=\"col-sm-4\" *ngIf=\"User.enabled\">\n                        <button aria-label=\"Archive User\" title=\"Archive User\" class=\"btn btn-primary\" type=\"button\" tabindex=\"0\" (click)=\"archiveUser()\" [disabled]=\"!canArchive\">\n                            <span aria-hidden=\"true\" class=\"fa fa-archive\"></span>\n                        </button>\n                        <small><b>Archive User</b> - This will disable the user from logging in</small>\n                    </div>\n                    <div class=\"col-sm-4\" *ngIf=\"!User.enabled\">\n                        <button aria-label=\"Restore User\" class=\"btn btn-primary\" title=\"Restore User From Archive\" type=\"button\" tabindex=\"0\" (click)=\"restoreUser()\">\n                            <span aria-hidden=\"true\" class=\"fa fa-undo\"></span>\n                        </button>\n                        <small><b>Restore User</b> - This will enable the user to login again.</small>\n                    </div>\n                </div>\n            </div>\n        </dac-tab>\n    </dac-tabs>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CompaniesListComponent } from './companies-list/companies-list.component';\nimport { CompanyNewComponent } from './company-new/company-new.component';\nimport { CompanyEditComponent } from './company-edit/company-edit.component';\nimport { CompaniesAdminRoutingModule } from 'app/companies-admin/companies-admin-routing.module';\nimport { SharedModule } from 'app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CompaniesAdminRoutingModule\n    ,SharedModule\n  ],\n  declarations: [CompaniesListComponent, CompanyNewComponent, CompanyEditComponent]\n})\nexport class CompaniesAdminModule { }\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { BillingDetails } from 'app/shared/models/billing-details';\nimport { BillingService } from 'app/shared/services/billing.service';\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { DacConfig } from 'app/shared/services/dac-config.service';\nimport { Subscription } from 'app/shared/models/subscription';\nimport { SubscriptionService } from '../services/subscription.service';\nimport { MetricsService } from 'app/shared/services/metrics.service';\nimport { SystemError } from 'app/shared/models/SystemError';\nimport { ErrorCode } from 'app/shared/models/ErrorCodes';\n\n@Component({\n  selector: 'dac-billing-plans',\n  templateUrl: './billing-plans.component.html',\n  styleUrls: ['./billing-plans.component.scss']\n})\nexport class BillingPlansComponent implements OnInit {\n  private billingDetails:BillingDetails;\n  public loading:boolean;\n  public upgrading:boolean;\n  public subscriptionAlertMessage:string;\n\n  public canceling:boolean;\n  public cancelConfirm:boolean;\n  public cancelFinalized:boolean;\n  public cancelReason:string;\n\n  @ViewChild(\"cancelOtherReason\") cancelOtherReason:ElementRef;\n\n  private readonly METRICS_CATEGORY = 'SubscriptionUpgrade';\n  public cancellationReasons:{id:string,label:string}[] = [\n    {id:'tooExpensive', 'label': 'Your product is too expensive'}\n    ,{id:'understandHowToUse', 'label': 'I don’t understand how to use your product'}\n    ,{id:'betterProduct', 'label': 'I found something else I like better'}\n    ,{id:'missingKeyFeature', 'label': 'You’re missing a key feature I need'}\n    ,{id:'notUsingIt', 'label': 'I don’t use it like I thought I would'}\n    ,{id:'notMyDecision', 'label': 'It’s not my decision (someone else is having me cancel)'}\n    ,{id:'tooBuggy', 'label': 'Your product has too many glitches or technical problems'}\n    ,{id:'subscribeLater', 'label': \"I'm not using this now but I plan on subscribing at a later point in time\"}\n    ,{id:'cantAfford', 'label': \"I can't afford this right now\"}\n  ];\n\n  constructor(private billingService:BillingService\n  ,private alertService:AlertService\n  ,private dacConfig:DacConfig\n  ,private subService:SubscriptionService\n  ,private metrics:MetricsService) {\n    this.billingDetails = new BillingDetails();\n  }\n\n  get hasSubscription() {\n    return this.billingDetails.subscriptions.length > 0;\n  }\n\n  get stripeChargeName() {\n    return this.dacConfig.stripe_charge_name;\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.billingService.getBillingDetails()\n    .then(details => {\n      this.billingDetails = details\n      this.loading = false;\n    })\n    .catch((error) => {\n      this.loading = false;\n      console.error(error);\n      this.metrics.trackEvent(this.METRICS_CATEGORY, 'ngOnInit', 'failed to get billing details');\n      this.alertService.error(\"Failed to retrieve billing details from server.  Check your network connection and refresh the page.\");\n    });\n  }\n\n  upgradeTrialSubscription(subscription:Subscription) {\n    this.subscriptionAlertMessage = null;\n    this.upgrading = true;\n\n    // collect the payment credentials and update the card\n    this.billingService.updateDefaultBillingCard(this.billingDetails)\n    .then((updatedBillingDetails) => {\n      this.billingDetails = updatedBillingDetails;\n      //\n      this.alertService.info(\"Billing card saved. Upgrading Subscription...\");\n      this.subService.upgradeSubscription(subscription, this.billingDetails)\n      .then(billingDetails => {\n        this.metrics.trackEvent(this.METRICS_CATEGORY, 'upgradeTrialSubscription', 'subscription upgrade success');\n        this.billingDetails = billingDetails;\n        this.alertService.success(\"Subscription upgraded!\");\n        this.upgrading = false;\n      })\n      .catch((error:SystemError) => {\n        this.upgrading = false;\n        this.subscriptionAlertMessage = error.message;\n        this.metrics.trackEvent(this.METRICS_CATEGORY, 'upgradeTrialSubscription', 'subscription upgrade failed ' + error.message);\n      })\n      // need to send subscription to server\n      // end the free subscription\n    })\n    .catch((error) => {\n      this.upgrading = false;\n      if (error.code && error.code == 'canceled') {\n        this.metrics.trackEvent(this.METRICS_CATEGORY, 'upgradeTrialSubscription', 'billing card update canceled by customer');\n        this.subscriptionAlertMessage = \"Billing card update was canceled.  A valid billing card must be provided before subscription can be upgraded\";\n      } else {\n        console.error(error);\n        this.metrics.trackEvent(this.METRICS_CATEGORY, 'upgradeTrialSubscription', 'billing card update failed');\n        this.subscriptionAlertMessage = \"There was an unexpected error in saving your billing card. Please try again or contact customer support\";\n      }\n\n      this.alertService.error(\"There was an error in saving your billing card. Please try again or contact customer support\");\n    });\n  }\n\n  updatePastDueBillingDetails(subscription:Subscription) {\n    this.upgrading = true;\n    this.subscriptionAlertMessage = null;\n    this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails');\n    this.billingService.updateDefaultBillingCard(this.billingDetails)\n    .then((updatedBillingDetails) => {\n      this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails', 'Card update success');\n      this.billingDetails = updatedBillingDetails;\n\n      this.alertService.info(\"Billing card saved. Upgrading subscription payment...\");\n      this.subService.updatePastDueSubscription(subscription, updatedBillingDetails)\n      .then((billingDetails) => {\n        this.upgrading = false;\n        this.billingDetails = billingDetails;\n        let updatedSub = billingDetails.subscriptions.find(s => s.id == subscription.id);\n        if (updatedSub && updatedSub.isUnpaidSubscription()) {\n          this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails', 'Subscription past-due');\n          this.subscriptionAlertMessage = \"Our card processor could not immediately charge this card.  We will continue to attempt to charge this card over the next few hours, or you can try a different card.  Most cards should process within 24 hours.  Contact your card provider or our support for more assistance.\";\n\n        } else if (updatedSub && updatedSub.isActiveSubscription()) {\n          this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails', 'Subscription active');\n          this.alertService.success(\"Subscription activated!\");\n        } else {\n          this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails', 'Subscription state other');\n          this.alertService.error(\"There was an error in processing your subscription upgrade.  Contact support for assistance\");\n        }\n      })\n      .catch((error) => {\n        this.upgrading = false;\n        this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails', 'Subscription update failed');\n        this.alertService.error(\"There was an error in processing your subscription upgrade.  Contact support for assistance\");\n        console.error(error);\n      });\n      // end the free subscription\n    })\n    .catch((error) => {\n      this.upgrading = false;\n      this.metrics.trackEvent(this.METRICS_CATEGORY, 'updatePastDueBillingDetails', 'Card update failed');\n      console.error(error);\n      this.alertService.error(\"There was an error in saving your billing card. Please try again or contact customer support\");\n    });\n  }\n\n  activateSubscription(subscription:Subscription) {\n    // activate the subscription\n    // TODO: stephen do we want to support this?\n  }\n\n  startCancellation(subscription:Subscription) {\n    this.cancelConfirm = true;\n    this.canceling = true;\n    this.cancelReason = null;\n  }\n\n  cancelSubscription(subscription:Subscription) {\n    if (!this.cancelReason) {\n      this.alertService.error(\"Please provide a reason for why you are cancelling.\");\n      console.error(\"No reason was selected but cancelSubscription called\");\n      return;\n    }\n    let cancelReason = this.cancelReason;\n    if (cancelReason == 'Other') {\n      cancelReason = this.cancelOtherReason.nativeElement.value;\n      if (cancelReason.trim() == \"\") {\n        this.alertService.error(\"Please provide a reason for why you are cancelling.\");\n        return;\n      } else {\n        cancelReason = \"Other: \" + cancelReason;\n      }\n    }\n    else {\n      let chosenReason = this.cancellationReasons.find(cr => cr.id == cancelReason);\n      if (!chosenReason) {\n        this.alertService.error(\"Please provide a reason for why you are cancelling.\");\n        console.error(\"A reason provided, but was not in the cancellation array\");\n        return;\n      }\n      cancelReason = chosenReason.label;\n    }\n\n\n    console.log(\"Cancel reason is: \", cancelReason);\n    this.subService.cancelSubscription(subscription, this.billingDetails, cancelReason)\n    .then((billingDetails) => {\n      this.billingDetails = billingDetails;\n      this.cancelConfirm = false;\n      this.canceling = false;\n    })\n    .catch((error:SystemError) => {\n      console.error(error);\n      this.alertService.error(error.message);\n    });\n  }\n\n  keepSubscription(subscription:Subscription) {\n    this.cancelConfirm = false;\n    this.canceling = false;\n  }\n\n  isCancelChecked(reason:string) {\n    return this.cancelReason == reason;\n  }\n\n  setCancelReason(reason:string) {\n    this.cancelReason = reason;\n  }\n\n  hasCancelReason() {\n    return this.cancelReason !== null;\n  }\n\n  getPlanItems(subscription:Subscription) {\n    return this.subService.getPlanDetailsForSubscription(subscription);\n  }\n\n  get Billing() {\n    return this.billingDetails;\n  }\n\n  get supportEmail() {\n    return this.dacConfig.supportEmail;\n  }\n\n}\n","<div class=\"row\" *ngIf=\"loading\">\n  <div class=\"col\">\n    <div class=\"alert alert-warning\">Loading... <app-spin-icon></app-spin-icon>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"!loading\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"card card-cascade wider col-md-10 col-lg-8 col-12 mb-3 ml-auto mr-auto\" *ngFor=\"let subscription of Billing.subscriptions\">\n        <div class=\"view gradient-card-header secondary-gradient\">\n          <h4>{{subscription.plan?.name}}</h4>\n        </div>\n\n        <div class=\"card-body text-center light-text\" *ngIf=\"canceling\">\n          <div *ngIf=\"cancelConfirm\">\n            <h4>\n              We're sorry to see you go!\n            </h4>\n            <div>\n              <h5>I am cancelling because...</h5>\n              <ul class=\"text-left list-group\">\n                <li class=\"list-group-item\" *ngFor=\"let reason of cancellationReasons\">\n                  <input type=\"radio\" value=\"reason.id\" class=\"form-control\" (click)=\"setCancelReason(reason.id)\" [checked]=\"isCancelChecked(reason.id)\">\n                  <label for=\"reason.id\" class=\"form-check-label\" (click)=\"setCancelReason(reason.id)\">{{reason.label}}</label>\n                </li>\n                <li class=\"list-group-item\">\n                  <input type=\"radio\" id=\"cancel-other\" class=\"form-control\" [checked]=\"isCancelChecked('Other')\" (click)=\"setCancelReason('Other')\">\n                  <label for=\"cancel-other\" (click)=\"setCancelReason('Other')\"><input #cancelOtherReason type=\"text\" placeholder=\"Other....\" class=\"form-control\" /></label>\n                </li>\n              </ul>\n              <p class=\"alert alert-warning\">\n                We want to make you aware that by cancelling your membership subscription, your clients and all other user accounts connected with this subscription will have their access terminated at\n                the end of your billing period.  You will continue to have services and access to your account data until <b>{{subscription.currentPeriodEnd|date:'mediumDate'}}</b>.\n                For more information regarding membership subscription cancellation refer to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a>.\n              </p>\n              <input type=\"button\" value=\"Keep Subscription\" class=\"btn btn-success\" (click)=\"keepSubscription(subscription)\" />\n              <input type=\"button\" value=\"Cancel Subscription\" class=\"btn btn-danger\" (click)=\"cancelSubscription(subscription)\" [disabled]=\"!hasCancelReason()\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-body text-center light-text\" *ngIf=\"!canceling\">\n\n          <h4>{{subscription.getChargeDescription()}}</h4>\n\n          <div class=\"text-left\" *ngIf=\"subscription.status == 'cancel-processing'\">\n            <div class=\"text-center\">\n              <div class=\"pt-2\"><p class=\"alert alert-warning\">You will continue to have access to the service and all of your account data under this membership subscription until <b>{{subscription.currentPeriodEnd|date:'mediumDate'}}</b>.</p></div>\n            </div>\n            <p>Your cancellation request has been submitted and will be processed by our team within the next available business day.\n              Any outstanding account balance will be submitted to the contact information we have on file for you.</p>\n            <p>If this is your only active membership subscription with us your account will be terminated in accordance with our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a></p>\n            <p>For questions about your account cancellation or billing please contact us at {{supportEmail}}.</p>\n            <p>For more information regarding account cancellation refer to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a>.</p>\n          </div>\n\n          <div *ngIf=\"subscription.status == 'active'\">\n            <h6>Your credit card will be charged {{subscription.total|currency}} on\n              {{subscription.renewalDate|date:'mediumDate'}}</h6>\n            <div class=\"text-center\">\n              <div class=\"pt-2\"><p class=\"alert alert-warning\">If you cancel your membership subscription you will have services\n                  until\n                  {{subscription.currentPeriodEnd|date:'mediumDate'}}</p></div>\n            </div>\n            <h5><b>Included in this plan</b></h5>\n            <ul class=\"text-left list-group mb-2\">\n              <li class=\"list-group-item\" *ngFor=\"let planItem of getPlanItems(subscription)\"><i class=\"fa fa-check text-success pr-3\"></i>{{planItem}}</li>\n            </ul>\n            <div class=\"text-center\">\n              <p>If you no longer wish to continue your subscription you may cancel by pressing the button below.</p>\n              <input type=\"button\" class=\"btn btn-danger\" value=\"Cancel Subscription\" (click)=\"startCancellation(subscription)\" />\n            </div>\n            <p>\n              If you have questions about or need help changing your membership subscription please contact us at {{supportEmail}}.\n            </p>\n          </div>\n\n          <!-- trial subscription-->\n          <div class=\"text-center\" *ngIf=\"subscription.status == 'trialing'\">\n            <input type='button' *ngIf=\"!upgrading\" value=\"Upgrade Membership\" class=\"btn btn-success btn-lg\" (click)=\"upgradeTrialSubscription(subscription)\" />\n            <button class=\"btn btn-info btn-lg\" disabled *ngIf=\"upgrading\">Upgrading...</button><app-spin-icon *ngIf=\"upgrading\"></app-spin-icon>\n            <p class=\"alert alert-danger\" *ngIf=\"subscriptionAlertMessage\">\n              We ran into problems upgrading your membership subscription.  This can occur due to a problem with your billing card or in attempting to\n              communicating with our servers. You can resolve this by choosing a valid billing card, contacting\n              your card provider, or trying to upgrade later.  If you continue to have issues contact our support team.  The specific error returned was:<br />\n              <b>{{subscriptionAlertMessage}}</b>\n            </p>\n            <h3>Only <b class=\"text-success\">{{subscription.plan.amountPerUnit|currency}}</b> per\n              {{subscription.plan.getSingularUnitType()|lowercase}} per {{subscription.billingInterval}}</h3>\n            <p class='alert alert-warning'>Your membership trial period\n              will end on <b class=\"text-red\">{{subscription.currentPeriodEnd|date:'mediumDate'}}</b>.</p>\n            <p class=\"text-left\">By upgrading your membership subscription plan you will be asked to provide a valid billing\n              credit card for your account.\n              Upon adding your card, your billing card will be immediately charged by {{stripeChargeName}} for a total of\n              <b>{{subscription.total|currency}}</b> for {{subscription.quantity}} {{subscription.plan.getUnitTypeNameForQuantity(subscription.quantity)}}.\n\n              Your membership subscription will be renewed on each subsequent {{subscription.billingInterval}} until you cancel.\n              You will be able to cancel your subscription at any point in time on this page or by contacting\n              us at our support email.\n\n              For more information refer to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a></p>\n              <h5><b>Included in this plan</b></h5>\n              <ul class=\"text-left list-group mb-2\">\n                <li class=\"list-group-item\" *ngFor=\"let planItem of getPlanItems(subscription)\"><i class=\"fa fa-check text-success pr-3\"></i>{{planItem}}</li>\n              </ul>\n              <div class=\"text-center\">\n                <p>If you no longer wish to continue your free trial you may cancel by pressing the button below.</p>\n                <input type=\"button\" class=\"btn btn-danger\" value=\"Cancel Subscription\" (click)=\"startCancellation(subscription)\" />\n              </div>\n              <p>\n                If you have questions about or need help changing your membership subscription please contact us at {{supportEmail}}.\n              </p>\n          </div>\n\n          <!-- trial-ended subscription-->\n          <div class=\"text-center\" *ngIf=\"subscription.status == 'trial-ended'\">\n            <input type='button' *ngIf=\"!upgrading\" value=\"Upgrade Membership\" class=\"btn btn-success btn-lg\" (click)=\"updatePastDueBillingDetails(subscription)\" />\n            <button class=\"btn btn-info btn-lg\" disabled *ngIf=\"upgrading\">Upgrading...</button><app-spin-icon *ngIf=\"upgrading\"></app-spin-icon>\n            <p class=\"alert alert-danger\" *ngIf=\"subscriptionAlertMessage\">\n              We ran into problems upgrading your membership subscription.  This can occur due to a problem with your billing card or in attempting to\n              communicating with our servers. You can resolve this by choosing a valid billing card, contacting\n              your card provider, or trying to upgrade later.  If you continue to have issues contact our support team.  The specific error returned was:<br />\n              <b>{{subscriptionAlertMessage}}</b>\n            </p>\n            <h3>Only <b class=\"text-success\">{{subscription.plan.amountPerUnit|currency}}</b> per\n              {{subscription.plan.getSingularUnitType()|lowercase}} per {{subscription.billingInterval}}</h3>\n            <p class='alert alert-danger'>\n              Your membership subscription trial period ended on <b class=\"text-red\">{{subscription.currentPeriodEnd|date:'mediumDate'}}</b>.\n              To continue full use of your membership upgrade today.\n            </p>\n            <p class=\"text-left\">By upgrading your membership subscription plan you will be asked to provide a valid billing\n              credit card for your account.\n              Upon adding your card, your billing card will be immediately charged by {{stripeChargeName}} for a total of\n              <b>{{subscription.total|currency}}</b> for {{subscription.quantity}} {{subscription.plan.getUnitTypeNameForQuantity(subscription.quantity)}}.\n\n              Your membership subscription will be renewed on each subsequent {{subscription.billingInterval}} until you cancel.\n              You will be able to cancel your subscription at any point in time on this page or by contacting\n              us at our support email.\n\n              For more information refer to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a></p>\n              <h5><b>Included in this plan</b></h5>\n              <ul class=\"text-left list-group mb-2\">\n                <li class=\"list-group-item\" *ngFor=\"let planItem of getPlanItems(subscription)\"><i class=\"fa fa-check text-success pr-3\"></i>{{planItem}}</li>\n              </ul>\n              <p>\n                If you have questions about or need help changing your membership subscription please contact us at {{supportEmail}}.\n              </p>\n          </div>\n\n          <!-- past-due subscription-->\n          <div class=\"text-center\" *ngIf=\"subscription.isUnpaidSubscription()\">\n            <h6>Past due balance of {{subscription.total|currency}} due on\n              {{subscription.renewalDate|date:'mediumDate'}}</h6>\n            <div class=\"alert alert-danger\">\n              <p>We've made several attempts to charge your billing card on file.  Please update your card to avoid having\n              your membership subscription canceled.  Failure to update your billing card will result in the termination of your account\n              in accordance with our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a>.</p>\n              <div *ngIf=\"subscriptionAlertMessage\">\n                <p *ngIf=\"subscriptionAlertMessage\"><b>Payment Failed</b></p>\n                <hr />\n                <p *ngIf=\"subscriptionAlertMessage\">{{subscriptionAlertMessage}}</p>\n              </div>\n            </div>\n            <input type='button' *ngIf=\"!upgrading\" value=\"Update Billing Card\" class=\"btn btn-success btn-lg\" (click)=\"updatePastDueBillingDetails(subscription)\" />\n            <button class=\"btn btn-info btn-lg\" disabled *ngIf=\"upgrading\">Processing...</button><app-spin-icon *ngIf=\"upgrading\"></app-spin-icon>\n            <p>Updating your billing card will charge your account for the past due balance of <b>{{subscription.total|currency}}</b>\n              for {{subscription.quantity}} {{subscription.plan.getUnitTypeNameForQuantity(subscription.quantity)}}.</p>\n\n              <!-- TODO: stephen If after 15-20 seconds we couldn't get a status update that the subscription had become active\n                   We need to display a message that the system is processing the card and to check back in 1-2 hours\n                   to verify their payment credentials were valid.\n              -->\n            <h5><b>Included in this plan</b></h5>\n            <ul class=\"text-left list-group mb-2\">\n              <li class=\"list-group-item\" *ngFor=\"let planItem of getPlanItems(subscription)\"><i class=\"fa fa-check text-success pr-3\"></i>{{planItem}}</li>\n            </ul>\n            <p>\n              If you have questions about or need help changing your membership subscription plan please contact us at {{supportEmail}}.\n            </p>\n          </div>\n          <!-- Terminated-->\n          <div class=\"text-center\" *ngIf=\"subscription.isEndedSubscription()\">\n            <p class=\"alert alert-warning\">Your membership subscription was terminated on {{subscription.endedAt|date:'mediumDate'}}.\n              Contact {{supportEmail}} to discuss options for renewing your membership subscription. Your account access and client data will no longer be available after\n              <b>{{subscription.currentPeriodEnd|date:'mediumDate'}}</b>.\n              For more information refer to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a>\n            </p>\n            <h5><b>What was included in this plan</b></h5>\n            <ul class=\"text-left list-group mb-2\">\n              <li class=\"list-group-item\" *ngFor=\"let planItem of getPlanItems(subscription)\"><i class=\"fa fa-check text-success pr-3\"></i>{{planItem}}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Old customers with no subscription option-->\n    <div class=\"row pl-4 pt-4\" *ngIf=\"!Billing.hasSubscriptions()\">\n      <div class=\"col\">\n        <p>If you are interested in a monthly unlimited membership subscription plan.  Contact {{supportEmail}} to have your account migrated to a\n          subscription plan!\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nexport class SaveMessages {\n\tprivate _saveSuccess : boolean;\n\tprivate _saveFailed: boolean;\n\tprivate _deleteSuccess: boolean;\n\tprivate _deleteFailed: boolean;\n\n\tconstructor() {\n\t\tthis.reset();\n\t}\n\n\tpublic reset() : void {\n\t\tthis.saveFailed = false;\n\t\tthis.saveSuccess = false;\n\t\tthis._deleteSuccess = false;\n\t\tthis._deleteFailed = false;\n\t}\n\n\tpublic get deleteSuccess() : boolean {\n\t\treturn this._deleteSuccess;\n\t}\n\n\tpublic set deleteSuccess(v : boolean) {\n\t\tthis._deleteSuccess = v;\n\t}\n\n\tpublic get deleteFailed() : boolean {\n\t\treturn this._deleteFailed;\n\t}\n\n\tpublic set deleteFailed(v : boolean) {\n\t\tthis._deleteFailed = v;\n\t}\n\n\n\tpublic get saveSuccess() : boolean {\n\t\treturn this._saveSuccess;\n\t}\n\n\tpublic set saveSuccess(v : boolean) {\n\t\tthis._saveSuccess = v;\n\t}\n\n\tpublic get saveFailed() : boolean {\n\t\treturn this._saveFailed;\n\t}\n\n\tpublic set saveFailed(v : boolean) {\n\t\tthis._saveFailed = v;\n\t}\n\n\n}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport {Assessment} from \"../../shared/models/assessment\";\nimport {Scale} from \"../../shared/models/scale\";\nimport {AssessmentService} from \"../../shared/services/assessment.service\";\n\n@Component({\n  selector: 'app-scale-new',\n  templateUrl: './scale-new.component.html',\n  styleUrls: ['./scale-new.component.css']\n})\nexport class ScaleNewComponent implements OnInit {\n\n  private _scale:Scale;\n  private _assessment:Assessment;\n\n  constructor(private _assessmentService:AssessmentService\n    ,private alertService:AlertService\n   ,private route:ActivatedRoute\n    ,private router:Router) {\n    this._scale = new Scale();\n    this._scale.name = \"Untitled\";\n    this._scale.id = this._assessmentService.newId();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let assessmentUid = params['uid'];\n      this._assessmentService.getAssessment(assessmentUid)\n        .then((assessment:Assessment) => {\n          this._assessment = assessment;\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    });\n  }\n\n  get scale() {\n    return this._scale;\n  }\n\n  set scale(v:Scale) {\n    this._scale = v;\n  }\n\n  save() {\n    this._assessment.addScale(this.scale);\n\n\t\tthis._assessmentService.saveAssessment(this._assessment).then(() => {\n      this.alertService.success(\"Scale Saved!\");\n      setTimeout(() => {\n        this.router.navigate([\"../\", this.scale.id, \"edit\"], {relativeTo: this.route, replaceUrl: true});\n      }, 1500);\n    }).catch((error) => {\n      this.alertService.error(\"Error occurred in saving. Please try again.\");\n      console.error(error);\n\t\t});\n\t}\n\n\tsaveAndCreateNew() {\n    this._assessment.addScale(this.scale);\n\n\t\tthis._assessmentService.saveAssessment(this._assessment).then((assessment) => {\n        this.alertService.success(\"Scale Saved!\");\n\t\t\t\tthis.scale =  new Scale();\n\t\t\t\tthis.scale.id = this._assessmentService.newId();\n    })\n    .catch((error) => {\n      console.log(error);\n      this.alertService.error(\"Error occurred in saving. Please try again.\");\n\t\t});\n\t}\n\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <app-back-button></app-back-button>\n  </div>\n  <div class=\"col\">\n    <h2 class=\"h2-responsive text-center\">New Scale</h2>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card card-cascade narrower\">\n        <div class=\"view gradient-card-header primary-gradient text-light\">\n            <h3 class='h3-responsive text-center'>{{scale.name}}</h3>\n        </div>\n        <div class=\"card-body\">\n        <form>\n          <div class=\"form-group\">\n            <label for=\"name\">Name:</label>\n            <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"scale.name\" />\n          </div>\n          <div class=\"form-group\">\n              <label for=\"name\">Client Description:</label>\n              <input class=\"form-control\" type=\"text\" id=\"descriptionClient\" name=\"descriptionClient\" [(ngModel)]=\"scale.descriptionClient\" />\n          </div>\n          <div class=\"form-group\">\n              <label for=\"name\">Therapist Description:</label>\n              <input class=\"form-control\" type=\"text\" id=\"descriptionTherapist\" name=\"descriptionTherapist\" [(ngModel)]=\"scale.descriptionTherapist\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"multiplier\">Multiplier:</label>\n            <input class=\"form-control\" type=\"number\" id=\"multiplier\" name=\"multiplier\" [(ngModel)]=\"scale.multiplier\" />\n          </div>\n          <div class=\"form-group\">\n            <input class=\"form-control\" type=\"checkbox\" id=\"negToPositive\" name=\"negToPositive\" [(ngModel)]=\"scale.negativeToPositiveRanges\" />\n            <label for=\"negToPositive\">Negative to Positive Ranges:</label>\n          </div>\n          <!--<div class=\"form-group\">\n            <label for=\"displayOrder\">Display Order:</label>\n            <input class=\"form-control\" type=\"number\" id=\"displayOrder\" [(ngModel)]=\"scale.display_order\" />\n          </div>-->\n        </form>\n        <input type=\"button\" (click)=\"save()\" class=\"btn btn-primary\" value=\"Save\" />\n        <input type=\"button\" (click)=\"saveAndCreateNew()\" class=\"btn btn-primary\" value=\"Save and Create New\" />\n      </div>\n    </div>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assessment-admin',\n  templateUrl: './assessment-admin.component.html',\n  styleUrls: ['./assessment-admin.component.css']\n})\nexport class AssessmentAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ManagedClient } from '../../shared/models/managed-client';\nimport { Assignment } from '../../shared/models/Assignment';\nimport { AssessmentGroup } from 'app/shared/models/assessment-group';\nimport { ClientService } from '../../shared/services/client.service';\nimport { Assessment } from \"../../shared/models/assessment\";\nimport { Location } from \"@angular/common\";\nimport { DacConfig } from \"../../shared/services/dac-config.service\";\nimport { AssessmentTokenService } from \"../../shared/services/assessment-token.service\";\nimport { ReportService } from \"../../reports/services/report.service\";\nimport { AlertService } from 'app/shared/services/alert.service';\nimport { ShoppingService } from 'app/shared/services/shopping.service';\nimport { AssessmentAssignerService } from '../services/assessment-assigner.service';\nimport { AssignmentService } from 'app/shared/services/assignment.service';\nimport { LibraryAsset } from 'app/library-assets/models/library-asset';\nimport { AssignmentSingle } from 'app/shared/models/AssignmentSingle';\nimport { AssignedLibraryAsset } from 'app/shared/models/AssignedLibraryAsset';\nimport { QuestionnaireService } from 'app/shared/services/questionnaire.service';\nimport { AssignedQuestionnaire } from 'app/shared/models/AssignedQuestionnaire';\n\n@Component({\n  selector: 'dac-client-manage-assignments',\n  templateUrl: './client-manage-assignments.component.html',\n  styleUrls: ['./client-manage-assignments.component.scss']\n})\nexport class ClientManageAssignmentsComponent implements OnInit, OnChanges {\n\n  @Input() client:ManagedClient;\n\n  @Input() appointment:string;\n\n  public isSaving:boolean;\n\n  private clientAssignments:Assignment[];\n\n  constructor(private _clientService: ClientService,\n    private alertService: AlertService,\n    private assessmentTokenService:AssessmentTokenService,\n    private shoppingService:ShoppingService,\n    private assessmentAssignerService:AssessmentAssignerService,\n    private assignmentService:AssignmentService\n    ) {\n      this.isSaving = false;\n    }\n\n  ngOnInit() {\n    this.updateClientAssignments();\n  }\n  ngOnChanges() {\n    this.updateClientAssignments();\n  }\n\n  private updateClientAssignments() {\n    if (this.client && this.appointment) {\n      this.clientAssignments = this.client.assignments.filter(a => a.AppointmentId == this.appointment);\n    } else if (this.client) {\n      this.clientAssignments = this.client.assignments;\n    }\n  }\n\n  public get assignments(): Assignment[] {\n    return this.clientAssignments;\n  }\n\n  public async addAssessmentsFromBattery(group:AssessmentGroup) {\n    try {\n      // should we show the name of the client in the alerts?\n      this.isSaving = true;\n      this.alertService.info(\"Adding \" + group.Name + \" to \" + this.client.getDisplayString(), 120000);\n      let assignment = await this.assessmentAssignerService.addAssessmentsFromBattery(this.client, group, this.appointment);\n      this.updateClientAssignments();\n      this.alertService.success(\"Added \" + assignment.Name + \" to \" + this.client.getDisplayString());\n    }\n    catch (error)\n    {\n      this.alertService.error(\"Failed to add assignment. Detailed error: \" + (error.message || \" no detailed error\"), 20000);\n      console.error(error);\n    }\n    finally {\n      this.isSaving = false;\n    }\n  }\n\n  public async addQuestionnaire(questionaire: any) {\n    try {\n      this.isSaving = true;\n      let assignment = new AssignmentSingle();\n      assignment.Name = questionaire.title;\n      assignment.Type = \"Questionnaire\";\n      assignment.DateAssigned = new Date();\n      assignment.AppointmentId = this.appointment;\n      let assignmentItem = new AssignedQuestionnaire();\n      assignmentItem.Name = questionaire.title;\n      assignmentItem.QuestionnaireId = questionaire.id;\n      assignment.Items.push(assignmentItem);\n\n    let alertId = this.alertService.info(\"Adding \" + assignment.Name + \" to \" +this.client.getDisplayString(), 120000);\n    this.assignmentService.saveClientAssignment(this.client, assignment)\n      .then((assignment:Assignment) => {\n        this.isSaving = false;\n        this.client.assignments.push(assignment);\n        this.updateClientAssignments();\n        this._clientService.syncLocalClient(this.client);\n        this.alertService.clearAlert(alertId);\n        this.alertService.success(\"Added \" + assignment.Name + \" to \" + this.client.getDisplayString());\n      })\n      .catch((error) => {\n        this.isSaving = false;\n        this.alertService.clearAlert(alertId);\n        this.alertService.error(\"There was an error in adding this item to the client.  Please try again or contact customer support\");\n        console.error(error);\n      });\n      this.alertService.success(\"Added \" + questionaire.title + \" to \" + this.client.getDisplayString());\n  }\n  catch (error)\n  {\n    this.alertService.error(\"Failed to add assignment. Detailed error: \" + (error.message || \" no detailed error\"), 20000);\n    console.error(error);\n  }\n  finally {\n    this.isSaving = false;\n  }\n  }\n\n  public async addAssessment(assessment: Assessment) {\n    try {\n        this.isSaving = true;\n        this.assessmentAssignerService.addAssessment(this.client, assessment, this.appointment)\n        .then(() => {\n          this.updateClientAssignments();\n        });\n    }\n    catch (error)\n    {\n      this.alertService.error(\"Failed to add assignment. Detailed error: \" + (error.message || \" no detailed error\"), 20000);\n      console.error(error);\n    }\n    finally {\n      this.isSaving = false;\n    }\n  }\n\n  public clearAssignment(assignment: Assignment) {\n    this.isSaving = true;\n    try {\n      this.alertService.info(\"Removing assignment...\");\n      this.assignmentService.removeClientAssignment(this.client, assignment).then(() => {\n        this.client.removeAssignment(assignment);\n        this._clientService.syncLocalClient(this.client);\n        this.updateClientAssignments();\n        this.alertService.success(\"Assignment removed\");\n      })\n      .catch((error) => {\n        console.error(error);\n        this.alertService.error(\"Failed to remove assignment\", 1500);\n      });\n    }\n    catch (error) {\n      console.error(error);\n          this.alertService.error(\"Failed to remove assignment\", 1500);\n    }\n    finally {\n      this.isSaving = false;\n    }\n  }\n\n  public addAssetAssignment(asset:LibraryAsset) {\n\n    if (!asset) {\n      console.error(\"asset was null.  Cannot add\");\n      return;\n    }\n    this.isSaving = true;\n\n    let assignment = new AssignmentSingle();\n    assignment.Type = \"LibraryAsset\";\n    assignment.DateAssigned = new Date();\n    assignment.AppointmentId = this.appointment;\n    let assignmentItem = new AssignedLibraryAsset();\n    assignmentItem.Name = asset.title;\n    assignmentItem.Type = \"LibraryAsset\";\n    assignmentItem.AssetId = asset.id;\n    assignment.Items.push(assignmentItem);\n\n    let alertId = this.alertService.info(\"Adding \" + assignment.Name + \" to \" +this.client.getDisplayString(), 120000);\n    this.assignmentService.saveClientAssignment(this.client, assignment)\n      .then((assignment:Assignment) => {\n        this.isSaving = false;\n        this.client.assignments.push(assignment);\n        this.updateClientAssignments();\n        this._clientService.syncLocalClient(this.client);\n        this.alertService.clearAlert(alertId);\n        this.alertService.success(\"Added \" + assignment.Name + \" to \" + this.client.getDisplayString());\n      })\n      .catch((error) => {\n        this.isSaving = false;\n        this.alertService.clearAlert(alertId);\n        this.alertService.error(\"There was an error in adding this item to the client.  Please try again or contact customer support\");\n        console.error(error);\n      });\n\n  }\n\n  handleBatteryCheckout(group:AssessmentGroup) {\n    let checkoutSubscription = null;\n    let tokenService = this.assessmentTokenService;\n\n    checkoutSubscription = this.shoppingService.getCheckoutStatus().subscribe((status) => {\n      if (checkoutSubscription && (status == \"ORDER_COMPLETE\" || status == \"ORDER_CANCELLED\")) {\n        checkoutSubscription.unsubscribe();\n      }\n\n      if (status == \"ORDER_COMPLETE\") {\n        // we will refresh this when we the user's get back to the screen, but we need to add it at the time of purchase\n        tokenService.addTokensForGroup(group, 1);\n        this.addAssessmentsFromBattery(group);\n      }\n    });\n  }\n\n  handleAssessmentCheckout(assessment:Assessment  ) {\n    let checkoutSubscription = null;\n    let assignerService = this.assessmentAssignerService;\n    let tokenService = this.assessmentTokenService;\n    let client = this.client;\n\n    checkoutSubscription = this.shoppingService.getCheckoutStatus().subscribe((status) => {\n      if (checkoutSubscription && (status == \"ORDER_COMPLETE\" || status == \"ORDER_CANCELLED\")) {\n        checkoutSubscription.unsubscribe();\n      }\n\n      if (status == \"ORDER_COMPLETE\") {\n        // we will refresh this when we the user's get back to the screen, but we need to add it at the time of purchase\n        tokenService.addTokens(assessment, 1);\n        this.addAssessment(assessment);\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <h2 class=\"h2-responsive\">Assignments</h2>\n    <hr class=\"mb-3\" />\n    <div *ngIf=\"assignments.length == 0\">\n      <div class=\"alert alert-warning\">No assignments have been made.</div>\n      <div class=\"alert alert-info\">\n        <p>Assign an assessment, battery of assessments, or a homework assignment by clicking on the item under one of the menu options of Available Batteries, Available Assessments, or Homework. </p>\n      </div>\n    </div>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item flex-column align-items-start\" *ngFor=\"let assignment of assignments\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <div class=\"col-12 ml-2\">\n            <button class=\"btn btn-primary btn-sm float-right\" *ngIf=\"!assignment.hasStarted\"\n              (click)=\"clearAssignment(assignment)\">\n              <i class='fa fa-trash'></i>\n            </button>\n            <h5 class=\"mb-3 d-inline\">\n              <i class=\"fa fa-file-text\" *ngIf=\"assignment.type == 'LibraryAsset'\"></i>\n              <i class=\"fa fa-clipboard\" *ngIf=\"assignment.type == 'Assessment'\"></i>\n              <i class=\"fa fa-clipboard\" *ngIf=\"assignment.type == 'Questionnaire'\"></i>\n              <i class=\"fa fa-clipboard\" *ngIf=\"assignment.type == 'ExternalQuestionnaire'\"></i>\n              <i class=\"fa fa-folder\" *ngIf=\"assignment.isGroup\"></i>\n          </h5>\n      {{assignment.Name}}\n      <div *ngIf=\"assignment.isGroup\" class=\"mt-2\">\n              <ul class=\"list-unstyled ml-4\">\n                  <li *ngFor=\"let item of assignment.items\">\n                      <h5 class=\"mb-3 d-inline\"><i class=\"fa fa-clipboard\"></i></h5>\n                          {{item.Name}}\n                  </li>\n                  <li><hr /></li>\n              </ul>\n      </div>\n      <ul class=\"list-unstyled ml-4\">\n          <li><b>Assigned:</b> {{assignment.DateAssigned|date: 'medium'}}</li>\n          <li *ngIf=\"assignment.IsComplete\"><b>Completed:</b> {{assignment.DateCompleted|date: 'medium'}}</li>\n      </ul>\n          </div>\n        </div>\n\n      </li>\n    </ul>\n  </div>\n  <div class=\"col\">\n    <dac-tabs headerColor=\"secondary\" class=\"col-12\">\n      <dac-tab heading=\"Available Groups\">\n        <dac-assessment-group-list (buy)=\"handleBatteryCheckout($event)\" (selected)=\"addAssessmentsFromBattery($event)\">\n        </dac-assessment-group-list>\n      </dac-tab>\n      <dac-tab heading=\"Available Assessments\">\n        <dac-assessment-picker (buy)=\"handleAssessmentCheckout($event)\" (selected)=\"addAssessment($event)\"\n        (questionnaireSelected)=\"addQuestionnaire($event)\"\n        >\n        </dac-assessment-picker>\n      </dac-tab>\n      <dac-tab heading=\"Homework\">\n        <dac-asset-picker (selected)=\"addAssetAssignment($event)\"></dac-asset-picker>\n    </dac-tab>\n    </dac-tabs>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { SubscriptionService } from '../services/subscription.service';\nimport { SubscriptionStatus } from '../../shared/models/subscription-status';\n\n@Component({\n  selector: 'dac-user-upgrade-subscription-notice',\n  templateUrl: './user-upgrade-subscription-notice.component.html',\n  styleUrls: ['./user-upgrade-subscription-notice.component.scss']\n})\nexport class UserUpgradeSubscriptionNoticeComponent implements OnInit {\n\n  public subscriptionSignupRoute:string[];\n  public hasActiveSubscription:boolean;\n  public terminationDate:Date;\n  public trialPeriodEnded:boolean;\n\n  constructor(private subscriptionService:SubscriptionService) { }\n\n  ngOnInit() {\n    this.subscriptionSignupRoute = this.subscriptionService.getSubscriptionPageRoute();\n    // TODO: stephen need to get the subscription plan amount, and the termination date\n    // account balance,\n    this.subscriptionService.getCurrentUserSubscription().then(subscription => {\n      this.hasActiveSubscription = subscription.isActiveSubscription();\n      this.terminationDate = subscription.endedAt;\n      this.trialPeriodEnded = subscription.status == SubscriptionStatus.TRIAL_PERIOD_ENDED;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col text-center\">\n    <div class=\"card\" *ngIf=\"trialPeriodEnded\">\n      <div class=\"view gradient-card-header success-gradient text-light\">\n        <h3 class='h3-responsive text-center text-truncate'>Account Limited - Active Your Subscription Today!</h3>\n      </div>\n      <div class=\"card-body\">\n        <p>Your free subscription trial has now ended and some site functionality has been restricted on your account.\n          Add your credit card and upgrade your account to continue services.</p>\n        <a [routerLink]=\"subscriptionSignupRoute\" class=\"btn btn-link btn-primary\">Signup for a Subscription Today!</a>\n\n        <p>The billing card on file for your company is no longer valid and we've been unable to collect payment for your subscription.</p>\n        <p>Update your billing card and re-activate your account today!</p>\n        <div class=\"alert alert-info\">\n          <h6>Notice</h6>\n          <hr />\n          If you do not activate your account by {{terminationDate| date : 'longDate'}} your account\n          and patient information will be removed from our system according to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a>.\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngIf=\"!trialPeriodEnded\">\n      <div class=\"view gradient-card-header success-gradient text-light\">\n        <h3 class='h3-responsive text-center text-truncate'>Account Limited - Active Your Subscription Today!</h3>\n      </div>\n      <div class=\"card-body\">\n        <p>This functionality is disabled due to restrictions placed upon your account.  To remove these restrictions you must\n          update your billing information with a valid billing\n          card or reactivate your monthly subscription.</p>\n        <a [routerLink]=\"['/admin/my-account/billing']\" class=\"btn btn-link btn-primary\">Manage Billing Information</a>\n        <div class=\"alert alert-info\">\n          <h6>Notice</h6>\n          <hr />\n          If you do not activate your account by {{terminationDate| date : 'longDate'}} your account\n          and patient information will be removed from our system according to our <a [routerLink]=\"['/terms-and-conditions']\">Terms and Conditions</a>.\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { AssessmentGroup } from '../../shared/models/assessment-group';\nimport { Assessment } from '../../shared/models/assessment';\nimport { AssessmentGroupService } from '../../shared/services/assessment-group.service';\nimport { AssessmentTokenService } from '../../shared/services/assessment-token.service';\nimport { AlertService } from '../../shared/services/alert.service';\n\nclass AssessmentGroupDisplay extends AssessmentGroup {\n  Show:boolean;\n  ShowAdd:boolean;\n  constructor() {\n    super();\n    this.ShowAdd = false;\n    this.Show = false;\n  }\n}\n@Component({\n  selector: 'app-assessment-group-edit',\n  templateUrl: './assessment-group-edit.component.html',\n  styleUrls: ['./assessment-group-edit.component.css']\n})\nexport class AssessmentGroupEditComponent implements OnInit {\n\n  public NewGroupName:string;\n  public showGroups:boolean;\n\n  private groups:AssessmentGroupDisplay[];\n\n  private assessments:Assessment[];\n  private showAdd:boolean = false;\n  public hasLoaded:boolean;\n\n  constructor(\n    private assessmentGroupService:AssessmentGroupService\n    ,private assessmentTokenService:AssessmentTokenService\n    ,private alertService:AlertService\n  ) {\n    this.groups = [];\n    this.showGroups = false;\n  }\n\n  ngOnInit() {\n    this.loadGroups();\n  }\n\n  loadGroups() {\n    this.hasLoaded = false;\n    let showAllGroups = this.showGroups;\n    Promise.all([this.assessmentTokenService.loadAssessmentTokens(), this.assessmentGroupService.getAssessmentGroups(showAllGroups)])\n    .then((results) => {\n      this.hasLoaded = true;\n      let groups:AssessmentGroup[] = results[1];\n      // add a display property so we can expand/contract it.\n      this.groups = groups.map((g) => {\n        let displayGroup = new AssessmentGroupDisplay();\n        Object.assign(displayGroup, g);\n        displayGroup.Show = false;\n        return displayGroup;\n      })\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.error(\"Check your internet connection.  Failed to load data\");\n    });\n  }\n\n  reloadGroups(event:Event) {\n    this.showGroups = !this.showGroups;\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.loadGroups();\n  }\n\n  getTokensRemaining(group:AssessmentGroupDisplay) {\n    if (!group) {\n      return 0;\n    }\n\n    return this.assessmentTokenService.getGroupRemainingTokens(group);\n  }\n\n  toggleGroup(group:AssessmentGroupDisplay) {\n    group.Show = !group.Show;\n    console.log(group, group.Show);\n  }\n\n  updateAssessmentVersions(group:AssessmentGroupDisplay , event:Event) {\n    event.stopImmediatePropagation();\n    let info = this.alertService.info(\"Updating assessment versions\", 30000);\n    this.assessmentGroupService.updateAssessmentsForGroup(group)\n    .then(updatedGroup => {\n      this.alertService.clearAlert(info);\n      let index = this.groups.findIndex(g => g == group);\n      let displayGroup = new AssessmentGroupDisplay();\n      Object.assign(displayGroup, updatedGroup);\n      displayGroup.Show = group.Show;\n      this.groups[index] = displayGroup;\n      this.alertService.success(\"Assessment versions updated\");\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.clearAlert(info);\n      this.alertService.error(\"There was an error in updating the assessments for this group.  Check the server logs\");\n    });\n  }\n\n  addAssessmentToGroup(group:AssessmentGroup, assessment:Assessment) {\n    let dup = group.Assessments.find((a) => {return a.uid == assessment.uid });\n    if (dup) {\n      alert(\"This assessment already has been added.\");\n      return;\n    }\n\n    group.Assessments.push(assessment);\n    this.assessmentGroupService.addAssessmentToGroup(group, assessment).then((assessment:Assessment) => {\n      assessment.version = assessment.version;\n      assessment.id = assessment.id;\n    })\n    .catch((error) => {\n      console.error(error);\n      // TODO: stephen need to display an error here...\n      // remove it\n      let index = group.Assessments.indexOf(assessment);\n      if (index >= 0) {\n        group.Assessments.splice(index, 1);\n      }\n    });\n  }\n\n  addGroupFromKeypress(event) {\n    // enter key is 13\n    if (!event || event.charCode !== 13) {\n      return;\n    }\n    this.addGroup();\n  }\n\n  addGroup() {\n    this.assessmentGroupService.createNewGroup(this.NewGroupName).then((group:AssessmentGroup) => {\n      let display = new AssessmentGroupDisplay();\n      Object.assign(display, group);\n\n      // hide all the others, and show the one we just added.\n      this.groups.forEach((g) => g.Show = false);\n      display.Show = true;\n      display.ShowAdd = true;\n      this.NewGroupName = \"\";\n\n      this.groups.push(display);\n    });\n  }\n\n  public get Groups() {\n    return this.groups;\n  }\n\n  public toggleShowAdd(group:AssessmentGroupDisplay, event:Event) {\n    event.stopImmediatePropagation();\n    group.ShowAdd = !group.ShowAdd;\n  }\n}\n","<div class=\"col-12 group-edit\" *ngIf=\"!hasLoaded\">\n  <h1 class=\"h1-responsive\">Assessment Batteries</h1>\n</div>\n<div class=\"col-12 group-edit\" *ngIf=\"hasLoaded\">\n    <h1 class=\"h1-responsive\">Assessment Batteries</h1>\n    <div class=\"row\" *hasPermission=\"'SuperUser'\">\n      <div class=\"col\">\n        <input class=\"form-control\" id=\"showGroups\" type=\"checkbox\"\n        (click)=\"reloadGroups($event)\" [checked]=\"showGroups\" name=\"showGroups\" />\n        <label for=\"showGroups\"  (click)=\"reloadGroups($event)\">\n          Show all Batteries</label>\n      </div>\n    </div>\n    <div>\n        <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"NewGroupName\" *hasPermission=\"'SuperUser'\"\n                (keypress)=\"addGroupFromKeypress($event)\"\n                placeholder=\"Enter a name for the battery...\">\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-default btn-primary\" type=\"button\" (click)=\"addGroup()\" *hasPermission=\"'SuperUser'\">Add</button>\n            </span>\n        </div><!-- /input-group -->\n    </div>\n<p *ngIf=\"Groups.length < 1\">There are no batteries created.  Add a assessment battery here...</p>\n<ul class=\"list-group\">\n  <li class=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\" *ngFor=\"let group of Groups\"\n  (click)=\"toggleGroup(group)\"\n  >\n    <div>\n      {{group.name}}\n      <span *ngIf=\"!group.Show\" class=\"fa fa-chevron-down\"\n        aria-hidden=\"true\"></span>\n      <span *ngIf=\"group.Show\" class=\"fa fa-chevron-up\"\n        aria-hidden=\"true\"></span>\n      <div *ngIf=\"group.Show\">\n        <ul>\n          <li *ngFor=\"let assessment of group.Assessments\">{{assessment.name}}</li>\n        </ul>\n        <div *hasPermission=\"'SuperUser'\">\n          <input *ngIf=\"!group.ShowAdd\" class=\"btn btn-primary\" type=\"button\" type=\"button\" (click)=\"toggleShowAdd(group, $event)\" value=\"Add Assessment\">\n              <input *ngIf=\"group.ShowAdd\" class=\"btn btn-primary\" type=\"button\" type=\"button\" (click)=\"toggleShowAdd(group, $event)\" value=\"Close Add Screen\">\n          <dac-assessment-picker *ngIf=\"group.ShowAdd\" (selected)=\"addAssessmentToGroup(group, $event)\"></dac-assessment-picker>\n        </div>\n        <div *hasPermission=\"'SuperUser'\">\n          <input class=\"btn btn-primary\" type=\"button\" (click)=\"updateAssessmentVersions(group, $event)\" value=\"Update Assessment Versions\" />\n        </div>\n      </div>\n    </div>\n    <span class=\"badge badge-primary badge-pill\">{{getTokensRemaining(group)}}</span>\n  </li>\n</ul>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport {AssessmentTokenService} from '../../shared/services/assessment-token.service';\nimport {Role} from '../../shared/models/role';\nimport {AlertService} from '../../shared/services/alert.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Assessment } from '../../shared/models/assessment';\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport {DacConfig} from \"../../shared/services/dac-config.service\";\nimport { AuthService } from 'app/login/services/auth.service';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\n\n@Component({\n  selector: 'app-assessment-list',\n  templateUrl: './assessment-list.component.html',\n  styleUrls: ['./assessment-list.component.css']\n})\nexport class AssessmentListComponent implements OnInit,OnDestroy {\n\n  private _assessments:Assessment[]\n  private _userRole:Role;\n  private _userSubscription:ISubscription;\n  public hasLoadedAssessments:boolean;\n\n  constructor(\n    private _assessmentService:AssessmentService\n    ,private alertService:AlertService\n    ,private dacConfig:DacConfig\n    ,private authService:AuthService\n    ,private assessmentTokenService:AssessmentTokenService\n  ) {\n    this._assessments = [];\n    this.hasLoadedAssessments = false;\n    this._userRole = Role.UnAuthenticated;\n    this._userSubscription = this.authService.getLoginState().subscribe(loginState => {\n      if (loginState.user) {\n        this._userRole = loginState.user.role;\n      }\n      else {\n        this._userRole = Role.UnAuthenticated;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._userSubscription.unsubscribe();\n  }\n\n  get Assessments() {\n    return this._assessments;\n  }\n\n  get canManageAssessments() {\n    return this.dacConfig.isFeatureEnabled(\"assessments.manage\");\n  }\n\n  public canEdit(assessment:Assessment) {\n\n    if (this._userRole == Role.SuperUser) {\n      return true;\n    }\n    else if (this._userRole == Role.Admin) {\n      return !assessment.isPublic;\n    }\n\n    return false;\n  }\n\n  public getTokens(assessment:Assessment) {\n    return this.assessmentTokenService.getRemainingTokens(assessment);\n  }\n\n  public get tokensEnabled() {\n    return this.assessmentTokenService.isTokensEnabled();\n  }\n\n  ngOnInit() {\n\n    Promise.all(\n      [\n        this._assessmentService.getAssessmentList()\n        ,this.assessmentTokenService.loadAssessmentTokens()\n      ]\n    )\n    .then((results) => {\n      let [assessmentList,] = results;\n      this._assessments = assessmentList;\n      this.hasLoadedAssessments = true;\n    })\n    .catch((error) => {\n      this.alertService.error(\"Failed to load assessments from server\");\n      console.error(error);\n      this.hasLoadedAssessments = true;\n    });\n  }\n\n}\n","<div class=\"row\" *ngIf=\"!hasLoadedAssessments\">\n  <div class=\"col-12\">\n    <p class=\"alert alert-warning\"><app-spin-icon></app-spin-icon> Loading Assessments...</p>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"hasLoadedAssessments\">\n\t<div *ngIf=\"canManageAssessments\" class=\"col\">\n\t<h1 class=\"h1-responsive\">\n\t\tAssessments <a class=\"btn btn-primary\" *hasPermission=\"'SuperUser'\" [routerLink]=\"['new']\">Add New Assessment</a>\n\t</h1>\n\t<p *ngIf=\"Assessments.length == 0\">Assessment list is empty</p>\n\t<table class='table table-striped'>\n\t\t<thead class=\"primary-color text-white\">\n\t\t\t<tr>\n\t\t\t\t<th>Assessment</th>\n\t\t\t\t<th>Description</th>\n\t\t\t\t<th *ngIf=\"tokensEnabled\">Tokens</th>\n\t\t\t\t<th>Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr *ngFor=\"let assessment of Assessments\">\n\t\t\t\t<td class=''>{{assessment.name}}</td>\n\t\t\t\t<td class='w-50' [innerHTML]='assessment.description'></td>\n\t\t\t\t<td class='' *ngIf=\"tokensEnabled\">{{getTokens(assessment)}}</td>\n\t\t\t\t<td class='w-25'>\n\t\t\t\t\t<button *ngIf=\"canEdit(assessment)\" aria-label=\"Edit\" class=\"btn btn-primary btn-sm\" type=\"button\" tabindex=\"0\" [routerLink]=\"[assessment.uid,'edit']\">\n\t\t\t\t\t\t<span aria-hidden=\"true\" class=\"fa fa-edit\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button aria-label=\"View\" class=\"btn btn-primary btn-sm\" type=\"button\" tabindex=\"0\" [routerLink]=\"[assessment.uid,'view']\">\n\t\t\t\t\t\t<span aria-hidden=\"true\" class=\"fa fa-eye\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<!-- We can add this back in when we want to have one item purchasing setup here.\n\t\t\t\t\t\t<button aria-label=\"Shop\" class=\"btn btn-default\" type=\"button\" tabindex=\"0\" [routerLink]=\"['/admin/shop/checkout']\" [queryParams]=\"{uid: assessment.uid}\">\n\t\t\t\t\t\t\t<span aria-hidden=\"true\" class=\"glyphicon glyphicon-shopping-cart\"></span>\n\t\t\t\t\t</button> -->\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {ShoppingService} from \"../../shared/services/shopping.service\";\n\n@Component({\n  selector: 'cart-widget',\n  templateUrl: './cart-widget.component.html',\n  styleUrls: ['./cart-widget.component.css']\n})\nexport class CartWidgetComponent implements OnInit {\n\n  constructor(\n    private shopping:ShoppingService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  get total() {\n    if (this.shopping.hasItems) {\n      return this.shopping.cartTotal;\n    }\n    return 0;\n  }\n}\n","<div class='cart-widget'>\n  <span class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></span> ${{total|number:'1.2-2'}}\n  <input type=\"button\" class=\"btn btn-primary\" value=\"View Cart\" [routerLink]=\"['/admin', 'shop', 'checkout']\" />\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UsersRoutingModule} from \"./users-routing.module\";\n\nimport { SharedModule } from \"../shared/shared.module\";\nimport { UserDeleteComponent } from './user-delete/user-delete.component';\nimport { UserNewComponent } from './user-new/user-new.component';\n\n@NgModule({\n  imports: [\n    FormsModule\n    ,SharedModule\n    ,UsersRoutingModule\n  ],\n  declarations: [UserListComponent, UserEditComponent, UserDeleteComponent\n    ,UserNewComponent]\n  ,providers: []\n  ,exports: []\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}