{"version":3,"sources":["webpack:///src/app/manage-reports/manage-reports-routing.module.ts","webpack:///src/app/manage-reports/html-content-item-preview/html-content-item-preview.component.ts","webpack:///src/app/manage-reports/html-content-item-preview/html-content-item-preview.component.html","webpack:///src/app/manage-reports/item-json-editor/item-json-editor.component.ts","webpack:///src/app/manage-reports/item-json-editor/item-json-editor.component.html","webpack:///src/app/manage-reports/custom-report-edit/custom-report-edit.component.ts","webpack:///src/app/manage-reports/custom-report-edit/custom-report-edit.component.html","webpack:///src/app/manage-reports/addo-scale-results-preview/addo-scale-results-preview.component.ts","webpack:///src/app/manage-reports/addo-scale-results-preview/addo-scale-results-preview.component.html","webpack:///src/app/manage-reports/report-item-edit/report-item-edit.component.ts","webpack:///src/app/manage-reports/report-item-edit/report-item-edit.component.html","webpack:///src/app/manage-reports/custom-report-list/custom-report-list.component.ts","webpack:///src/app/manage-reports/custom-report-list/custom-report-list.component.html","webpack:///src/app/manage-reports/manage-reports.module.ts","webpack:///src/app/manage-reports/custom-report-new/custom-report-new.component.ts","webpack:///src/app/manage-reports/custom-report-new/custom-report-new.component.html","webpack:///src/app/manage-reports/item-html-content-editor/item-html-content-editor.component.ts","webpack:///src/app/manage-reports/item-html-content-editor/item-html-content-editor.component.html","webpack:///src/app/manage-reports/item-therapist-scale-results-editor/item-therapist-scale-results-editor.component.ts","webpack:///src/app/manage-reports/item-therapist-scale-results-editor/item-therapist-scale-results-editor.component.html","webpack:///src/app/manage-reports/scale-questions-action-editor/scale-questions-action-editor.component.ts","webpack:///src/app/manage-reports/scale-questions-action-editor/scale-questions-action-editor.component.html","webpack:///src/app/manage-reports/item-scale-results-summary-editor/item-scale-results-summary-editor.component.ts","webpack:///src/app/manage-reports/item-scale-results-summary-editor/item-scale-results-summary-editor.component.html"],"names":["manageReportRoutes","path","component","ManageReportsRoutingModule","forChild","imports","exports","HtmlContentItemPreviewComponent","domSanitizer","el","_classNames","itemData","content","_content","bypassSecurityTrustHtml","classNames","length","nativeElement","concat","selector","templateUrl","styleUrls","ItemJsonEditorComponent","alertService","data","text","itemEditor","json","value","JSON","parse","Promise","resolve","error","console","reject","CustomReportEditComponent","service","route","hostSiteService","hydrator","changeDetector","reportItemTypes","showAssessmentPicker","validHosts","hosts","_hasReportPreview","defaultPreviewValue","report","id","name","linkedAssessments","linkedGroup","variables","items","computedResults","params","subscribe","reportId","all","get","then","results","hostIds","hostSites","resultsContent","reportData","detectChanges","Array","isArray","push","previewResults","map","rd","hydrate","variable","type","description","computedResultId","scale","assessment","indexOf","uid","toggleAssessmentPicker","filter","u","showAssessmentGroupPicker","group","Id","Name","toggleAssessmentGroupPicker","alert","info","save","clearAlert","success","reportContents","jsonData","reportJSON","itemType","title","titleIconClasses","display","scales","calculation","assessmentUid","scaleId","scales_per_page","assessments","item","i","index","splice","host","hasPermission","vh","find","stringify","saveReport","addNewItem","updateReportContents","renderReportPreview","AddoScaleResultsPreviewComponent","getDefaultData","computed_result","getDataForComputedResult","_data","result","cr","getComputedScaleDescription","scaleItem","ReportItemEditComponent","resolver","editing","update","moveUp","moveDown","getComponentFromType","factory","resolveComponentFactory","componentRef","editorContainer","createComponent","reportItemComponent","instance","setEditorData","destroy","emit","getEditorData","notifyDelete","read","first","last","CustomReportListComponent","showAllReports","loadReports","list","reports","ManageReportsModule","declarations","entryComponents","CustomReportNewComponent","router","_report","trim","create","navigate","replaceUrl","relativeTo","v","ItemHtmlContentEditorComponent","newClassName","className","cn","editorData","editor","contentEditor","addClassName","newClass","ItemTherapistScaleResultsEditorComponent","assessmentService","skipContent","skipGraph","skipTable","tableActionLabel","tableActions","hasTableAction","obj","scalesPerPage","getAssessment","createTableActions","pageBreaks","rollUpQuestions","actions","ta","s","question","getQuestionsForScale","q","questionId","action","Error","isNaN","pb","lastPageBreak","validValue","undefined","addPageBreak","ScaleQuestionsActionEditorComponent","questionActions","setupNewQuestionAction","errors","url","join","newQuestionAction","addAction","ItemScaleResultsSummaryEditorComponent","sections"],"mappings":"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","file":"manage-reports-manage-reports-module-es5.js","sourcesContent":["/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes,RouterModule } from '@angular/router';\nimport { CustomReportListComponent } from './custom-report-list/custom-report-list.component';\nimport {CustomReportEditComponent} from \"./custom-report-edit/custom-report-edit.component\";\nimport { CustomReportNewComponent } from './custom-report-new/custom-report-new.component';\n\nconst manageReportRoutes: Routes = [\n    {path: '',component: CustomReportListComponent}\n    ,{path: 'new', component: CustomReportNewComponent}\n    ,{path: ':reportId/edit', component: CustomReportEditComponent}\n  ];\n@NgModule({\n  imports: [\n    RouterModule.forChild(manageReportRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ManageReportsRoutingModule {}\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input,ElementRef } from '@angular/core';\nimport { DomSanitizer,SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'dac-html-content-item-preview',\n  templateUrl: './html-content-item-preview.component.html',\n  styleUrls: ['./html-content-item-preview.component.css']\n})\nexport class HtmlContentItemPreviewComponent implements OnInit {\n\n  @Input(\"itemData\") itemData:any;\n  private _content:SafeHtml;\n  // TODO: stephen look at abstracting this or merging this with our actual HTML-Content-Item component.\n  private _classNames = [\"row\", \"col-xs-12\", \"report-item-component\"];\n\n  constructor(private domSanitizer:DomSanitizer\n  ,private el:ElementRef) { }\n\n  ngOnInit() {\n    if (this.itemData && this.itemData.content) {\n      var content = this.itemData.content as string;\n      this._content = this.domSanitizer.bypassSecurityTrustHtml(content);\n    }\n\n    if (this.itemData.classNames && this.itemData.classNames.length) {\n      this.el.nativeElement.classNames = this.itemData.classNames.concat(this._classNames);\n    }\n  }\n\n  get Content() {\n    return this._content;\n  }\n\n}\n","<div [innerHTML]=\"Content\"></div>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { IReportItemEditorComponent } from '../models/i-report-item-editor-component';\nimport { AlertService } from '../../shared/services/alert.service';\n\n@Component({\n  selector: 'dac-item-json-editor',\n  templateUrl: './item-json-editor.component.html',\n  styleUrls: ['./item-json-editor.component.scss']\n})\nexport class ItemJsonEditorComponent implements OnInit, IReportItemEditorComponent {\n  public data:any;\n  @ViewChild(\"itemEditor\") itemEditor:ElementRef;\n\n  constructor(private alertService:AlertService) { }\n\n  ngOnInit() {\n  }\n\n\n  setEditorData(data: any) {\n    this.data = data;\n  }\n  getEditorData(): Promise<any> {\n    let text = this.itemEditor.nativeElement as HTMLTextAreaElement;\n    let json = text.value;\n    try {\n      let data = JSON.parse(json);\n      return Promise.resolve(data);\n    }\n    catch (error) {\n      console.error(error);\n      this.alertService.error(\"There is an error in your JSON\");\n      return Promise.reject(error);\n    }\n  }\n\n}\n","<textarea #itemEditor class=\"report-editor-window\" [value]=\"data|json\"></textarea>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ViewChild, ElementRef, ComponentRef, ViewContainerRef, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ReportService } from \"../../reports/services/report.service\";\nimport { AlertService } from '../../shared/services/alert.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport {IReportItemEditorComponent} from \"../models/i-report-item-editor-component\";\nimport { HostSiteService } from '../../shared/services/host-site.service';\nimport { AssessmentGroup } from 'app/shared/models/assessment-group';\nimport { IReport, ReportItemType } from 'app/reports/models/i-report';\nimport { AssessmentResult } from 'app/shared/models/assessment-result';\nimport { AssessmentHydrator } from 'app/shared/services/assessment-hydrator.service';\nimport { AssessmentResultHydrator } from 'app/shared/services/assessment-result-hydrator.service';\n\n@Component({\n  selector: 'dac-custom-report-edit',\n  templateUrl: './custom-report-edit.component.html',\n  styleUrls: ['./custom-report-edit.component.css']\n})\nexport class CustomReportEditComponent implements OnInit {\n  private hosts:{id:number, name:string}[];\n  private validHosts:{id:number, name:string}[];\n  public report:IReport;\n  public previewResults:AssessmentResult[];\n  private _hasReportPreview:boolean;\n  public reportItemTypes:string[];\n  public defaultPreviewValue:string;\n\n  @ViewChild('reportContents') reportContents:ElementRef;\n\n  public showAssessmentPicker:boolean;\n  public showAssessmentGroupPicker:boolean;\n\n  constructor(private service:ReportService\n    , private route:ActivatedRoute\n    , private alertService:AlertService\n    , private hostSiteService:HostSiteService\n    , private hydrator:AssessmentResultHydrator\n    , private changeDetector: ChangeDetectorRef) {\n    this.reportItemTypes = [\n    'HTMLContentItem'\n    ,'ScaleResultsSectionsList'\n    ,'AddoScaleResults'\n    ,'ComputedScale'\n    ,'ScaleResultsSummary'\n    ,'TherapistScaleResults'\n    ,'ClientScaleResults'\n    ,'FlaggedQuestionsList'\n    ,'FlaggedQuestionsListSimple'\n    ,'PclAssessmentResults'\n    ,'AssessmentQuestionsList'\n    ,'TextItemComponent'\n    ,'QuestionActionList'\n    ];\n    this.showAssessmentPicker = false;\n    this.validHosts = [];\n    this.hosts = [];\n    this._hasReportPreview = false;\n    this.defaultPreviewValue = '{\"_id\":\"b59ef486-c302-46dc-b3cb-0afbd278fc2d\",\"_assignmentItemId\":\"997b6fe1-7774-4a54-9bdd-ecd7fd345751\",\"_assessment\":{\"_scales\":[{\"_id\":\"f49774df-4b38-2fe7-b5e0-7316de2984d4\",\"_name\":\"General Well Being\",\"_instructions\":\"\",\"_answer_start_value\":1,\"_display_order\":1,\"_ranges\":[{\"_id\":\"1f9faba5-f4a5-ee2f-e0c1-efd1279eda39\",\"_rangeStart\":0,\"_rangeEnd\":1,\"_name\":\"Normal\",\"_displayName\":\"normal\",\"_clientContent\":\"You are in the normal range.\",\"_content\":\"You are in the normal range.\",\"_mediaType\":\"video\",\"_mediaURL\":null,\"_assignmentURL\":null},{\"_id\":\"d06a400b-9fdd-c886-d487-8c07e423be9e\",\"_rangeStart\":2,\"_rangeEnd\":3,\"_name\":\"High\",\"_displayName\":\"high\",\"_clientContent\":\"You are in the high range\",\"_content\":\"You are in the high range\",\"_mediaType\":\"video\",\"_mediaURL\":null,\"_assignmentURL\":null}],\"_deleted\":false,\"_multiplier\":1,\"_negativeToPositiveRanges\":false,\"_type\":\"Sum\",\"_gradingData\":{},\"_includeInReports\":true,\"_rollUpSubScaleQuestions\":false,\"_descriptionClient\":\"general well being\",\"_subScaleIds\":[]}],\"_question_sets\":[{\"_display_conditions\":[],\"_id\":\"b3f11ffd-e71f-95f1-ff43-2d173bf6e2cb\",\"_title\":\"General Questions\",\"_display_order\":0,\"_questions\":[{\"_id\":\"f0aa732d-8047-23c1-cfb1-9ad51727bb43\",\"_prompt\":\"Are you satisfied with your general well being?\",\"_display_order\":0,\"_is_reversed\":false,\"_scale\":{\"_id\":\"f49774df-4b38-2fe7-b5e0-7316de2984d4\",\"_name\":\"General Well Being\",\"_instructions\":\"\",\"_answer_start_value\":1,\"_display_order\":1,\"_ranges\":[{\"_id\":\"1f9faba5-f4a5-ee2f-e0c1-efd1279eda39\",\"_rangeStart\":0,\"_rangeEnd\":1,\"_name\":\"Normal\",\"_displayName\":\"normal\",\"_clientContent\":\"You are in the normal range.\",\"_content\":\"You are in the normal range.\",\"_mediaType\":\"video\",\"_mediaURL\":null,\"_assignmentURL\":null},{\"_id\":\"d06a400b-9fdd-c886-d487-8c07e423be9e\",\"_rangeStart\":2,\"_rangeEnd\":3,\"_name\":\"High\",\"_displayName\":\"high\",\"_clientContent\":\"You are in the high range\",\"_content\":\"You are in the high range\",\"_mediaType\":\"video\",\"_mediaURL\":null,\"_assignmentURL\":null}],\"_deleted\":false,\"_multiplier\":1,\"_negativeToPositiveRanges\":false,\"_subScales\":{},\"_type\":\"Sum\",\"_gradingData\":{},\"_includeInReports\":true,\"_rollUpSubScaleQuestions\":false,\"_descriptionClient\":\"general well being\"},\"_skip_scoring\":false,\"_display_index\":0,\"_flaggedCondition\":null,\"_is_flagged\":false,\"_computedScore\":null,\"_customLabels\":[],\"_type\":1}],\"_labels\":[{\"_id\":\"0a0b3d57-ddf9-ac8f-49bf-8d0e3eeff9cb\",\"_display_order\":0,\"_label\":\"No\"},{\"_id\":\"c7d1da35-3c60-f1eb-e5ee-10dc7b362e53\",\"_display_order\":0,\"_label\":\"Yes\"}],\"_answer_start_value\":1,\"_display_type\":\"MultipleChoiceGrid\",\"_instructions\":\"Fill these out please\"}],\"_id\":2536,\"_display_order\":1,\"_enabled\":1,\"_instructions\":\"These are test instructions\",\"_display_client_results\":true,\"_version\":2536,\"_name\":\"My New Assessment\",\"_uid\":\"new-assessment\",\"_resourcesURL\":\"\",\"_creator\":\"Stephen Nielson\",\"_creatorUrl\":\"https://www.discoverandchange.com\",\"_description\":\"This is a test description\",\"_isPublic\":false,\"token\":\"TestRandomAPIKey\"},\"_scaleResults\":[{\"_scaleId\":\"f49774df-4b38-2fe7-b5e0-7316de2984d4\",\"_score\":2,\"_rangeId\":\"d06a400b-9fdd-c886-d487-8c07e423be9e\"}],\"_answers\":[{\"_question_id\":\"f0aa732d-8047-23c1-cfb1-9ad51727bb43\",\"_answer\":\"c7d1da35-3c60-f1eb-e5ee-10dc7b362e53\",\"_score\":2}],\"_flaggedQuestions\":[]}';\n    }\n\n  ngOnInit() {\n    this.report = {id: \"\", name: \"\", linkedAssessments:[], linkedGroup: null, variables: [], items:[], computedResults: []};\n    this.route.params.subscribe(params => {\n      let reportId = params['reportId'];\n      Promise.all([this.service.get(reportId)\n      // ,this.hostSiteService.getHostSites()\n    ])\n      .then((results) => {\n        // let [report, hostSites] = results;\n        let report = results[0];\n        // let hostSites = results[1];\n        this.report = report;\n        let hostIds = report.hostSites || [];\n        this.hosts = []; // hostSites;\n        this.validHosts = []; // hostSites.filter(hs => hostIds.indexOf(hs.id) >= 0);\n      })\n    });\n  };\n\n  public renderReportPreview(resultsContent) {\n    let reportData:AssessmentResult[] = [];\n    this._hasReportPreview = false;\n    this.changeDetector.detectChanges(); // run change detection to destroy the component, cleanest approach to resetting the preview.\n    try {\n      let data:AssessmentResult[]|AssessmentResult = JSON.parse(resultsContent)\n      if (Array.isArray(data)) {\n        reportData = data as AssessmentResult[];\n      } else {\n        reportData.push(data);\n      }\n      this.previewResults = reportData.map(rd => this.hydrator.hydrate(rd));\n      this._hasReportPreview = true;\n    }\n    catch (error) {\n      this._hasReportPreview = false;\n      this.alertService.error(\"Result data was invalid JSON\");\n      console.error(error);\n    }\n  }\n\n  public getVariableDescription(variable:any) {\n    if (variable.type === \"computed_scale_result\") {\n      let description = \"Result ID: \"  + variable.computedResultId + \", Scale: \" + variable.scale + \", Value: \" + variable.value;\n      return description;\n    }\n    return \"\";\n  }\n\n  get hasReportPreview() {\n    return this._hasReportPreview;\n  }\n\n  get reportText() {\n    if (!this.report) {\n      return \"\";\n    }\n    return \"<pre>\" + JSON.stringify(this.report) + \"</pre>\";\n  }\n\n  get Report() : IReport|null {\n    return this.report;\n  }\n\n  public toggleAssessmentPicker() {\n    this.showAssessmentPicker = !this.showAssessmentPicker;\n  }\n\n  public addLinkedAssessment(assessment:Assessment) {\n    let linkedAssessments = this.report.linkedAssessments || [];\n\n    if (linkedAssessments.indexOf(assessment.uid) < 0) {\n      linkedAssessments.push(assessment.uid);\n    }\n    this.report.linkedAssessments = linkedAssessments;\n    this.toggleAssessmentPicker();\n  }\n\n  public removeLinkedAssessment(uid:string) {\n    this.report.linkedAssessments = this.report.linkedAssessments.filter(u => u !== uid);\n  }\n\n  public toggleAssessmentGroupPicker() {\n    this.showAssessmentGroupPicker = !this.showAssessmentGroupPicker;\n  }\n\n  public addLinkedAssessmentGroup(group:AssessmentGroup) {\n    this.report.linkedGroup = {id: group.Id, name: group.Name};\n    this.toggleAssessmentGroupPicker();\n  }\n\n  public removeLinkedAssessmentGroup() {\n    this.report.linkedGroup = null;\n  }\n\n  public saveReport() {\n    let alert = this.alertService.info(\"Saving report...\", 120000);\n    this.report.hostSites = []; // this.validHosts.map(vh => vh.id);\n    this.service.save(this.report).then(() => {\n      this.alertService.clearAlert(alert);\n      this.alertService.success(\"Report saved\");\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.clearAlert(alert);\n      this.alertService.error(\"There was an error saving the report.  Please check your internet connection and try again.  Or contact customer support\");\n    })\n  }\n\n  public updateReportContents() {\n    let reportContents = this.reportContents.nativeElement as HTMLTextAreaElement;\n    let jsonData = reportContents.value;\n    let reportJSON;\n    try {\n      reportJSON = JSON.parse(jsonData);\n      this.report = reportJSON;\n      this.alertService.info(\"Report contents updated.  Make sure to save the report before proceeding\");\n    }\n    catch (error) {\n      this.alertService.error(\"The report contains invalid JSON and could not be parsed\");\n      console.error(error);\n    }\n\n  }\n  public addNewItem(itemType:ReportItemType) {\n    let itemData = {\n      type: itemType\n      ,title: \"\"\n      ,titleIconClasses: []\n      ,data: {}\n      ,display: true\n    };\n    let items = this.report.items || [];\n\n    switch (itemType)\n    {\n      case 'HTMLContentItem': {\n\n        itemData.data = {\n          classNames: []\n          ,content: \"\"\n        };\n      }\n      break;\n      case 'ScaleResultsSectionsList': {\n       itemData.data = {\n         assessment: \"\"\n         ,scales: []\n       }\n      }\n      break;\n      case 'AddoScaleResults': {\n        itemData.data = {\n          assessment: \"\"\n          ,scales: []\n        };\n      }\n      break;\n      case 'ComputedScale': {\n        itemData.data = {\n          scale: \"\"\n          ,calculation: \"SUM\"\n          ,items: [\n            {\n              assessmentUid: \"\"\n              ,scaleId: \"\"\n            }\n          ]\n        }\n      }\n      break;\n      case 'ScaleResultsSummary': {\n        itemData.data = {\n          title: \"\"\n          ,description: \"\"\n        }\n      }\n      break;\n      case 'TherapistScaleResults': {\n        itemData.data = {\n          assessment: \"\"\n          ,scales_per_page: 2\n          ,scales: []\n        }\n      }\n      break;\n      case 'FlaggedQuestionsList':\n      case 'FlaggedQuestionsListSimple':\n      {\n        itemData.data = {\n          title: \"\"\n          ,description: \"\"\n          ,assessments: this.report.linkedAssessments\n        };\n      }\n      break;\n      case 'PclAssessmentResults': {\n        itemData.data = {\n          assessment: \"638\"\n        }\n      }\n      break;\n      case 'AssessmentQuestionsList': {\n        itemData.data = {\n          title: \"\"\n          ,assessment: \"\"\n        };\n      }\n      break;\n    }\n    items.push(itemData);\n    this.report.items = items;\n  }\n  public removeItem(item:any) {\n    this.report.items = this.report.items.filter(i => i != item);\n  }\n\n  public updateItem(item:any) {\n    // for now since we do binding we don't have to worry about this for now...\n    this.alertService.success(\"Item updated\");\n  }\n\n  public moveUp(item:any) {\n    let index = this.report.items.indexOf(item);\n    if (index >= 1) {\n      this.report.items.splice(index, 1);\n      this.report.items.splice(index - 1, 0, item);\n    }\n  }\n\n  public moveDown(item:any) {\n    let index = this.report.items.indexOf(item);\n    if (index >= 0 && index < this.report.items.length - 1) {\n      this.report.items.splice(index, 1);\n      this.report.items.splice(index + 1, 0, item);\n    }\n  }\n\n  public toggleHostPermission(host) {\n    if (this.hasPermission(host)) {\n      this.validHosts = this.validHosts.filter(vh => vh.id != host.id);\n    }\n    else {\n      this.validHosts.push(host);\n    }\n  }\n\n  public hasPermission(host) {\n    return this.validHosts.find(vh => vh.id == host.id);\n  }\n\n  public get Hosts() {\n    return this.hosts;\n  }\n}\n","<div class=\"col-1\">\n    <app-back-button></app-back-button>\n</div>\n\n<h1>Edit Report</h1>\n<input type=\"button\" value=\"Save\" (click)=\"saveReport()\" class=\"btn btn-primary\" />\n<dac-tabs class=\"col-12\">\n    <dac-tab heading=\"Visual Editor\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Name:</label>\n                    <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"Report.name\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"linkedAssessments\">Linked Assessments:</label>\n                    <ul>\n                        <li *ngFor=\"let link of Report.linkedAssessments\">{{link}} <i class=\"fa fa-trash btn btn-primary btn-sm\" (click)=\"removeLinkedAssessment(link)\"></i></li>\n                    </ul>\n                    <input type=\"button\" class=\"btn btn-primary\" *ngIf=\"showAssessmentPicker\" value=\"Close Assessment Picker\" (click)=\"toggleAssessmentPicker()\" />\n                    <dac-assessment-picker *ngIf=\"showAssessmentPicker\" (selected)=\"addLinkedAssessment($event)\"></dac-assessment-picker>\n                    <input type=\"button\" *ngIf=\"!showAssessmentPicker\" value=\"Add Linked Assessment\" (click)=\"toggleAssessmentPicker()\" />\n                </div>\n                <div class=\"form-group\" >\n                    <label for=\"linkedGroup\">Linked Assessment Group:</label>\n                    <ul *ngIf=\"Report.linkedGroup\">\n                        <li>{{Report.linkedGroup?.name}} <i class=\"fa fa-trash btn btn-primary btn-sm\" (click)=\"removeLinkedAssessmentGroup(Report)\"></i></li>\n                    </ul>\n                    <input type=\"button\" class=\"btn btn-primary\" *ngIf=\"showAssessmentGroupPicker\" value=\"Close\" (click)=\"toggleAssessmentGroupPicker()\" />\n                    <dac-assessment-group-list *ngIf=\"showAssessmentGroupPicker\" (selected)=\"addLinkedAssessmentGroup($event)\"></dac-assessment-group-list>\n                    <input type=\"button\" *ngIf=\"!showAssessmentGroupPicker\" value=\"Add Assessment Group\" (click)=\"toggleAssessmentGroupPicker()\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"variables\">Variables</label>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>ID</td>\n                                <td>Type</td>\n                                <td>Description</td>\n                                <td>Actions</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let variable of Report.variables\">\n                                <td>{{variable.id}}</td>\n                                <td>{{variable.type}}</td>\n                                <td>{{getVariableDescription(variable)}}</td>\n                                <td></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"computedResults\">Computed Results</label>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>ID</td>\n                                <td>Calculation</td>\n                                <td>Name</td>\n                                <td>Description</td>\n                                <td># Items</td>\n                                <td># Scales</td>\n                                <td>Actions</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let result of Report.computedResults\">\n                                <td>{{result?.id}}</td>\n                                <td>{{result?.calculation}}</td>\n                                <td>{{result?.name}}</td>\n                                <td>{{result?.description}}</td>\n                                <td></td>\n                                <!--<td>{{result?.items?.length}}</td>-->\n                                <td>{{result?.scales?.length}}</td>\n                                <td></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"row\">\n                    <select class=\"browser-default\" #reportType>\n                        <option *ngFor=\"let type of reportItemTypes\" [value]=\"type\">{{type}}</option>\n                    </select>\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Add Item\" (click)=\"addNewItem(reportType.value)\" />\n                </div>\n\n                <dac-report-item-edit *ngFor=\"let item of Report.items; let first = first; let last=last;\"\n                (delete)=\"removeItem($event)\" (moveUp)=\"moveUp($event)\" (moveDown)=\"moveDown($event)\"\n                [first]=\"first\" [last]=\"last\" [item]=\"item\" (update)=\"updateItem($event)\"\n                [report]=\"Report\"\n                class=\"card card-body d-block m-3\"></dac-report-item-edit>\n                <pre>{{Report|json}}</pre>\n            </div>\n        </div>\n    </dac-tab>\n    <dac-tab heading=\"Raw Edit\">\n        <textarea class=\"report-editor-window\" #reportContents [value]=\"Report|json\"></textarea>\n        <input type=\"button\" class=\"btn btn-primary\" (click)=\"updateReportContents()\" value=\"Update\" />\n    </dac-tab>\n    <dac-tab heading=\"Preview\" class=\"itemsContainer\">\n      <textarea class=\"form-control\" #resultsSampleContainer [value]=\"defaultPreviewValue\"></textarea>\n      <button class=\"btn btn-primary\" (click)=\"renderReportPreview(resultsSampleContainer.value)\">Preview Report</button>\n      <dac-report-viewer-container *ngIf=\"hasReportPreview\" [report]=\"report\" [results]=\"previewResults\" [showTitle]=\"true\"></dac-report-viewer-container>\n    </dac-tab>\n    <!-- <dac-tab heading=\"Permissions\">\n        Host site permissions (leave blank to enable for all hosts)\n        <ul>\n            <li *ngFor=\"let host of Hosts\">\n                    <input class=\"input-lg\" type=\"checkbox\" (click)=\"toggleHostPermission(host)\" [checked]=\"hasPermission(host)\" />\n                    <label (click)=\"toggleHostPermission(host)\">{{host.name}}</label>\n            </li>\n        </ul>\n    </dac-tab> -->\n</dac-tabs>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'dac-addo-scale-results-preview',\n  templateUrl: './addo-scale-results-preview.component.html',\n  styleUrls: ['./addo-scale-results-preview.component.css']\n})\nexport class AddoScaleResultsPreviewComponent implements OnInit {\n\n  @Input(\"itemData\") itemData:any;\n  @Input(\"report\") report:any;\n  private _data:any;\n\n  constructor() { }\n\n  ngOnInit() {\n    let data = this.getDefaultData();\n    if (this.itemData) {\n      if (this.itemData.computed_result) {\n        data = this.getDataForComputedResult(this.itemData.computed_result);\n      }\n      else {\n        data = this.itemData;\n      }\n    }\n    this._data = data;\n  }\n\n  get Data() {\n    return this._data;\n  }\n\n  private getDefaultData() {\n    return {\n      assessment: \"None Defined\"\n      ,scales_per_page: 0\n      ,scales: []\n      ,type: 'normal'\n    };\n  }\n\n  private getDataForComputedResult(computedResultId:string) {\n    let data = this.getDefaultData();\n    if (!this.report || !this.report.computedResults) {\n      return data;\n    }\n    let result = this.report.computedResults.find(cr => cr.id == computedResultId);\n    if (result) {\n      data.type = 'computed';\n      data.assessment = result.name;\n      data.scales = result.items.map(i => this.getComputedScaleDescription(result.calculation, i));\n    }\n    return data;\n  }\n\n  private getComputedScaleDescription(calculation:string, scaleItem) {\n    let description = scaleItem.assessmentUid + \" => \" + calculation + \"(\" + scaleItem.scaleId + \")\";\n    return description;\n  }\n}\n","<div>\n  <h1>Assessment: {{Data.assessment}}</h1>\n  <p *ngIf=\"Data.scales_per_page\">Scales per page: {{Data.scales_per_page}}</p>\n  <div *ngIf=\"!Data.scales\">All scales included in report</div>\n  <div *ngIf=\"Data.scales\">\n    Scales\n    <ul>\n      <li *ngFor=\"let scaleId of Data.scales\">{{scaleId}}</li>\n    </ul>\n  </div>\n</div>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, EventEmitter, Output, Input, ElementRef, ViewChild, ComponentFactoryResolver, ViewContainerRef, ComponentRef } from '@angular/core';\nimport { AlertService } from '../../shared/services/alert.service';\nimport { IReportItemEditorComponent } from '../models/i-report-item-editor-component';\nimport { ItemJsonEditorComponent } from '../item-json-editor/item-json-editor.component';\nimport { ItemHtmlContentEditorComponent } from '../item-html-content-editor/item-html-content-editor.component';\nimport { ItemTherapistScaleResultsEditorComponent } from '../item-therapist-scale-results-editor/item-therapist-scale-results-editor.component';\nimport { ItemScaleResultsSummaryEditorComponent } from '../item-scale-results-summary-editor/item-scale-results-summary-editor.component';\n\n@Component({\n  selector: 'dac-report-item-edit',\n  templateUrl: './report-item-edit.component.html',\n  styleUrls: ['./report-item-edit.component.scss']\n})\nexport class ReportItemEditComponent implements OnInit {\n\n  private itemEditor:ComponentRef<IReportItemEditorComponent>;\n\n  @ViewChild('editorContainer', { read: ViewContainerRef }) editorContainer;\n\n  @Input() item:any;\n  @Input() report:any;\n  @Input() first:boolean;\n  @Input() last:boolean;\n  public editing:boolean;\n\n  @Output() update:EventEmitter<any>;\n  @Output() delete:EventEmitter<any>;\n  @Output() moveUp:EventEmitter<any>;\n  @Output() moveDown:EventEmitter<any>;\n\n  constructor(private alertService:AlertService, private resolver: ComponentFactoryResolver) {\n    this.editing = false;\n    this.update = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.moveUp = new EventEmitter();\n    this.moveDown = new EventEmitter();\n  }\n\n  ngOnInit() {\n    // we init this as some reports don't have this value\n    // TODO: stephen at some point we want to remove this as every report item will have this saved.\n    if (this.item.display !== false) {\n      this.item.display = true;\n    }\n  }\n\n\n  createComponent(type, data) : ComponentRef<IReportItemEditorComponent> {\n    let component = this.getComponentFromType(type);\n    let factory = this.resolver.resolveComponentFactory(component);\n    let componentRef = this.editorContainer.createComponent(factory);\n    let reportItemComponent = componentRef.instance as IReportItemEditorComponent;\n    reportItemComponent.setEditorData(data);\n    return componentRef;\n  }\n\n  private getComponentFromType(type:string) {\n    var component = null;\n    switch (type)\n    {\n      case 'TherapistScaleResults': {\n        component = ItemTherapistScaleResultsEditorComponent;\n      }\n      break;\n      case 'ClientScaleResults': {\n        component = ItemTherapistScaleResultsEditorComponent;\n      }\n      break;\n      case 'AddoScaleResults': {\n        component = ItemTherapistScaleResultsEditorComponent;\n      }\n      break;\n      case 'HTMLContentItem': {\n        component = ItemHtmlContentEditorComponent;\n      }\n      break;\n      // case 'ScaleResultsSummary': {\n      //   component = ItemScaleResultsSummaryEditorComponent;\n      // }\n      // break;\n      default: {\n        component = ItemJsonEditorComponent;\n      }\n      break;\n    }\n    return component;\n  }\n\n\n  public toggleEdit() {\n    if (!this.editing) {\n      this.itemEditor = this.createComponent(this.item.type, this.item.data);\n    }\n    else {\n      this.itemEditor.destroy();\n    }\n    this.editing = !this.editing;\n  }\n\n  public notifyDelete() {\n    this.delete.emit(this.item);\n  }\n\n  public notifyMoveUp() {\n    this.moveUp.emit(this.item);\n  }\n\n  public notifyMoveDown() {\n    this.moveDown.emit(this.item);\n  }\n\n  public toggleDisplay(item) {\n    if (item.display === false) {\n      item.display = true;\n    }\n    else {\n      item.display = false;\n    }\n  }\n\n  public get Report() {\n    return this.report || {};\n  }\n\n  public notifyUpdate() {\n    let data = this.itemEditor.instance.getEditorData().then((data) => {\n      this.item.data = data;\n      this.update.emit(this.item);\n    })\n    .catch((error) => {\n      console.error(\"Save error occurred.  Detailed error from editor item: \", error);\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-1\">\n    <input type=\"button\" class=\"btn btn-primary btn-sm\" *ngIf=\"!editing\" value=\"Edit\" (click)=\"toggleEdit()\" />\n    <input type=\"button\" class=\"btn btn-primary btn-sm\" *ngIf=\"editing\" value=\"Close\" (click)=\"toggleEdit()\" />\n  </div>\n  <div class=\"col-1\" *ngIf=\"editing\">\n    <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"Update\" (click)=\"notifyUpdate()\" />\n  </div>\n  <div class=\"col-3 ml-auto\">\n    <input type=\"button\" *ngIf=\"!first\" class=\"btn btn-primary btn-sm\" value=\"Up\" (click)=\"notifyMoveUp()\" />\n    <input type=\"button\" *ngIf=\"!last\" class=\"btn btn-primary btn-sm\" value=\"Down\" (click)=\"notifyMoveDown()\" />\n    <input type=\"button\" class=\"btn btn-primary btn-sm\" value=\"Delete\" (click)=\"notifyDelete()\" />\n    <i class=\"fa fa-eye btn btn-sm btn-primary\" *ngIf=\"item.display\" (click)=\"toggleDisplay(item)\"></i>\n    <i class=\"fa fa-eye-slash btn btn-sm btn-primary\" *ngIf=\"!item.display\" (click)=\"toggleDisplay(item)\"></i>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-12\" *ngIf=\"editing\">\n    <label>Item Title</label>\n    <input type=\"text\" [(ngModel)]=\"item.title\" placeholder=\"Enter Title\" />\n  </div>\n  <div class=\"col-12\" *ngIf=\"editing\">\n    <input class=\"input-lg\" type=\"checkbox\" (click)=\"toggleDisplay(item)\" [checked]=\"item.display\" />\n    <label (click)=\"toggleDisplay(item)\">Display Item</label>\n  </div>\n  <div class=\"col-12\">\n    <div #editorContainer></div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"!editing\">\n  <div class=\"col-12\">\n    <div *ngIf=\"item.type !== 'HTMLContentItem' && item.type !== 'AddoScaleResults'\">\n      <pre>{{item|json}}</pre>\n    </div>\n    <dac-html-content-item-preview *ngIf=\"item.type=='HTMLContentItem'\" [itemData]=\"item.data\"></dac-html-content-item-preview>\n    <dac-addo-scale-results-preview *ngIf=\"item.type=='AddoScaleResults'\" [report]=\"Report\" [itemData]=\"item.data\"></dac-addo-scale-results-preview>\n  </div>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport {ReportService} from \"../../reports/services/report.service\";\n\n@Component({\n  selector: 'app-custom-report-list',\n  templateUrl: './custom-report-list.component.html',\n  styleUrls: ['./custom-report-list.component.css']\n})\nexport class CustomReportListComponent implements OnInit {\n\n  private reports:any[];\n  public showAllReports:boolean;\n\n  constructor(private service:ReportService) {\n    this.showAllReports = false;\n  }\n\n  ngOnInit() {\n    this.loadReports();\n  }\n\n  public toggleShowAllReports() {\n    this.showAllReports = !this.showAllReports;\n    this.loadReports();\n  }\n\n  private loadReports() {\n    this.service.list(this.showAllReports).then((reports) => {\n      this.reports = reports;\n    });\n  }\n\n\n  public getSingleReportAssessment(report) {\n    if (report.linkedAssessments && report.linkedAssessments.length == 1) {\n      return report.linkedAssessments[0];\n    }\n    return \"\";\n  }\n\n  public get Reports() {\n    return this.reports || [];\n  }\n}\n2\n","<h1>Reports</h1>\n<p *ngIf=\"Reports.length < 1\">There are no reports available right now</p>\n<input *hasPermission=\"'SuperUser'\" class=\"input-lg\" type=\"checkbox\" (click)=\"toggleShowAllHosts()\" [checked]=\"showAllReports\" />\n<label *hasPermission=\"'SuperUser'\" (click)=\"toggleShowAllReports()\">Show All Reports</label>\n<a [routerLink]=\"['new']\" class=\"btn btn-primary\">Add Report</a>\n<table class=\"table table-striped\">\n  <thead class=\"table-head\">\n    <tr>\n      <th>Report</th>\n      <th>Assessment Group</th>\n      <th>Assessment</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let report of Reports\">\n      <td>{{report.name}}</td>\n      <td>{{report.linkedGroup?.name}}</td>\n      <td>{{getSingleReportAssessment(report)}}</td>\n      <td>\n        <a class=\"link-btn btn btn-primary\" [routerLink]=\"[report.id, 'edit']\">Edit</a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from \"../shared/shared.module\";\nimport { CustomReportEditComponent } from './custom-report-edit/custom-report-edit.component';\n\nimport { CustomReportListComponent } from './custom-report-list/custom-report-list.component';\nimport { ManageReportsRoutingModule } from \"./manage-reports-routing.module\";\nimport { HtmlContentItemPreviewComponent } from './html-content-item-preview/html-content-item-preview.component';\nimport { AddoScaleResultsPreviewComponent } from './addo-scale-results-preview/addo-scale-results-preview.component';\nimport { CustomReportNewComponent } from './custom-report-new/custom-report-new.component';\nimport { ReportItemEditComponent } from './report-item-edit/report-item-edit.component';\nimport { ItemJsonEditorComponent } from './item-json-editor/item-json-editor.component';\nimport { ItemHtmlContentEditorComponent } from './item-html-content-editor/item-html-content-editor.component';\nimport { ItemTherapistScaleResultsEditorComponent } from './item-therapist-scale-results-editor/item-therapist-scale-results-editor.component';\nimport { ItemScaleResultsSummaryEditorComponent } from './item-scale-results-summary-editor/item-scale-results-summary-editor.component';\nimport { LoginModule } from '../login/login.module';\nimport { ScaleQuestionsActionEditorComponent } from './scale-questions-action-editor/scale-questions-action-editor.component';\nimport { ReportsModule } from 'app/reports/reports.module';\n@NgModule({\n  imports: [\n     RouterModule\n    ,SharedModule\n    ,LoginModule\n    ,ReportsModule\n    ,ManageReportsRoutingModule\n  ],\n  declarations: [\n    CustomReportListComponent,\n    CustomReportEditComponent,\n    HtmlContentItemPreviewComponent,\n    AddoScaleResultsPreviewComponent,\n    CustomReportNewComponent,\n    ReportItemEditComponent,\n    ItemJsonEditorComponent,\n    ItemHtmlContentEditorComponent,\n    ItemTherapistScaleResultsEditorComponent,\n    ItemScaleResultsSummaryEditorComponent,\n    ScaleQuestionsActionEditorComponent]\n    ,exports: [\n      CustomReportEditComponent, CustomReportListComponent\n    ]\n    ,entryComponents: [ ]\n})\nexport class ManageReportsModule { }\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { AlertService } from '../../shared/services/alert.service';\nimport { ReportService } from '../../reports/services/report.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'dac-custom-report-new',\n  templateUrl: './custom-report-new.component.html',\n  styleUrls: ['./custom-report-new.component.scss']\n})\nexport class CustomReportNewComponent implements OnInit {\n\n  private _report:any;\n\n  constructor(private alertService:AlertService,private service:ReportService, private router:Router, private route:ActivatedRoute) {\n    this._report = {\n      id: null\n      ,name: \"Untitled\"\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  public get report() {\n    return this._report;\n  }\n\n  public set report(v:any) {\n    this._report = v;\n  }\n\n  public save() {\n    let id = this.report.id || \"\";\n    let name = this.report.name || \"\";\n\n    if (id.trim() == \"\" || name.trim() == \"\") {\n      this.alertService.error(\"report unique id and name must be filled in\");\n      return;\n    }\n\n    let alert = this.alertService.info(\"Saving report...\", 120000);\n    this.service.create(this.report).then(() => {\n      this.alertService.clearAlert(alert);\n      this.alertService.success(\"Report saved\");\n      this.router.navigate([\"../\", this.report.id, \"edit\"], {replaceUrl: true, relativeTo: this.route});\n    })\n    .catch((error) => {\n      console.error(error);\n      this.alertService.clearAlert(alert);\n      this.alertService.error(\"There was an error saving the report.  Please check your internet connection and try again.  Or contact customer support\");\n    })\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-1\">\n      <app-back-button></app-back-button>\n    </div>\n    <div class=\"col\">\n      <h2 class=\"h2-responsive text-center\">New Report</h2>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"card card-cascade narrower\">\n          <div class=\"view gradient-card-header primary-gradient text-light\">\n              <h3 class='h3-responsive text-center'>{{report.name}}</h3>\n          </div>\n          <div class=\"card-body\">\n            <form >\n              <div class=\"form-group\">\n                <label for=\"name\">Unique Identifier:</label>\n                <input class=\"form-control\" type=\"text\" id=\"uid\" name=\"uid\" [(ngModel)]=\"report.id\" />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"name\">Name:</label>\n                <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"report.name\" />\n              </div>\n              <input class=\"btn btn-primary\" type=\"submit\" (click)=\"save()\" value=\"Save\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { IReportItemEditorComponent } from '../models/i-report-item-editor-component';\nimport { AlertService } from '../../shared/services/alert.service';\n\n@Component({\n  selector: 'dac-item-html-content-editor',\n  templateUrl: './item-html-content-editor.component.html',\n  styleUrls: ['./item-html-content-editor.component.scss']\n})\nexport class ItemHtmlContentEditorComponent implements OnInit, IReportItemEditorComponent {\n\n  public newClassName:string;\n\n  public content:string;\n  public classNames:string[];\n  @ViewChild(\"contentEditor\") contentEditor:ElementRef;\n  @ViewChild(\"newClass\") newClass:ElementRef;\n\n  constructor(private alertService:AlertService) { }\n\n  ngOnInit() {\n    this.newClassName = \"\";\n  }\n\n  public addClassName() {\n    let className = this.newClassName.trim();\n    if (className == \"\") {\n      this.alertService.error(\"Please enter a class name to continue\");\n      return;\n    }\n\n    this.classNames.push(className);\n    this.newClassName = \"\";\n  }\n  public removeClass(name:string) {\n    this.classNames = this.classNames.filter(cn => cn != name);\n  }\n\n  setEditorData(editorData: any) {\n    let data = editorData || {};\n    this.classNames = data.classNames || [];\n    this.content = data.content || \"\";\n  }\n  getEditorData(): Promise<any> {\n    let editor = this.contentEditor.nativeElement as HTMLTextAreaElement;\n    let content = editor.value.trim();\n\n    let data = {\n      classNames: this.classNames\n      ,content: content\n    };\n    return Promise.resolve(data);\n\n  }\n}\n","<ul>\n  <li *ngFor=\"let clazz of classNames\">{{clazz}} <i class=\"btn btn-sm btn-primary fa fa-trash\" (click)=\"removeClass(clazz)\"></i></li>\n</ul>\n<div>\n  <input type=\"text\" value=\"\" placeholder=\"Enter Classname\" [(ngModel)]=\"newClassName\">\n  <input type=\"button\" class=\"btn btn-primary\" value=\"Add\" (click)=\"addClassName()\" />\n</div>\n<textarea #contentEditor class=\"report-editor-window\" [value]=\"content\"></textarea>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { IReportItemEditorComponent } from '../models/i-report-item-editor-component';\nimport { AlertService } from '../../shared/services/alert.service';\nimport { Assessment } from '../../shared/models/assessment';\nimport { AssessmentService } from '../../shared/services/assessment.service';\nimport { Scale } from 'app/shared/models/scale';\nimport { Question } from 'app/shared/models/question';\n\n@Component({\n  selector: 'dac-item-therapist-scale-results-editor',\n  templateUrl: './item-therapist-scale-results-editor.component.html',\n  styleUrls: ['./item-therapist-scale-results-editor.component.scss']\n})\nexport class ItemTherapistScaleResultsEditorComponent implements OnInit, IReportItemEditorComponent {\n\n  public scalesPerPage: string;\n  public assessment: Assessment;\n  public scales: string[];\n  public showAssessmentPicker: boolean;\n  public skipContent:boolean;\n  public skipGraph:boolean;\n  public skipTable:boolean;\n  public pageBreaks:number[];\n  public computed_result:string;\n  public hasTableAction:boolean;\n  public rollUpQuestions:boolean;\n  public tableActionLabel:string;\n  public tableActions:{scale: Scale, question: Question, action:\"redirect\", data:{url:string}}[];\n\n\n  constructor(private alertService: AlertService, private assessmentService: AssessmentService) {\n    this.skipContent = false;\n    this.skipGraph = false;\n    this.skipTable = false;\n    this.tableActionLabel = \"\";\n    this.tableActions = [];\n    this.hasTableAction = false;\n\n  }\n\n  trackByIndex(index: number, obj: any): any {\n    return index;\n  }\n\n  setEditorData(editorData: any) {\n    let data = editorData || {};\n    this.scalesPerPage = data.scales_per_page || \"\";\n    if (this.scalesPerPage != \"\") {\n      this.scalesPerPage = this.scalesPerPage + \"\"; // convert to a string if we have a number originally\n    }\n\n    if (data.assessment) {\n      this.assessmentService.getAssessment(data.assessment).then((assessment) => {\n        this.assessment = assessment;\n        this.tableActions = this.createTableActions(editorData.tableActions);\n      });\n    }\n    else if (data.computed_result) {\n      this.computed_result = data.computed_result;\n    }\n\n    this.skipContent = data.skipContent == true;\n    this.skipGraph = data.skipGraph == true;\n    this.skipTable = data.skipTable == true;\n\n    this.scales = editorData.scales || [];\n    this.pageBreaks = editorData.pageBreaks || [];\n    this.hasTableAction = data.hasTableAction == true;\n    this.rollUpQuestions = data.rollUpQuestions == true;\n    this.tableActionLabel = data.tableActionLabel || \"\";\n  }\n\n  private createTableActions(tableActions:{scaleId: string, questionId: string, action:\"redirect\", data:{url:string}}[]) {\n    let actions = (tableActions || []).map(ta => {\n      let scale = this.assessment.scales.find(s => s.id == ta.scaleId);\n      let question = this.assessment.getQuestionsForScale(scale).find(q => q.id == ta.questionId);\n      return {\n        question: question\n        ,scale: scale\n        ,action: ta.action\n        ,data: ta.data\n      };\n    });\n    return actions;\n  }\n  getEditorData(): Promise<any> {\n    let data: any = {};\n    let computed_result = this.computed_result || \"\";\n    if (!this.assessment && computed_result.trim() == \"\") {\n      this.alertService.error(\"You must pick an assessment or set a computed_result before saving this item\");\n      return Promise.reject(new Error(\"Invalid editor data\"));\n    }\n    if (this.scalesPerPage && this.scalesPerPage.trim() != \"\") {\n      let scalesPerPage = +this.scalesPerPage;\n      if (isNaN(scalesPerPage) || scalesPerPage == 0) {\n        this.alertService.error(\"The scales per page number is invalid.  Clear it out or a number greater than 0\");\n        return Promise.reject(new Error(\"Invalid editor data\"));\n      }\n      else {\n        // we are being backwards compatability here from the original data....\n        data.scales_per_page = scalesPerPage;\n      }\n    }\n    if (this.assessment) {\n      data.assessment = this.assessment.uid;\n    }\n    else {\n      data.computed_result = computed_result;\n    }\n\n    if (this.scales && this.scales.length) {\n      data.scales = this.scales;\n    }\n    data.skipContent = this.skipContent == true;\n    data.skipGraph = this.skipGraph == true;\n    data.skipTable = this.skipTable == true;\n    data.rollUpQuestions = this.rollUpQuestions == true;\n    data.pageBreaks = this.pageBreaks.map(pb => +pb).filter(pb => !isNaN(pb)) || [];\n    data.hasTableAction = this.hasTableAction == true;\n    data.tableActionLabel = this.tableActionLabel;\n    data.tableActions = this.tableActions.map(ta => {\n      return {\n        scaleId: ta.scale.id\n        ,questionId: ta.question.id\n        ,action: ta.action\n        ,data: ta.data\n      }\n    });\n\n    return Promise.resolve(data);\n  }\n\n  public updateAssessment(assessment: Assessment) {\n    // so we only have a preview of the assessment we need to grab the whole thing\n    // so we can grab the scales\n    this.assessmentService.getAssessment(assessment.uid)\n      .then((assessment) => {\n        this.assessment = assessment;\n        this.scalesPerPage = null;\n        this.scales = [];\n        this.pageBreaks = [];\n        this.assessment = assessment;\n        this.toggleAssessmentPicker();\n      })\n      .catch((error) => {\n        this.alertService.error(\"There was an error in retrieving the assessment from the server.  Check your internet connection and try again\");\n      });\n  }\n\n  public toggleAssessmentPicker() {\n    this.showAssessmentPicker = !this.showAssessmentPicker;\n  }\n\n  public includeAllScales() {\n    this.scales = [];\n  }\n\n  public isChecked(scaleId: string) {\n    return this.scales.indexOf(scaleId) >= 0;\n  }\n  public addPageBreak() {\n    let lastPageBreak = this.pageBreaks[this.pageBreaks.length - 1] || 0;\n    lastPageBreak = lastPageBreak + 1; // go one more\n    this.pageBreaks.push(lastPageBreak);\n  }\n  public deletePageBreak(index:number) {\n    this.pageBreaks.splice(index, 1);\n  }\n  public updatePageBreak(value:number, index:number) {\n    let validValue = +value;\n    if (isNaN(validValue)) {\n      this.alertService.error(\"Please enter a valid number for this page break\");\n      this.pageBreaks[index] = 0;\n    }\n    if (this.pageBreaks[index] !== undefined) {\n      this.pageBreaks[index] = +value;\n    }\n  }\n\n  public toggleScale(scaleId: string) {\n    let index = this.scales.indexOf(scaleId);\n    if (index >= 0) {\n      this.scales.splice(index, 1);\n    }\n    else {\n      this.scales.push(scaleId);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"assessment\">\n  <label>Assessment:</label>\n  <div>{{assessment.name}} ({{assessment.uid}})</div>\n</div>\n<input type=\"button\" class=\"btn btn-primary\" *ngIf=\"showAssessmentPicker\" value=\"Close Assessment Picker\" (click)=\"toggleAssessmentPicker()\"\n/>\n<dac-assessment-picker *ngIf=\"showAssessmentPicker\" (selected)=\"updateAssessment($event)\"></dac-assessment-picker>\n<div *ngIf=\"computed_result\">Computed Result: {{computed_result}}</div>\n<input type=\"button\" *ngIf=\"!showAssessmentPicker\" value=\"Change Assessment\" (click)=\"toggleAssessmentPicker()\" />\n\n<h3>\n  Scales\n</h3>\n<ul *ngIf=\"assessment\">\n  <li>\n    <input (click)=\"includeAllScales()\" type=\"checkbox\" [checked]=\"scales.length == 0\">\n    <label (click)=\"includeAllScales()\">\n\n      <span>Show all scales</span>\n    </label>\n  </li>\n  <li *ngFor=\"let scale of assessment.scales\">\n      <input class=\"input-lg\" type=\"checkbox\" (click)=\"toggleScale(scale.id)\" [checked]=\"isChecked(scale.id)\" />\n    <label (click)=\"toggleScale(scale.id)\">\n\n      <span>{{scale.name}}</span>\n    </label>\n  </li>\n\n</ul>\n<div>\n    <input name=\"skipGraph\" type=\"checkbox\" (click)=\"skipGraph = !skipGraph\" [checked]=\"skipGraph\" />\n  <label for=\"skipGraph\" (click)=\"skipGraph = !skipGraph\">Skip Graphs</label>\n\n</div>\n<div>\n\n    <input name=\"skipContent\" type=\"checkbox\" (click)=\"skipContent = !skipContent\" [checked]=\"skipContent\" />\n  <label for=\"skipContent\" (click)=\"skipContent = !skipContent\">Skip Contents</label>\n</div>\n<div>\n\n    <input name=\"skipTable\" type=\"checkbox\" (click)=\"skipTable = !skipTable\" [checked]=\"skipTable\" />\n  <label for=\"skipTable\" (click)=\"skipTable = !skipTable\">Skip Tables</label>\n</div>\n<div>\n\n    <input name=\"rollUpQuestions\" type=\"checkbox\" (click)=\"rollUpQuestions = !rollUpQuestions\" [checked]=\"rollUpQuestions\" />\n  <label for=\"rollUpQuestions\" (click)=\"rollUpQuestions = !rollUpQuestions\">Roll Up Sub Scale Questions</label>\n</div>\n<div>\n  <input name=\"hasTableAction\" type=\"checkbox\" (click)=\"hasTableAction = !hasTableAction\" [checked]=\"hasTableAction\" />\n  <label for=\"hasTableAction\" (click)=\"hasTableAction = !hasTableAction\">Enable Table Action</label>\n</div>\n<div *ngIf=\"hasTableAction\">\n  <input name=\"tableActionLabel\" type=\"text\" [(ngModel)]=\"tableActionLabel\"  />\n  <label>Table Action Label</label>\n</div>\n<div *ngIf=\"hasTableAction\">\n  <dac-scale-questions-action-editor [questionActions]=\"tableActions\" [assessment]=\"assessment\"></dac-scale-questions-action-editor>\n</div>\n<div>\n  <ul>\n    <input type=\"button\" (click)=\"addPageBreak()\" value=\"Add Page Break\" />\n    <li *ngFor=\"let pageBreak of pageBreaks; let index = index;trackBy:trackByIndex;\">\n        <input [value]=\"pageBreak\" (input)=\"updatePageBreak($event.target.value)\" type=\"number\" min=\"0\" />\n        <i class=\"fa fa-trash\" (click)=\"deletePageBreak(index)\"></i>\n    </li>\n  </ul>\n</div>\n<div>\n\n    <input type=\"text\" [(ngModel)]=\"scalesPerPage\" />\n    <label>Scales Per Page</label>\n</div>\n","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Scale } from 'app/shared/models/scale';\nimport { Question } from 'app/shared/models/question';\nimport { Assessment } from 'app/shared/models/assessment';\nimport { AlertService } from 'app/shared/services/alert.service';\n\n@Component({\n  selector: 'dac-scale-questions-action-editor',\n  templateUrl: './scale-questions-action-editor.component.html',\n  styleUrls: ['./scale-questions-action-editor.component.scss']\n})\nexport class ScaleQuestionsActionEditorComponent implements OnInit {\n  @Input() questionActions:{scale: Scale, question: Question, action:\"redirect\", data:{url:string}}[];\n\n  @Input() assessment:Assessment;\n  public newQuestionAction\n\n  private\n  constructor(private alertService:AlertService) {\n    this.questionActions = this.questionActions || [];\n    this.setupNewQuestionAction();\n  }\n\n  ngOnInit() {\n  }\n\n  public get Scales() {\n    if (this.assessment) {\n      return this.assessment.scales || [];\n    }\n    return [];\n  }\n\n  public get Actions() {\n    return [\"redirect\"];\n  }\n\n  public get Questions() {\n    if (!this.assessment) {\n      return [];\n    }\n    return this.newQuestionAction.scale ? this.assessment.getQuestionsForScale(this.newQuestionAction.scale) : [];\n  }\n\n  deleteAction(action) {\n    this.questionActions.splice(this.questionActions.indexOf(action),1);\n  }\n  addAction(action) {\n    let errors = [];\n    if (!action.scale) {\n      errors.push(\"Scale must be set\");\n    }\n    if (!action.question) {\n      errors.push(\"Question must be set\");\n    }\n    if (!action.data || !action.data.url) {\n      errors.push(\"URL is missing\");\n    }\n    if (errors.length) {\n      this.alertService.error(errors.join(\".\"));\n      return;\n    }\n    this.questionActions.push(action);\n    this.setupNewQuestionAction();\n  }\n\n  private setupNewQuestionAction() {\n    if (this.newQuestionAction) {\n      this.newQuestionAction = {scale: this.newQuestionAction.scale, question: null, action: \"redirect\", data:{url: \"\"}};\n    }\n    else {\n      this.newQuestionAction = {scale:null, question:null, action:\"redirect\", data:{url: \"\"}};\n    }\n  }\n\n}\n","<table *ngIf=\"questionActions.length > 0\">\n  <thead>\n    <tr>\n      <th>Scale</th>\n      <th>Question</th>\n      <th>Action</th>\n      <th>Data</th>\n      <th>Delete</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let questionAction of questionActions\">\n      <td>{{questionAction.scale.name}}</td>\n      <td>{{questionAction.question.prompt}}</td>\n      <td>{{questionAction.action}}</td>\n      <td>{{questionAction.data|json}}</td>\n      <td><input type=\"button\" value=\"Delete\" (click)=\"deleteAction(questionAction)\"></td>\n    </tr>\n  </tbody>\n</table>\n<div>\n  Scale:\n  <select class=\"browser-default form-control\" name=\"scale\" [(ngModel)]=\"newQuestionAction.scale\">\n    <option *ngFor=\"let scale of Scales\" [ngValue]=\"scale\">{{scale.name}}</option>\n  </select>\n  Question:\n  <select *ngIf=\"newQuestionAction.scale\" class=\"browser-default form-control\" name=\"question\" [(ngModel)]=\"newQuestionAction.question\">\n      <option *ngFor=\"let question of Questions\" [ngValue]=\"question\">{{question.prompt}}</option>\n    </select>\n  Action:\n  <select *ngIf=\"newQuestionAction.action\" class=\"browser-default form-control\" name=\"action\" [(ngModel)]=\"newQuestionAction.action\">\n    <option *ngFor=\"let action of Actions\" [ngValue]=\"action\">{{action}}</option>\n  </select>\n  <label *ngIf=\"newQuestionAction.action == 'redirect'\">\n    Redirect URL:\n    <input type=\"text\" name=\"url\" [(ngModel)]=\"newQuestionAction.data.url\">\n  </label>\n  <input type=\"button\" value=\"Add Question Action\" (click)=\"addAction(newQuestionAction)\" >\n</div>","/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dac-item-scale-results-summary-editor',\n  templateUrl: './item-scale-results-summary-editor.component.html',\n  styleUrls: ['./item-scale-results-summary-editor.component.scss']\n})\nexport class ItemScaleResultsSummaryEditorComponent implements OnInit {\n\n  public title:string;\n  public description:string;\n  public sections:any[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  setEditorData(editorData: any) {\n    let data = editorData || {};\n    this.title = data.title || \"\";\n    this.description = data.description || \"\";\n    this.sections = data.sections || [];\n  }\n  getEditorData(): Promise<any> {\n\n    return Promise.resolve({\n      title: this.title\n      ,description: this.description\n      ,sections: this.sections\n    });\n\n  }\n\n\n}\n","Title: <input type=\"text\" [(ngModel)]=\"title\" />\nDescription\n<textarea [(ngModel)]=\"description\"></textarea>\n\n<div *ngFor=\"let section of sections; let index = index\">\n  Section {{index}}\n  <pre>{{section|json}}</pre>\n</div>"]}