{"version":3,"sources":["webpack:///src/app/ehr/ehr-routing.module.ts","webpack:///src/app/ehr/services/auth-guard-ehr.service.ts","webpack:///src/app/ehr/ehr-container/ehr-container.component.ts","webpack:///src/app/ehr/ehr-container/ehr-container.component.html","webpack:///src/app/ehr/ehr.module.ts"],"names":["routes","path","component","canActivate","children","then","m","AdminModule","EhrRoutingModule","forChild","imports","exports","declarations","AuthEhrGuard","authService","router","route","state","getCurrentUser","user","role","Client","navigate","queryParams","url","loginType","error","EhrContainerComponent","Error","selector","templateUrl","host","EhrModule","forRoot","schemas","providers","bootstrap"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAcA,UAAMA,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AACE;AACA;AACAC,iBAAS,EAAE,4FAHb;AAIEC,mBAAW,EAAE,EAJf;AAKEC,gBAAQ,EAAE,CACR;AAAEH,cAAI,EAAE,YAAR;AAAsBC,mBAAS,EAAE;AAAjC,SADQ,EAER;AAAED,cAAI,EAAE,oBAAR;AAA8BC,mBAAS,EAAE;AAAzC,SAFQ,EAGR;AAAED,cAAI,EAAE,OAAR;AAAiBE,qBAAW,EAAE,CAAC,6EAAD,CAA9B;AACU,0BAAgB;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAgCE,IAAhC,CAAqC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,WAAN;AAAA,aAAtC,CAAN;AAAA;AAD1B,SAHQ,EAKR;AACA;AAAEN,cAAI,EAAE,IAAR;AAAcC,mBAAS,EAAE;AAAzB,SANQ;AALZ,OADqB,CAAvB;;UAyBaM,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAPlB,CACP,4DADO,EAEN,6DAAaC,QAAb,CAAsBT,MAAtB,CAFM,CAOkB,EAHhB,4DAGgB;;;;4HAAhBQ,gB,EAAgB;AAAA,oBANzB,4DAMyB,EANb,4DAMa;AANb,oBAGH,4DAHG;AAMa,S;AAHJ,O;;;;;wEAGZA,gB,EAAgB;gBAR5B,sDAQ4B;iBARnB;AACRE,mBAAO,EAAE,CACP,4DADO,EAEN,6DAAaD,QAAb,CAAsBT,MAAtB,CAFM,CADD;AAKRW,mBAAO,EAAE,CAAE,4DAAF,CALD;AAMRC,wBAAY,EAAE;AANN,W;AAQmB,U;;;;;;;;;;;;;;;;;;ACvC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAYaC,Y;AACT,8BAAoBC,WAApB,EAAsDC,MAAtD,EAAsE;AAAA;;AAAlD,eAAAD,WAAA,GAAAA,WAAA;AAAkC,eAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;sCAE1DC,K,EAA+BC,K,EAA4B;AAAA;;AACrE,mBAAO,KAAKH,WAAL,CAAiBI,cAAjB,GACNb,IADM,CACD,UAAAc,IAAI,EAAI;AACV,kBAAIA,IAAI,IAAIA,IAAI,CAACC,IAAL,GAAY,4DAAKC,MAA7B,EAAqC;AACjC,uBAAO,IAAP;AACH,eAFD,MAGK;AACH,qBAAI,CAACN,MAAL,CAAYO,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC7BC,6BAAW,EAAE;AACT,8BAAQN,KAAK,CAACO,GADL;AAERC,6BAAS,EAAE;AAFH;AADgB,iBAAjC;;AAMA,uBAAO,KAAP;AACD;AACJ,aAdM,WAcG,UAAAC,KAAK,EAAI;AACf,mBAAI,CAACX,MAAL,CAAYO,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC/BC,2BAAW,EAAE;AACT,4BAAQN,KAAK,CAACO,GADL;AAERC,2BAAS,EAAE;AAFH;AADkB,eAAjC;;AAOF,qBAAO,KAAP;AACD,aAvBM,CAAP;AAwBD;;;2CAEcT,K,EAA+BC,K,EAA0B;AACtE,mBAAO,KAAKd,WAAL,CAAiBa,KAAjB,EAAwBC,KAAxB,CAAP;AACH;;;;;;;yBAhCQJ,Y,EAAY,mI,EAAA,8G;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY;;;;;wEAAZA,Y,EAAY;gBADxB;AACwB,U;;;;;;;;;;;;;;;;;;;;;;;;ACZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;UAUac,qB;;;;;;;wCACA;AACT,kBAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;;qCACO,CACN;AACD;;;;;;;yBANUD,qB;AAAqB,O;;;cAArBA,qB;AAAqB,0C;AAAA,uD;AAAA,gB;AAAA,e;AAAA,qK;AAAA;AAAA;ACZlC;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;;wEDGaA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTE,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGRC,gBAAI,EAAE;AAAC,uBAAS;AAAV;AAHE,W;AAKuB,U;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;;UAqBaC,S;;;;;cAAAA;;;;2BAAAA,S;AAAS,S;AAAA,mBALT,CACT,6EADS,C;AAEV,kBATQ,CACP,sEAAaC,OAAb,EADO,EAEP,kEAFO,EAGP,kEAHO,EAIP,oEAJO,CASR;;;;4HAGUD,S,EAAS;AAAA,yBAdlB,4FAckB;AAdG,2FAIrB,kEAJqB,EAKrB,kEALqB,EAMrB,oEANqB;AAcH,S;AARF,O;;;;;wEAQPA,S,EAAS;gBAhBrB,sDAgBqB;iBAhBZ;AACRpB,wBAAY,EAAE,CACZ,4FADY,CADN;AAIRF,mBAAO,EAAE,CACP,sEAAauB,OAAb,EADO,EAEP,kEAFO,EAGP,kEAHO,EAIP,oEAJO,CAJD;AAURC,mBAAO,EAAE,CAAE,8DAAF,CAVD;AAWRC,qBAAS,EAAE,CACT,6EADS,CAXH;AAcRC,qBAAS,EAAE;AAdH,W;AAgBY,U","file":"ehr-ehr-module-es5.js","sourcesContent":["/*\n *   Copyright (c) 2022 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthEhrGuard } from './services/auth-guard-ehr.service';\nimport { PageNotFoundComponent } from 'app/theme/page-not-found/page-not-found.component';\nimport { AdminLoginComponent } from 'app/login/admin-login/admin-login.component';\nimport { AdminLoginFinalizeComponent } from 'app/login/admin-login-finalize/admin-login-finalize.component';\nimport { EhrContainerComponent } from './ehr-container/ehr-container.component';\n\nconst routes: Routes = [\n  { path: '',\n    // redirectTo: '/login'\n    // ,pathMatch: 'full'\n    component: EhrContainerComponent, // never used as our AuthGuardLogin will redirect based on the SMART app configuration\n    canActivate: [], // this is a dummy guard that we just use to redirect based on login state to admin or assessments\n    children: [\n      { path: 'adminLogin', component: AdminLoginComponent},\n      { path: 'adminLoginFinalize', component: AdminLoginFinalizeComponent},\n      { path: 'admin', canActivate: [AuthEhrGuard]\n              , 'loadChildren': () => import('../admin/admin.module').then(m => m.AdminModule)},\n      // { path: 'assessments', 'loadChildren': () => import('./assessments/assessments.module').then(m => m.AssessmentsModule)},\n      { path: '**', component: PageNotFoundComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n    ,RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class EhrRoutingModule { }\n","/*\n *   Copyright (c) 2023 Discover and Change\n *   @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\nimport { Injectable }             from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot }    from '@angular/router';\nimport { AuthService } from 'app/login/services/auth.service';\nimport { Role } from 'app/shared/models/role';\n\n@Injectable()\nexport class AuthEhrGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) {}\n\n      canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.authService.getCurrentUser()\n        .then(user => {\n            if (user && user.role < Role.Client) {\n                return true;\n            }\n            else {\n              this.router.navigate(['/login'], {\n                  queryParams: {\n                      return: state.url\n                      ,loginType: 1\n                  }\n              });\n              return false;\n            }\n        }).catch (error => {\n            this.router.navigate(['/login'], {\n              queryParams: {\n                  return: state.url\n                  ,loginType: 1\n              }\n          });\n\n          return false;\n        });\n      }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        return this.canActivate(route, state);\n    }\n\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\n/*\n *   Copyright (c) 2023 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\n@Component({\n  selector: 'dac-ehr-container',\n  templateUrl: './ehr-container.component.html'\n  ,host: {'class': 'd-flex px-0 col my-3'}\n})\nexport class EhrContainerComponent  implements OnInit, OnDestroy {\n  ngOnDestroy(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  ngOnInit(): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row no-gutters\">\n    <div class=\"col-12 col-lg-10 mx-auto px-3 card card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n  <div class=\"row no-gutters\">\n    <dac-footer class=\"col-12 d-print-none\"></dac-footer>\n  </div>\n</div>\n","import { NO_ERRORS_SCHEMA, NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { LoginModule } from \"app/login/login.module\";\nimport { SharedModule } from \"app/shared/shared.module\";\nimport { ThemeModule } from \"app/theme/theme.module\";\nimport { EhrContainerComponent } from \"./ehr-container/ehr-container.component\";\nimport { EhrRoutingModule } from \"./ehr-routing.module\";\nimport { AuthEhrGuard } from \"./services/auth-guard-ehr.service\";\n\n/*\n *   Copyright (c) 2023 Discover and Change @author Stephen Nielson <snielson@discoverandchange.com>\n *   All rights reserved.\n *   For License information see LICENSE.md in the root folder of this project.\n */\n@NgModule({\n  declarations: [\n    EhrContainerComponent\n  ],\n  imports: [\n    SharedModule.forRoot(),\n    LoginModule,\n    ThemeModule,\n    EhrRoutingModule\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  providers: [\n    AuthEhrGuard\n  ],\n  bootstrap: []\n})\nexport class EhrModule { }\n"]}