<?php

namespace OpenEMR\Modules\DiscoverAndChange\Assessments;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class DacAssessmentCachedContainer extends Container
{
    protected $parameters = [];

    public function __construct()
    {
        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'config' => true,
            'dispatcher' => true,
            'kernel' => true,
            'logger' => true,
        ];
        $this->methodMap = [
            'OpenEMR\\Common\\Auth\\OpenIDConnect\\Repositories\\ScopeRepository' => 'getScopeRepositoryService',
            'OpenEMR\\FHIR\\Config\\ServerConfig' => 'getServerConfigService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\APISetupController' => 'getAPISetupControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\AssessmentAppointmentController' => 'getAssessmentAppointmentControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\AssignmentEncounterController' => 'getAssignmentEncounterControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\BackendDispatchController' => 'getBackendDispatchControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\ConfigController' => 'getConfigControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\FrontendDispatchController' => 'getFrontendDispatchControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Factory\\TwigEnvironmentFactory' => 'getTwigEnvironmentFactoryService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Listeners\\QuestionnaireAssignmentListener' => 'getQuestionnaireAssignmentListenerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Listeners\\QuestionnaireResponseRestListener' => 'getQuestionnaireResponseRestListenerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AnnouncementRestController' => 'getAnnouncementRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentGroupRestController' => 'getAssessmentGroupRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentReportRestController' => 'getAssessmentReportRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentRestController' => 'getAssessmentRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentResultRestController' => 'getAssessmentResultRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\ClientRestController' => 'getClientRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\EmptyRestController' => 'getEmptyRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\LibraryAssetRestController' => 'getLibraryAssetRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\LibraryAssetResultRestController' => 'getLibraryAssetResultRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\MessageTemplateRestController' => 'getMessageTemplateRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\QuestionnaireAuditController' => 'getQuestionnaireAuditControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\QuestionnaireResponseRestController' => 'getQuestionnaireResponseRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\QuestionnaireRestController' => 'getQuestionnaireRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\SystemUserRestController' => 'getSystemUserRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\TagRestController' => 'getTagRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\TaskRestController' => 'getTaskRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\TokenRestController' => 'getTokenRestControllerService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentRepository' => 'getAssessmentRepositoryService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentResultRepository' => 'getAssessmentResultRepositoryService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentCompleter' => 'getAssignmentCompleterService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository' => 'getAssignmentRepositoryService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\ClientMessageDispatcher' => 'getClientMessageDispatcherService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\AssessmentFHIRResourceService' => 'getAssessmentFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\AssessmentResponseBlobFHIRResourceService' => 'getAssessmentResponseBlobFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\LibraryAssetFHIRResourceService' => 'getLibraryAssetFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\LibraryAssetResultBlobFHIRResourceService' => 'getLibraryAssetResultBlobFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\QuestionnaireFormFHIRResourceService' => 'getQuestionnaireFormFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetBlobRepository' => 'getLibraryAssetBlobRepositoryService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetResultBlobRepository' => 'getLibraryAssetResultBlobRepositoryService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireFHIRResourceService' => 'getQuestionnaireFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseFHIRResourceService' => 'getQuestionnaireResponseFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseOnSiteDocumentService' => 'getQuestionnaireResponseOnSiteDocumentServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SimplifiedOAuthTwigExtension' => 'getSimplifiedOAuthTwigExtensionService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SmartAppClientService' => 'getSmartAppClientServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\TaskFHIRResourceService' => 'getTaskFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\AssignmentTaskFHIRResourceService' => 'getAssignmentTaskFHIRResourceServiceService',
            'OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\QuestionnairePortalTaskFHIRResourceService' => 'getQuestionnairePortalTaskFHIRResourceServiceService',
            'OpenEMR\\Services\\LogoService' => 'getLogoServiceService',
            'OpenEMR\\Services\\PatientService' => 'getPatientServiceService',
            'OpenEMR\\Services\\QuestionnaireResponseService' => 'getQuestionnaireResponseServiceService',
            'OpenEMR\\Services\\QuestionnaireService' => 'getQuestionnaireServiceService',
            'Twig\\Environment' => 'getEnvironmentService',
            'crypto' => 'getCryptoService',
            'sanitizer' => 'getSanitizerService',
        ];

        $this->aliases = [];
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return [
            'OpenEMR\\Common\\Logging\\SystemLogger' => true,
            'Psr\\Container\\ContainerInterface' => true,
            'Symfony\\Component\\DependencyInjection\\ContainerInterface' => true,
        ];
    }

    /**
     * Gets the public 'OpenEMR\Common\Auth\OpenIDConnect\Repositories\ScopeRepository' shared service.
     *
     * @return \OpenEMR\Common\Auth\OpenIDConnect\Repositories\ScopeRepository
     */
    protected function getScopeRepositoryService()
    {
        return $this->services['OpenEMR\\Common\\Auth\\OpenIDConnect\\Repositories\\ScopeRepository'] = new \OpenEMR\Common\Auth\OpenIDConnect\Repositories\ScopeRepository();
    }

    /**
     * Gets the public 'OpenEMR\FHIR\Config\ServerConfig' shared service.
     *
     * @return \OpenEMR\FHIR\Config\ServerConfig
     */
    protected function getServerConfigService()
    {
        return $this->services['OpenEMR\\FHIR\\Config\\ServerConfig'] = new \OpenEMR\FHIR\Config\ServerConfig();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\APISetupController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\APISetupController
     */
    protected function getAPISetupControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\APISetupController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\APISetupController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\AssessmentAppointmentController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\AssessmentAppointmentController
     */
    protected function getAssessmentAppointmentControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\AssessmentAppointmentController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\AssessmentAppointmentController(($this->services['Twig\\Environment'] ?? $this->getEnvironmentService()), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())), ($this->services['dispatcher'] ?? $this->get('dispatcher', 1)), ($this->services['config'] ?? $this->get('config', 1)), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SmartAppClientService'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SmartAppClientService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SmartAppClientService(($this->services['config'] ?? $this->get('config', 1))))));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\AssignmentEncounterController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\AssignmentEncounterController
     */
    protected function getAssignmentEncounterControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\AssignmentEncounterController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\AssignmentEncounterController(($this->services['Twig\\Environment'] ?? $this->getEnvironmentService()), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())), ($this->services['config'] ?? $this->get('config', 1)), ($this->services['logger'] ?? $this->get('logger', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\BackendDispatchController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\BackendDispatchController
     */
    protected function getBackendDispatchControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\BackendDispatchController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\BackendDispatchController(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\AssessmentAppointmentController'] ?? $this->getAssessmentAppointmentControllerService()), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\ConfigController'] ?? $this->getConfigControllerService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\ConfigController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\ConfigController
     */
    protected function getConfigControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\ConfigController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\ConfigController(($this->services['config'] ?? $this->get('config', 1)), ($this->services['Twig\\Environment'] ?? $this->getEnvironmentService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\FrontendDispatchController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\FrontendDispatchController
     */
    protected function getFrontendDispatchControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Controllers\\FrontendDispatchController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Controllers\FrontendDispatchController(($this->services['config'] ?? $this->get('config', 1)), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SmartAppClientService'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SmartAppClientService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SmartAppClientService(($this->services['config'] ?? $this->get('config', 1))))), ($this->services['Twig\\Environment'] ?? $this->getEnvironmentService()), ($this->services['dispatcher'] ?? $this->get('dispatcher', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Factory\TwigEnvironmentFactory' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Factory\TwigEnvironmentFactory
     */
    protected function getTwigEnvironmentFactoryService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Factory\\TwigEnvironmentFactory'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Factory\TwigEnvironmentFactory(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SimplifiedOAuthTwigExtension'] ?? $this->getSimplifiedOAuthTwigExtensionService()), ($this->services['kernel'] ?? $this->get('kernel', 1)), '/var/www/localhost/htdocs/openemr/interface/modules/custom_modules/oe-module-dc-assessments/templates/');
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Listeners\QuestionnaireAssignmentListener' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Listeners\QuestionnaireAssignmentListener
     */
    protected function getQuestionnaireAssignmentListenerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Listeners\\QuestionnaireAssignmentListener'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Listeners\QuestionnaireAssignmentListener(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseOnSiteDocumentService'] ?? $this->getQuestionnaireResponseOnSiteDocumentServiceService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Listeners\QuestionnaireResponseRestListener' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Listeners\QuestionnaireResponseRestListener
     */
    protected function getQuestionnaireResponseRestListenerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Listeners\\QuestionnaireResponseRestListener'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Listeners\QuestionnaireResponseRestListener(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\AssessmentResponseBlobFHIRResourceService'] ?? $this->getAssessmentResponseBlobFHIRResourceServiceService()), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\LibraryAssetResultBlobFHIRResourceService'] ?? $this->getLibraryAssetResultBlobFHIRResourceServiceService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AnnouncementRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AnnouncementRestController
     */
    protected function getAnnouncementRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AnnouncementRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AnnouncementRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentGroupRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentGroupRestController
     */
    protected function getAssessmentGroupRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentGroupRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentGroupRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentReportRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentReportRestController
     */
    protected function getAssessmentReportRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentReportRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentReportRestController(($this->services['logger'] ?? $this->get('logger', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentRestController
     */
    protected function getAssessmentRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentResultRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentResultRestController
     */
    protected function getAssessmentResultRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\AssessmentResultRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\AssessmentResultRestController(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentCompleter'] ?? $this->getAssignmentCompleterService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\ClientRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\ClientRestController
     */
    protected function getClientRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\ClientRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\ClientRestController(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\ClientMessageDispatcher'] ?? $this->getClientMessageDispatcherService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\EmptyRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\EmptyRestController
     */
    protected function getEmptyRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\EmptyRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\EmptyRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\LibraryAssetRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\LibraryAssetRestController
     */
    protected function getLibraryAssetRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\LibraryAssetRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\LibraryAssetRestController(($this->services['logger'] ?? $this->get('logger', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\LibraryAssetResultRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\LibraryAssetResultRestController
     */
    protected function getLibraryAssetResultRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\LibraryAssetResultRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\LibraryAssetResultRestController(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['crypto'] ?? ($this->services['crypto'] = new \OpenEMR\Common\Crypto\CryptoGen())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentCompleter'] ?? $this->getAssignmentCompleterService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\MessageTemplateRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\MessageTemplateRestController
     */
    protected function getMessageTemplateRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\MessageTemplateRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\MessageTemplateRestController(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['Twig\\Environment'] ?? $this->getEnvironmentService()), ($this->services['config'] ?? $this->get('config', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireAuditController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireAuditController
     */
    protected function getQuestionnaireAuditControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\QuestionnaireAuditController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireAuditController(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['Twig\\Environment'] ?? $this->getEnvironmentService()), ($this->services['OpenEMR\\Services\\QuestionnaireService'] ?? ($this->services['OpenEMR\\Services\\QuestionnaireService'] = new \OpenEMR\Services\QuestionnaireService())), ($this->services['OpenEMR\\Services\\QuestionnaireResponseService'] ?? ($this->services['OpenEMR\\Services\\QuestionnaireResponseService'] = new \OpenEMR\Services\QuestionnaireResponseService())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())), ($this->services['config'] ?? $this->get('config', 1)), '/interface/modules/custom_modules/oe-module-dc-assessments/public/');
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireResponseRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireResponseRestController
     */
    protected function getQuestionnaireResponseRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\QuestionnaireResponseRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireResponseRestController(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseFHIRResourceService'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseFHIRResourceService(($this->services['dispatcher'] ?? $this->get('dispatcher', 1))))));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireRestController
     */
    protected function getQuestionnaireRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\QuestionnaireRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\QuestionnaireRestController(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireFHIRResourceService'] ?? $this->getQuestionnaireFHIRResourceServiceService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\SystemUserRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\SystemUserRestController
     */
    protected function getSystemUserRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\SystemUserRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\SystemUserRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TagRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TagRestController
     */
    protected function getTagRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\TagRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TagRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TaskRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TaskRestController
     */
    protected function getTaskRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\TaskRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TaskRestController(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\TaskFHIRResourceService'] ?? $this->getTaskFHIRResourceServiceService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TokenRestController' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TokenRestController
     */
    protected function getTokenRestControllerService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\RestControllers\\TokenRestController'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\RestControllers\TokenRestController();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentRepository' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentRepository
     */
    protected function getAssessmentRepositoryService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentRepository(($this->services['logger'] ?? $this->get('logger', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentResultRepository' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentResultRepository
     */
    protected function getAssessmentResultRepositoryService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentResultRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentResultRepository();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentCompleter' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentCompleter
     */
    protected function getAssignmentCompleterService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentCompleter'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentCompleter(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\ClientMessageDispatcher'] ?? $this->getClientMessageDispatcherService()), ($this->services['config'] ?? $this->get('config', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository
     */
    protected function getAssignmentRepositoryService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\ClientMessageDispatcher' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\ClientMessageDispatcher
     */
    protected function getClientMessageDispatcherService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\ClientMessageDispatcher'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\ClientMessageDispatcher(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['dispatcher'] ?? $this->get('dispatcher', 1)), ($this->services['sanitizer'] ?? ($this->services['sanitizer'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\HTMLSanitizer())), ($this->services['config'] ?? $this->get('config', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\AssessmentFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\AssessmentFHIRResourceService
     */
    protected function getAssessmentFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\AssessmentFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\AssessmentFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentRepository(($this->services['logger'] ?? $this->get('logger', 1))))));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\AssessmentResponseBlobFHIRResourceService' shared autowired service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\AssessmentResponseBlobFHIRResourceService
     */
    protected function getAssessmentResponseBlobFHIRResourceServiceService()
    {
        $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\AssessmentResponseBlobFHIRResourceService'] = $instance = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\AssessmentResponseBlobFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentResultRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssessmentResultRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssessmentResultRepository())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentCompleter'] ?? $this->getAssignmentCompleterService()), ($this->services['OpenEMR\\Services\\PatientService'] ?? ($this->services['OpenEMR\\Services\\PatientService'] = new \OpenEMR\Services\PatientService())));

        $instance->setLogger(($this->services['logger'] ?? $this->get('logger', 1)));

        return $instance;
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\LibraryAssetFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\LibraryAssetFHIRResourceService
     */
    protected function getLibraryAssetFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\LibraryAssetFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\LibraryAssetFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetBlobRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetBlobRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetBlobRepository(($this->services['logger'] ?? $this->get('logger', 1))))));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\LibraryAssetResultBlobFHIRResourceService' shared autowired service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\LibraryAssetResultBlobFHIRResourceService
     */
    protected function getLibraryAssetResultBlobFHIRResourceServiceService()
    {
        $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\LibraryAssetResultBlobFHIRResourceService'] = $instance = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\LibraryAssetResultBlobFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetResultBlobRepository'] ?? $this->getLibraryAssetResultBlobRepositoryService()), ($this->services['OpenEMR\\Services\\PatientService'] ?? ($this->services['OpenEMR\\Services\\PatientService'] = new \OpenEMR\Services\PatientService())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentCompleter'] ?? $this->getAssignmentCompleterService()), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())));

        $instance->setLogger(($this->services['logger'] ?? $this->get('logger', 1)));

        return $instance;
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\QuestionnaireFormFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\QuestionnaireFormFHIRResourceService
     */
    protected function getQuestionnaireFormFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\QuestionnaireFormFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\QuestionnaireFormFHIRResourceService();
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetBlobRepository' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetBlobRepository
     */
    protected function getLibraryAssetBlobRepositoryService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetBlobRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetBlobRepository(($this->services['logger'] ?? $this->get('logger', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetResultBlobRepository' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetResultBlobRepository
     */
    protected function getLibraryAssetResultBlobRepositoryService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\LibraryAssetResultBlobRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\LibraryAssetResultBlobRepository(($this->services['logger'] ?? $this->get('logger', 1)), ($this->services['crypto'] ?? ($this->services['crypto'] = new \OpenEMR\Common\Crypto\CryptoGen())));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireFHIRResourceService
     */
    protected function getQuestionnaireFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\AssessmentFHIRResourceService'] ?? $this->getAssessmentFHIRResourceServiceService()), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\QuestionnaireFormFHIRResourceService'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\QuestionnaireFormFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\FhirServices\QuestionnaireFormFHIRResourceService())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\FhirServices\\LibraryAssetFHIRResourceService'] ?? $this->getLibraryAssetFHIRResourceServiceService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseFHIRResourceService
     */
    protected function getQuestionnaireResponseFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseFHIRResourceService(($this->services['dispatcher'] ?? $this->get('dispatcher', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseOnSiteDocumentService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseOnSiteDocumentService
     */
    protected function getQuestionnaireResponseOnSiteDocumentServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\QuestionnaireResponseOnSiteDocumentService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\QuestionnaireResponseOnSiteDocumentService(($this->services['OpenEMR\\Services\\QuestionnaireResponseService'] ?? ($this->services['OpenEMR\\Services\\QuestionnaireResponseService'] = new \OpenEMR\Services\QuestionnaireResponseService())));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SimplifiedOAuthTwigExtension' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SimplifiedOAuthTwigExtension
     */
    protected function getSimplifiedOAuthTwigExtensionService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SimplifiedOAuthTwigExtension'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SimplifiedOAuthTwigExtension(($this->services['OpenEMR\\Common\\Auth\\OpenIDConnect\\Repositories\\ScopeRepository'] ?? ($this->services['OpenEMR\\Common\\Auth\\OpenIDConnect\\Repositories\\ScopeRepository'] = new \OpenEMR\Common\Auth\OpenIDConnect\Repositories\ScopeRepository())), ($this->services['OpenEMR\\Services\\LogoService'] ?? ($this->services['OpenEMR\\Services\\LogoService'] = new \OpenEMR\Services\LogoService())), ($this->services['config'] ?? $this->get('config', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SmartAppClientService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SmartAppClientService
     */
    protected function getSmartAppClientServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\SmartAppClientService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\SmartAppClientService(($this->services['config'] ?? $this->get('config', 1)));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\TaskFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\TaskFHIRResourceService
     */
    protected function getTaskFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\TaskFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\TaskFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\QuestionnairePortalTaskFHIRResourceService'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\QuestionnairePortalTaskFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\QuestionnairePortalTaskFHIRResourceService())), ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\AssignmentTaskFHIRResourceService'] ?? $this->getAssignmentTaskFHIRResourceServiceService()));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\AssignmentTaskFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\AssignmentTaskFHIRResourceService
     */
    protected function getAssignmentTaskFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\AssignmentTaskFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\AssignmentTaskFHIRResourceService(($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] ?? ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\AssignmentRepository'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\AssignmentRepository())));
    }

    /**
     * Gets the public 'OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\QuestionnairePortalTaskFHIRResourceService' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\QuestionnairePortalTaskFHIRResourceService
     */
    protected function getQuestionnairePortalTaskFHIRResourceServiceService()
    {
        return $this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Services\\Task\\QuestionnairePortalTaskFHIRResourceService'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\Task\QuestionnairePortalTaskFHIRResourceService();
    }

    /**
     * Gets the public 'OpenEMR\Services\LogoService' shared service.
     *
     * @return \OpenEMR\Services\LogoService
     */
    protected function getLogoServiceService()
    {
        return $this->services['OpenEMR\\Services\\LogoService'] = new \OpenEMR\Services\LogoService();
    }

    /**
     * Gets the public 'OpenEMR\Services\PatientService' shared service.
     *
     * @return \OpenEMR\Services\PatientService
     */
    protected function getPatientServiceService()
    {
        return $this->services['OpenEMR\\Services\\PatientService'] = new \OpenEMR\Services\PatientService();
    }

    /**
     * Gets the public 'OpenEMR\Services\QuestionnaireResponseService' shared service.
     *
     * @return \OpenEMR\Services\QuestionnaireResponseService
     */
    protected function getQuestionnaireResponseServiceService()
    {
        return $this->services['OpenEMR\\Services\\QuestionnaireResponseService'] = new \OpenEMR\Services\QuestionnaireResponseService();
    }

    /**
     * Gets the public 'OpenEMR\Services\QuestionnaireService' shared service.
     *
     * @return \OpenEMR\Services\QuestionnaireService
     */
    protected function getQuestionnaireServiceService()
    {
        return $this->services['OpenEMR\\Services\\QuestionnaireService'] = new \OpenEMR\Services\QuestionnaireService();
    }

    /**
     * Gets the public 'Twig\Environment' shared service.
     *
     * @return \Twig\Environment
     */
    protected function getEnvironmentService()
    {
        return $this->services['Twig\\Environment'] = ($this->services['OpenEMR\\Modules\\DiscoverAndChange\\Assessments\\Factory\\TwigEnvironmentFactory'] ?? $this->getTwigEnvironmentFactoryService())->__invoke();
    }

    /**
     * Gets the public 'crypto' shared service.
     *
     * @return \OpenEMR\Common\Crypto\CryptoGen
     */
    protected function getCryptoService()
    {
        return $this->services['crypto'] = new \OpenEMR\Common\Crypto\CryptoGen();
    }

    /**
     * Gets the public 'sanitizer' shared service.
     *
     * @return \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\HTMLSanitizer
     */
    protected function getSanitizerService()
    {
        return $this->services['sanitizer'] = new \OpenEMR\Modules\DiscoverAndChange\Assessments\Services\HTMLSanitizer();
    }
}
